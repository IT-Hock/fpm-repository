{"name":"vish","repository":"https://github.com/Wesmania/vish","description":"A bunch of vim-style shortcuts for fish shell","tags":[],"author":"Wesmania","image":"","stars":3,"forks":1,"issues":0,"updated":1657310901,"latest_version":null,"versions":[],"license":"","dependencies":null,"readme":"# vish\nA handful of conveniences for anyone using Fish extensively, with some vim-like syntax.\n- `\u003cLeader\u003e` - `\u003cregister\u003e` - `\u003caction\u003e` vim-like mnemonics.\n- Register sets for common bits like working directories and commandline snippets,\n- Statusline toggles, clipboard registers, assorted features.\n- Extensible - define your own registers and bindings.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n\n## Installation\n\nVish is available as a package in [oh-my-fish](https://github.com/oh-my-fish/oh-my-fish). Once you have oh-my-fish set up, just run:\n\n```\nomf install vish\n```\n\n## Demo\n\n![Demo Animation](../readme/demo.gif?raw=true)\n\n## Configuration\n\n* Set the following variables in your config.fish, before omf hooks:\n  * `_VISH_ESCAPE` to the terminal sequence you want to be your \"leader\" key. By default it's set to `\\e'`.\n  * `VISH_FEATURES` (array) to the set of features you want. Default is `dirs prefices prompt misc`, add `tmux` if you use it.\n  * If you use tmux, set `_VISH_PROMPT_MAGIC_CHAR` to a character that only appears in your prompt. This helps some keybindings identify your prompt in tmux panes.\n\n## Usage\n\nVish uses modal key sequences, kind of like vim does. All sequences start with the leader key `\u003cL\u003e`, then use some sequence of register names and commands, usually `\u003cregister\u003e\u003ccommand\u003e`. For example, `\u003cL\u003e\u003cL\u003eh` calls `history --merge`, while `\u003cL\u003eam` saves current directory to register a. Here's a few sequences I commonly use:\n\n* `\u003cL\u003eam` saves current directory to register a. `\u003cL\u003eag` goes to directory under register a. `\u003cL\u003e=m` lists all saved directories.\n* `\u003cL\u003e*p` saves current commandline contents to selection buffer.\n* `\u003cL\u003e*a` appends selection buffer to commandline.\n* With tmux, `\u003cL\u003e-1la` appends last line of command output to commandline.\n\nTo list all configured bindings with brief descriptions, run `vish_help`.\n\n### Registers\n\nVish defines registers from a to z, plus some special registers. Unlike vim, there can be multiple sets of registers a-z, e.g. one for directories, one for commands etc, with each keybinding implicitly using one of them. Registers are **UNIVERSAL** and are shared between all shells. Special registers are shared by all keybindings, and by default are as follows:\n\n* `0` is the \"implicit\" register.\n* `*` and `+` are equivalents of vim clipboard registers. For convenience they're also mapped under `,` and `.`, respectively.\n* Additionally, `\u003cL\u003ea*` and `\u003cL\u003ea+` bindings copy register 'a' to the clipboard register.\n\nEach register set is bound to a letter. For a set bound to a letter `\u003cx\u003e`, `\u003cL\u003ea\u003cx\u003e` sets register a, `\u003cL\u003ea-\u003cx\u003e` clears it and `\u003cL\u003e=\u003cx\u003e` lists all letters in a set.\n\n### Feature: directories\n\nEnabled by `dirs` in `VISH_FEATURES`. Defines a \"dirs\" register set under letter m.\n\n- `\u003cL\u003eam` saves current directory to register a.\n- `\u003cL\u003eag` goes to directory under register a. Try `\u003cL\u003e*g` for going to directory saved to clipboard.\n\n### Feature: commands\n\nEnabled by `prefices` in `VISH_FEATURES`. Defines a \"prefices\" register set under letter p.\n\n- `\u003cL\u003eap` to save current commandline to register a.\n- `\u003cL\u003eaa` to append contents of register a to commandline.\n- `\u003cL\u003eax` to execute contents of register a.\n- `\u003cL\u003eaz` to prepend contents of register a at every prompt, `\u003cL\u003eaz` again to turn it off.\n\n### Feature: misc bindings\n\nEnabled by `misc` in `VISH_FEATURES`.\n\n- `\u003cL\u003e\u003cL\u003eh` calls `history --merge`.\n\n### Feature: prompt\n\nEnabled by `prompt` in `VISH_FEATURES`.\n\nFor `fish_prompt`:\n- `_vish_prompt_path` prints current directory in short or long format. `\u003cL\u003e\u003cL\u003es` toggles the format.\n\nFor `fish_right_prompt`:\n- `_vish_right_prompt_git_branch` prints current git branch. `\u003cL\u003e\u003cL\u003eg` toogles it on or off.\n- `_vish_right_prompt_status` prints return code of last command.\n- `_vish_right_prompt_states` prints useful status info. At the moments it prints `j` if there are background jobs and `I` if ping mode is enabled.\n\nEach right prompt function can be toggled by calling `_vish_prompt_toggle GIT_BRANCH/PING/SHORT_PATH`, e.g. in your config.fish.\n\n`\u003cL\u003e\u003cL\u003ei` toogles ping mode on and off.\n- When ping mode is on, fish will run a `_vish_ping` function, if defined, after long-running commands. It's up to you to define `_vish_ping`.\n- Any command that matches a regex in `$VISH_INTERACTIVE_CMDS` array will be considered interactive and `_vish_ping` won't be called.\n- By default any command that runs 10 seconds or longer is long-running. You can change that nubmer by defining `$VISH_COMMAND_PING_MIN_TIME`.\n\n### Feature: tmux\n\nEnabled by `tmux` in `VISH_FEATURES`.\n\n- `\u003cL\u003et\u003cx\u003e` for various tmux shortcuts, see `vish_help`. In particular `\u003cL\u003ett` autocompletes word under cursor, searching in current window's panes.\n- `\u003cL\u003e\u003cN\u003el` to copy lines from last command's output to register 0, then wait for another keybinding. For example:\n  - `\u003cL\u003e-1la` to copy first line from the bottom to prompt.\n  - `\u003cL\u003e3l+` to copy third line from the top to clipboard.\n- `\u003cL\u003e\u003cN\u003eg` to copy current directory from pane N to register 0, then wait for another keybinding. For pane 0, use -1.\n\n### Functions\n\n- `vish_help` - list all bindings.\n\n## Custom bindings and scripting\n\nIt's possible to define your own registers and bindings and do some limited scripting. For details, see `custom.md`.\n","activity":null,"contributors":[{"avatar":"https://avatars.githubusercontent.com/u/4634112?v=4","name":"Wesmania"},{"avatar":"https://avatars.githubusercontent.com/u/2112697?v=4","name":"scorphus"}]}
