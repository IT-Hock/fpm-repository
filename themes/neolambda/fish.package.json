{"name":"neolambda","description":"Unofficial fork üç¥ of lambda theme for oh-my-fish","image":"https://i.imgur.com/qgKd2HV.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","oh-my-fish","themes"],"author":"ipatch","repository":"https://github.com/ipatch/theme-neolambda","license":"MIT","dependencies":[],"stars":6,"forks":4,"watchers":6,"issues":2,"updated":1668632886,"full_description":"# NeoLambda\n\n\u003e The unofficial fork of the [omf][lnk1] [lambda][lnk2] theme\n\n[lnk1]: \u003chttps://github.com/oh-my-fish/oh-my-fish\u003e\n[lnk2]: \u003chttps://github.com/hasanozgan/theme-lambda\u003e\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n\n\u003ca id=\"featurecast\"\u003e\u003c/a\u003e\n\n## Featurecast üé•\n\n[![asciicast](https://asciinema.org/a/211469.svg)](https://asciinema.org/a/211469)\n\n## Gif\n\n\u003cdetails\u003e\n\u003csummary\u003eAn animated GIF deoming some of the features provided by this theme\u003c/summary\u003e\n\u003cimg src=\"https://i.imgur.com/qgKd2HV.gif\" width=\"640\"\u003e\n\u003c/details\u003e\n\u003cbr\u003e\n\u003cbr\u003e\n\n\u003e To avoid [double printing](https://raw.githubusercontent.com/ipatch/theme-lambda/master/lib/virtualenv-double-prompt.png) of the virtualenv name in prompt add the below to `config.fish`\n\n```shell\nset -gx VIRTUAL_ENV_DISABLE_PROMPT 1\n```\n\n\u003ca id=\"install\"\u003e\u003c/a\u003e\n\n## Install\n\n\u003ca id=\"install-omf\"\u003e\u003c/a\u003e\n\n### [Oh-My-Fish](https://github.com/oh-my-fish/oh-my-fish)\n\n```shell\necho \"install omf first\"\ncurl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install | fish\n\nomf install neolambda\n```\n\n## Testing new features\n\nthe quickest way i found to test a PR or feature is to pull in a docker container, for my use case `archlinux` and then install `which`, and `git` using pacman followed by omf and this theme `neolambda`.\n\n## TODOs\n\n\u003ca name=\"todos\"\u003e\u003c/a\u003e\n\n- [ ] when working with cmake based projects and out of source build dirs it'd be nice to print the current git branch within the build dir for managing multi build dirs and git forks with branches\n- [ ] look into creating project based icons, ie. replace `Œª` with a green box if inside a node project, ie. if the shell/theme detects a `package.json` file. \n- [ ] use command+right-arrow to toggle the display of the `fish_right_prompt.fish`\n    - or possible control+\\\n- [ ] experiment with creating an animated svg to replace / complement the animated gif\n  `cat myrecrod.cast | svg-term --out myrecord.svg --window`\n- [ ] when working with subshells add a super/sub script to the `Œª` to aid in knowing which subshell _one_ is working in \n"}