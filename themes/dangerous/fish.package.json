{"name":"dangerous","description":"A feature-rich theme derived from budspencer without powerline font.","image":"https://raw.githubusercontent.com/tannhuber/media/master/dangerous.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-dangerous","license":"","dependencies":[],"stars":31,"forks":7,"watchers":31,"issues":9,"updated":1667590089,"full_description":"# Dangerous theme\n\nA theme for the 70s, makes fish even more powerful. It's equipped with a hell\nof a lot of nice functions and key bindings to speed up your workflow.\n\nThe philosophy behind dangerous theme:\n\n* Delimit the prompt lines clearly to the output.\n* Produce output only if it contains relevant information.\n* Show useful notifications within the prompt.\n* Equip the prompt with toggle commands in order to change its style\n  interactively.\n* Store sessions in order to make frequently used commands quickly accessible.\n* Make navigation within the directory tree as easy as possible using\n  bookmarks and a directory history without duplicates.\n* Make histories quickly accessible with menus.\n* Don't stress your eyes. Use different colors in dark and bright environments.\n\n## Screenshot\n\n![screenshot][screenshot]\n\n## Requirements\n\nYou need an up-to-date fish shell version from [github][fish-git] or a\n[nightly build][fish-nightly].\n\nNon standard tools:\n\n* xsel\n* wmctrl\n* git\n* [taskwarrior][taskwarrior] (optional)\n* [remind][remind] (optional)\n\n## Configuration\n\n### General configuration\n\nIt's crucial to have vi mode enabled. Thus, execute\n```\nset -U fish_key_bindings fish_vi_key_bindings\n```\nbefore enabling the theme.\n\n### Colors\n\nRedefine `$dangerous_colors` with the `set` command in order to change the\ncolors of the prompt.\n\nExample:\n```\nset dangerous_colors 000000 333333 666666 ffffff ffff00 ff6600 ff0000 ff0033 3300ff 0000ff 00ffff\n00ff00\n```\n\nTwo color schemes for bright and dark environments are predefined. You can\nenable them with `day` and `night`, respectively.\n\n### Command history\nCommands that shouldn't appear in the command history are defined by a universal\nlist `$dangerous_nocmdhist`. Default:\n```\nset -U dangerous_nocmdhist c d ll ls m s\n```\n\n### Disable/reenable greeting\n\nDisable:\n```\nset -U dangerous_nogreeting\n```\n\nReenable:\n```\nset -e dangerous_nogreeting\n```\n\n## Outer prompt segments\n\n- Vi mode is indicated by color of outer segments, cursor color also changes\n  if terminal supports it:\n    * blue: NORMAL mode\n    * yellow: INSERT mode\n    * magenta: VISUAL mode\n\n## Left prompt segments\n\n- Prompt line number\n- Git repository information\n- Status symbols\n    * ✻: keep track of this shell session, can be toggled with `#` to show the number of\n       the session within the sessions list\n    * ⌘: present working directory is in bookmark list, can be toggled with `#` to\n        show the number of the bookmark\n    * V: vi is parent process\n    * R: [ranger][ranger] is parent process\n    * ⚙: there are background jobs, can be toggled with `#` to show the amount of\n        background jobs\n    * : no write permissions in present working directory\n    * ⚔: there are tasks scheduled for this week, can be toggled with `#` to\n        show the amount of weekly tasks\n    * ⚑: there are appointments for today, can be toggled with `#` to\n        show the amount of appointments\n    * ✔: last command succeeded, can be toggled with `#` to show the status value\n    * ✘: last command failed, can be toggled with `#` to show the status value\n    * ⚡: superuser indicator\n- Present working directory\n\n## Right prompt segments\n\n- Last command's duration time\n- Git status symbols:\n    * ↑: git repository is ahead origin\n    * ↓: git repository is behind origin\n    * +: changes have been added to git index\n    * –: files have been deleted in work tree\n    * ✱: files have been modified in work tree\n    * →: files have been renamed in git index\n    * ═: there are unmerged commits\n    * ●: there are untracked (new) files\n    * ✭: there are stashed commits\n\n## Toggle prompt segments\n\nThe following shortcuts need vi-mode:\n- Style of segments can be toggled in NORMAL and in VISUAL mode with space bar\n    * styles implemented for present working directory segment:\n        - `short` (shows username, short hostname and truncated path; recommended in\n          most cases)\n        - `long` (shows username, full hostname and full path; useful for copy-paste\n          in ssh connections)\n        - `none` (shows nothing except small delimiter; useful for small terminals)\n        - If prompt is toggled with `#`, the IP address is shown instead of the\n          hostname.\n    * configurable by universal list `$dangerous_pwdstyle` (if not set, defaults to\n      `short long none`); note that changes to `$dangerous_pwdstyle` keep persistant as it's\n      a universal variable.\n    * The other segments are hidden in case `$pwd_style` is `none`.\n\n- Style of symbols can be toggled in NORMAL and in VISUAL mode with `#`\n    * styles implemented:\n        - `symbols` (shows status symbols)\n        - `numbers` (shows numbers instead of symbols in left prompt as well as amount of changes in\n          right git prompt)\n\nNote, the format is _username@hostname:pathname_. Thus, you can cut\nthe whole string with your mouse and paste it into `ssh` commands.\n\n## Quickly navigate in history of working directories\n\nThe function `d` drops down a menu showing the history as enumerated list. Unlike\nfish's builtin `dirh`, `d` does not show any duplicates. Enter a number to jump\nto a directory within the list.\n\nThe following shortcuts need vi-mode:\n- Press `H` in NORMAL mode to change present working directory to previous\n  working directory in history.\n- Press `L` in NORMAL mode to change present working directory to next working\n  directory in history.\n\n## Quickly navigate in command history\n\nThe function `c` drops down a menu showing the command history as enumerated list similarly to\nthe `d` function. Selections are also pasted into the X clipboard. It's possible\nto load a command of a former prompt by giving the prompt line number as\nargument.\n\n## Bookmarks\n\nA bookmark can be created with `mark`. It can be removed with `unmark`.\nBookmarks are universal and thus persistant.\nA new shell automatically changes working directory on startup to newest bookmark.\n`m` is a function that drops down a menu showing the bookmarks as enumerated list\nequivalently to `d`.\n\nThe following shortcuts need vi mode:\n- Create a bookmark for present working directory with `m` in NORMAL mode.\n- Remove a bookmark for present working directory with `M` in NORMAL mode.\n\n## Edit commandline with your favorite editor\n\nThe function `edit-commandline` lets you edit the commandline with your editor.\nIt makes the commandline as powerful as your editor. If `$EDITOR` is not set,\nvi is used.\n\nThe following shortcut needs vi mode:\n- Type `.` in NORMAL mode to edit commandline in editor.\n\n## Sessions\n\nShell session can be stored with `s \u003csession name\u003e`. If a session with `session\nname` already exists, the session with this name will be attached. If a session with\n`session name` is already active within another terminal, this terminal will be\nfocussed.\n\nA list of available sessions can be shown with `s`.\n\nA session can be erased with `s -e \u003csession name\u003e`.\n\nType `s -d` to detach current session.\n\n## Set window title\n\nJust type `wt \u003ctitle\u003e`.\n\n## TODO\n\n- vi REPLACE mode, as soon as REPLACE mode is implemented within fish\n\n## Feedback\n\nGive me feedback if you ...\n* ... have ideas how I could improve dangerous.\n* ... have problems with dangerous. \n* ... have questions concerning dangerous.\n\n[ranger]: http://ranger.nongnu.org/\n[taskwarrior]: http://taskwarrior.org/\n[remind]: http://www.roaringpenguin.com/products/remind\n[fish-git]: https://github.com/fish-shell/fish-shell.git\n[fish-nightly]: https://github.com/fish-shell/fish-shell/wiki/Nightly-builds\n[screenshot]: https://raw.githubusercontent.com/tannhuber/media/master/dangerous.gif\n"}