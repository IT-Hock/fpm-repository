{"name":"syl20bnr","description":"","image":"https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-home2.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-syl20bnr","license":"MIT","dependencies":[],"stars":1,"forks":3,"watchers":1,"issues":1,"updated":1665717509,"full_description":"# syl20bnr theme\n\nA semi-compact oh-my-fish theme with [nice support for git](#git).\n\nThe theme has been tested on `Ubuntu 14.04 (Trusty)` and `Mac OS X 10.10 (Yosemite)`.\nIt is also compatible with [Cygwin with the appropriate packages](#cygwin-compatibility).\n\n**Table of Contents**  *generated with [DocToc](http://doctoc.herokuapp.com/)*\n\n- [Segments](#segments)\n\t- [pwd: Compact current working directory](#pwd-compact-current-working-directory)\n\t\t- [Examples](#examples)\n\t- [git](#git)\n\t\t- [Examples](#examples-1)\n\t- [vi-mode](#vi-mode)\n\t- [end](#end)\n\t- [where](#where)\n- [Functions](#functions)\n- [Mac compatibility](#mac-compatibility)\n- [Cygwin compatibility](#cygwin-compatibility)\n\n## Segments\n\n### pwd: Compact current working directory\n\nThe `pwd` segment format is `X:P(N)` where:\n- `X` is either `home` or `/`\n- `P` is the current working path base name (name of the current directory)\n- `N` is the depth of the path starting from `X`\n\nIf the `pwd` is `home` or `/` then the prompt format is simplified to `home`\nand `/` respectively without the current directory and depth.\n\n#### Examples\n\nIn home directory:\n![home](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-home2.png)\n\nInside a directory in home:\n![inside_home](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-inside-home.png)\n\nOutside the home directory:\n![outside_home](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-outside-home.png)\n\n### git\n\nIf the current directory is a [git][git] repository then the `pwd` segment is\nreplaced by the `git` segment (I should know where I am).\n\nThe `git` segment format is `X:YI@Z:P(N)` where:\n- `X` is `git`\n- `Y` is the current branch name\n- `I` is some information about the current repository state\n- `Z` is the name of the repository\n- `P` is the current working path basename (name of the current directory)\nIf `P` = `Z` then `P(N)` is not displayed\n- `N` is the depth of the path starting from base directory of the repository\n\nThe displayed information `I` is:\n- Unpushed commits are indicated with an up arrow like this `[↑1]`\n- Unmerged fetched commits are indicated with a down arrow like this `[↓1]`\n\n**Note:** The dirtiness of the current branch is indicated by its color:\n- red: it is dirty\n- green: it is up to date\n\n**Note:** The unmerged commits count appears only if the changes in the\nupstream branch as been fetched.\n\n#### Examples\n\nDirty (changes not committed):\n\n![dirty](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-dirty2.png)\n\nUnpushed commits:\n\n![unpushed_commits](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-unpushed.png)\n\nUnmerged commits:\n\n![unmerged_commits](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-unmerged.png)\n\nBoth unpushed and unmerged commits:\n\n![unmerged_commits](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-unpushed_unmerged.png)\n\nIn a sub-directory of the repository:\n\n![repo_subdir](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-subdir2.png)\n\n### vi-mode\n\nThis segment display the current `vi-mode` if the fish native vi mode or\nthe oh-my-fish vi-mode plugin is used.\nSee the `[n]` in the previous screenshots.\n\n### end\n\nThe color of the end of the prompt depends on the `$status` value of the\nlast executed command. It is `green` or `red` depending on the success or\nfailure of the last command.\n\nSince I often use [ranger][ranger] and its `shift+s` key binding to bring\na new child shell session, there is a discreet indicator when the parent\nprocess of the current shell is a `ranger` process: the end of the prompt\nis written twice (ie: `\u003e\u003e` instead of just `\u003e`).\nWith this indicator I quickly see if I can `ctrl+d` to end the current shell\nprocess and go back to the parent `ranger` process.\n\n### where\n\nThe `where` segment format is `X@Y` where:\n- `X` is the user name\n- `Y` is the host name\n\nThis segment is displayed in the right prompt.\n\n## Functions\n\nSome functions come with the theme:\n- `toggle_right_prompt` will... toggle the right prompt! (alias: `trp`)\n\n## Mac compatibility\n\nIn order to make this theme work correctly with all the features make sure to\ninstall the following packages via MacPorts or Homebrew:\n-`pstree` (used in ranger detection)\n\n## Cygwin compatibility\n\nIn order to make this theme work on [Cygwin][cygwin], make sure to install the following\npackages:\n- `bc` for `math` fish function\n- `psmisc` for `pstree` (used in ranger detection)\n- `git` if you want to use the `git` segment.\n\n[git]: http://git-scm.com/\n[ranger]: http://ranger.nongnu.org/\n[cygwin]: http://cygwin.com/\n"}