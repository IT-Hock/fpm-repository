{"name":"bass","repository":"https://github.com/edc/bass","description":"Make Bash utilities usable in Fish shell","tags":[],"author":"edc","image":"","stars":1875,"forks":68,"issues":12,"updated":1674939283,"latest_version":{"version":"v1.0","description":"v1.0","commit_hash":"master","release_date":1532067765},"versions":[{"version":"v1.0","description":"v1.0","commit_hash":"master","release_date":1532067765}],"license":"","dependencies":null,"readme":"# Bass\n\n![](https://travis-ci.org/edc/bass.svg?branch=master)\n\nBass makes it easy to use utilities written for Bash in [fish shell](https://github.com/fish-shell/fish-shell/).\n\nRegular bash scripts can be used in fish shell just as scripts written in any language with proper shebang or explicitly using the interpreter (i.e. using `bash script.sh`). However, many utilities, such as virtualenv, modify the shell environment and need to be sourced, and therefore cannot be used in fish. Sometimes, counterparts (such as the excellent [virtualfish](http://virtualfish.readthedocs.org/en/latest/)) are created, but that's often not the case.\n\nBass is created to make it possible to use bash utilities in fish shell without any modification. It works by capturing what environment variables are modified by the utility of interest, and replay the changes in fish.\n\nYou might not need Bass for simple use cases. A great simple alternative (suggested by @jorgebucaran) is to just use `exec bash -c \"source some-bash-setup.sh; exec fish\"`.\n\n# Installation\n\nBass is compatible with fish versions 2.6.0 and later.\n\n\n## Manually\n\nUse the Makefile.\n\n`make install` will copy two files to `~/.config/fish/functions/`.\n\n`make uninstall` will remove those two files.\n\nRelaunch the shell for the change to take effect.\n\n## With [Oh My Fish](https://github.com/oh-my-fish/oh-my-fish)\n\n```console\nomf install bass\n```\n\n## With [Fisher](https://github.com/jorgebucaran/fisher)\n\n```console\nfisher install edc/bass\n```\n\n## With [Fundle](https://github.com/tuvistavie/fundle)\n\nAdd\n\n```console\nfundle plugin 'edc/bass'\n```\n\nto your fish config, relaunch the shell and run `fundle install`.\n\n# Example\n\nBass is simple to use. Just prefix your bash utility command with `bass`:\n\n```\n\u003e bass export X=3\n\u003e echo $X\n3\n```\n\nNotice that `export X=3` is bash syntax. Bass \"transported\" the new bash\nenvironment variable back to fish.\n\nBass has a debug option so you can see what happened:\n\n```\n\u003e bass -d export X=4\n# updating X=3 -\u003e 4\nset -g -x X 4\n```\n\n## nvm\n\nHere is a more realistic example, using the excellent\n[nvm](https://github.com/creationix/nvm):\n\n```\n\u003e bass source ~/.nvm/nvm.sh --no-use ';' nvm use iojs\nNow using io.js v1.1.0\n```\n\nNote that semicolon is quoted to avoid being consumed by fish.\n\nThis example takes advantage of the nvm bash utility to switch to iojs.\nAfter the command, iojs is accessible:\n\n```\n\u003e which iojs\n/Users/edc/.nvm/versions/io.js/v1.1.0/bin/iojs\n```\n\nYou can then very easily pack the command as a function and feel more at home:\n\n```\n\u003e funced nvm\nnvm\u003e function nvm\n           bass source ~/.nvm/nvm.sh --no-use ';' nvm $argv\n       end\n\n\u003e nvm list\n-\u003e  iojs-v1.1.0\n         system\n\u003e nvm ls-remote\n        v0.1.14\n        v0.1.15\n...\n```\n\n(`--no-use` is an important option to `nvm.sh`. See [#13](https://github.com/edc/bass/issues/13) for background.)\n","activity":null,"contributors":[{"avatar":"https://avatars.githubusercontent.com/u/426889?v=4","name":"edc"},{"avatar":"https://avatars.githubusercontent.com/u/4909079?v=4","name":"daveyarwood"},{"avatar":"https://avatars.githubusercontent.com/u/5678977?v=4","name":"tbodt"},{"avatar":"https://avatars.githubusercontent.com/u/887196?v=4","name":"evanrelf"},{"avatar":"https://avatars.githubusercontent.com/u/56996?v=4","name":"jorgebucaran"},{"avatar":"https://avatars.githubusercontent.com/u/11988145?v=4","name":"junaid-shahid"},{"avatar":"https://avatars.githubusercontent.com/u/305618?v=4","name":"paparomeo"},{"avatar":"https://avatars.githubusercontent.com/u/181961?v=4","name":"alex7kom"},{"avatar":"https://avatars.githubusercontent.com/u/237005?v=4","name":"rouge8"},{"avatar":"https://avatars.githubusercontent.com/u/2544673?v=4","name":"FabioAntunes"},{"avatar":"https://avatars.githubusercontent.com/u/180326?v=4","name":"jimt"},{"avatar":"https://avatars.githubusercontent.com/u/6473925?v=4","name":"josephfrazier"},{"avatar":"https://avatars.githubusercontent.com/u/791698?v=4","name":"CrshOverride"},{"avatar":"https://avatars.githubusercontent.com/u/12584?v=4","name":"nirvdrum"},{"avatar":"https://avatars.githubusercontent.com/u/456007?v=4","name":"kouk"},{"avatar":"https://avatars.githubusercontent.com/u/25719815?v=4","name":"maxathanja"},{"avatar":"https://avatars.githubusercontent.com/u/208523?v=4","name":"Markcial"},{"avatar":"https://avatars.githubusercontent.com/u/14072028?v=4","name":"zavorka"},{"avatar":"https://avatars.githubusercontent.com/u/22345027?v=4","name":"neominik"},{"avatar":"https://avatars.githubusercontent.com/u/2450982?v=4","name":"popbones"},{"avatar":"https://avatars.githubusercontent.com/u/526598?v=4","name":"shouya"}]}
