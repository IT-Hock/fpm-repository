{"name":"foreign-env","description":"Run foreign bash scripts and capture exported environment variables","image":"https://github.com/oh-my-fish/plugin-foreign-env/actions/workflows/test.yml","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-foreign-env","license":"MIT","dependencies":[],"stars":175,"forks":12,"watchers":175,"issues":10,"updated":1672334490,"full_description":"\u003cimg src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Foreign Environment\n\u003e A foreign environment interface for Fish shell\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n[![test](https://github.com/oh-my-fish/plugin-foreign-env/actions/workflows/test.yml/badge.svg)](https://github.com/oh-my-fish/plugin-foreign-env/actions/workflows/test.yml)\n\n\u003cbr/\u003e\n\nForeign environment wraps application execution in a way that environment variables that are exported or modified get imported back into fish. This makes possible running popular bash scripts, like the excellent `nvm`.\n\n\n# Install\n\nBe sure to have [Oh My Fish][omf-link] installed, so you just need to:\n\n```fish\nomf install foreign-env\n```\n\nIf you dislike shell frameworks, you can still use Foreign Environment in Fish! Clone this repo somewhere and append to your `~/.config/fish/config.fish`:\n\n```fish\nset fish_function_path $fish_function_path \u003cinsert path to foreign-env repo\u003e/functions\n```\n\n\n# Usage examples\n\nYou can use bash syntax to export variables:\n\n```fish\nfenv export PYTHON=python2\n```\n\nThis will have the same effect as typing:\n\n```fish\nset -g -x PYTHON python2\n```\n\nYou can also call multiple commands, separated by semicolon:\n\n```fish\nfenv source ~/.nvm/nvm.sh \\; nvm --help\n```\n\nWhen commands aren't double quoted, you need to escape semicolon with slash `\\;` to prevent fish from interpreting it. Or just quote the whole command:\n\n```fish\nfenv \"source ~/.nvm/nvm.sh; nvm --help\"\n```\n\n\n# Caveats\n\n* Currently we only handle environment variables that are added or modified. If a variable is unset (removed from environment) it will not be removed from fish.\n\n# License\n\n[MIT][mit] Â© [Derek Willian Stavis][author]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/derekstavis\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n"}