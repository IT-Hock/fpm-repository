{"packages":{"Doch":{"name":"Doch","description":"Repeat the last command, but as sudo. An Oh My Fish plugin.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":null,"tags":["fish shell","oh-my-fish","plugin"],"author":"Oh My Fish","repository":"https://gitlab.com/ohmyfish/doch","license":"Unknown","dependencies":null,"stars":0,"forks":0,"watchers":0,"issues":1,"updated":0,"full_description":"","repository_updated":0},"MakeMeFish":{"name":"MakeMeFish","description":"Easing the usage of make and Makefiles","image":"https://raw.githubusercontent.com/OakNinja/MakeMeFish/master/docs/mm.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["cmake","fish","fish-packages","fish-plugin","fisher","fzf","gnumake","make","makefile","makefiles","omf-plugin"],"author":"OakNinja","repository":"https://github.com/OakNinja/MakeMeFish","license":"MIT","dependencies":[],"stars":26,"forks":3,"watchers":26,"issues":0,"updated":1668755728,"full_description":"\u003cimg src=\"https://github.com/OakNinja/MakeMeFish/raw/master/docs/logo.png\" width=\"350\" title=\"MakeMeFish Logo\"\u003e\n\n[![Demo](https://github.com/OakNinja/MakeMeFish/raw/master/docs/mm.gif)](https://github.com/OakNinja/MakeMeFish/raw/master/docs/mm.gif)\n\nMakeMeFish simplifies the usage of Makefiles by providing quick navigation and searching through make targets.\n\n## Features\n\n- **Type ahead searching** - just write a few characters to filter out the targets you are looking for\n- **Preview** - When selecting a target, an excerpt of the target will be shown in the makefile, with match highlighting\n- **Snappy** - fzf-ingly fast!\n\n## Prerequisities\n\n- Fish shell 3+\n- fzf https://github.com/junegunn/fzf#installation\n\nDon't use fish? Get in touch if you want MakeMe support in your shell.\n\n## Install using omf\n\n`omf install makeme`\n\n## Install using fisher\n\n`fisher add oakninja/MakeMeFish`\n\nor\n\n`fisher add oakninja/MakeMeFish@next-release`\n\nto get the latest version.\n\nit's also possible to get the previous version by running\n\n`fisher add oakninja/MakeMeFish@previous-version`\n\n## Install manually\n\nDownload and copy `mm.fish` to `~/.config/fish/functions`\n\nor run\n\n`curl https://raw.githubusercontent.com/OakNinja/MakeMeFish/master/mm.fish?nocache --create-dirs -sLo ~/.config/fish/functions/mm.fish`\n\n## Usage\n\n_Basic usage:_\ntype `mm`, if there is a Makefile in the current working directory, all targets will be listed. Start typing to filter targets.\n\n_Parameters:_\n\n- `-h` or `--help` to print the help.\n- `-f \u003cfilename\u003e` to specify a makefile if you have several in the cwd, or if you have a non-standard name.\n- `-i` to start MakeMefish in interactive mode. In interactive mode, the selected target will be executed and you will then be returned to the selection prompt. Please note that executed commands won't be added to your command history.\n- `\u003cfoo\u003e` eg. add an arbitrary keyword to start MakeMeFish with a pre-populated query (editable at runtime)\n\n## Examples\n\n`mm build` will start `MakeMeFish` with an initial query which will filter for targets containing the substring `build`.\nSimilarly, `mm foo bar` will filter on targets containing both `foo` and `bar`\n\n---\n\n`mm -f MyFancyMakeFile` will start `MakeMeFish` and parse the file `MyFancyMakeFile` instead of trying to find a makefile with a GNU make standard name.\n\n---\n\n`mm -i` will run `MakeMeFish` in interactive mode\n\n---\n\n_All flags and parameters can be combined, and added in any order, eg._\n\n`mm foo -i -f MyFancyMakeFile` is equivalent to `mm -f MyFancyMakeFile foo -i`\n","repository_updated":0},"age":{"name":"age","description":"A fish plugin to get next version from git tag (e.g. v1.0.0)","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-plugin"],"author":"nju33","repository":"https://github.com/nju33/fish-age","license":"MIT","dependencies":[],"stars":1,"forks":0,"watchers":1,"issues":0,"updated":1594570820,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### age\n\n\u003e To get next version from git tag (e.g. v1.0.0)\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install age\n```\n\n## Usage\n\n```sh\n$ git tag\nv0.0.1\n\n$ age --major\nv1.0.0\n\n$ age --minor\nv0.1.0\n\n$ age --patch\nv0.0.2\n```\n","repository_updated":0},"android-sdk":{"name":"android-sdk","description":"Android SDK integration.","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-android-sdk","license":"MIT","dependencies":[],"stars":9,"forks":5,"watchers":9,"issues":0,"updated":1658318088,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Android SDK\n\u003e Setup ANDROID_HOME and add SDK tools to your PATH.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install android-sdk\n```\n\n# License\n\n[MIT][mit] © [Oh My Fish][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/oh-my-fish\n[contributors]:   https://github.com/oh-my-fish/plugin-android-sdk/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"apt":{"name":"apt","description":"Short and friendly command wrapper for APT","image":"","latest_version":{"version":"v1.0.1","description":"Trust me.\n","commit_hash":"master","release_date":1443820180},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"Trust me.\n","release_date":1443820180,"version":"v1.0.1"}],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-apt","license":"MIT","dependencies":[],"stars":7,"forks":5,"watchers":7,"issues":3,"updated":1639017549,"full_description":"[![License][license-badge]](#LICENSE)\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/fish-shell/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# apt\n\nPlugin for [Oh My Fish][omf-link].\n\nA lightweight APT utility for quickly managing APT packages, the package management system typically used in Debian and Ubuntu.\n\n## Install\n\n```fish\n$ omf install apt\n```\n\n\n## Usage\n\nProvides handy shortcuts for common APT commands. For example, to install `some-package`:\n\n```fish\n$ apt in some-package\n```\n\nSee `apt --help` for more commands and options.\n\n# License\n\n[MIT][mit] © [coderstephen][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/coderstephen\n[contributors]:   https://github.com/oh-my-fish/plugin-apt/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"archlinux":{"name":"archlinux","description":"Provides a number of plugins to make using Arch Linux easier.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-archlinux","license":"MIT","dependencies":[],"stars":15,"forks":5,"watchers":15,"issues":5,"updated":1656163925,"full_description":"\n# The Arch Linux Plugins\n\nThe Arch Linux Plugins provides a number of plugins to make using arch easier.\n","repository_updated":0},"argu":{"name":"argu","description":"Sane and easy to use argument parser for Oh My Fish!","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-argu","license":"MIT","dependencies":[],"stars":20,"forks":2,"watchers":20,"issues":3,"updated":1666975714,"full_description":"# `argu`: ARGument Understander\nSane and easy to use argument parser for [Oh My Fish][omf].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](LICENSE)\n\n\u003e Tired of arguing over arguments? Fear not! The ARGument Understander is here to help you understand clearly the arguments you are given and live a life of happiness.\n\nFocus on writing your function, not on argument parsing. `argu` does the hard work of parsing function arguments for you in a standard way.\n\n\n## Usage\n\n    argu \u003cdefinition\u003e... -- [ARGV...]\n\n`argu` parses a series of arguments by matching each one against a list of option definitions. A definition is simply a special string that describes how that argument is used. For example, if we had an `--awesome` flag, we could match it like this:\n\n```fish\nargu awesome -- $argv\n```\n\nIf `$argv` contained the `--awesome` flag, it would be printed out appropriately. If our utility has multiple flags and options, we can tell `argu` about all of them and have them parsed:\n\n```fish\nargu a awesome b: boring: -- $argv\n```\n\nThis defines four different options. First, we have an `-a` short flag, and a long `--awesome` flag. These are simply boolean in nature and either are present or not. We also define `b:` and `boring:`; the colon (`:`) indicates that these are options that have _values_, which accept a string associated with the option when passed. This will match something like `--boring tutorial` on the command line, where the string `tutorial` is associated with the `boring` option.\n\nWhen defined this way, our options require a value. If a value is not given, such as passing in `-b` by itself, we get an error message. If we want our option values themselves to be optional, add another colon to the end of the definition:\n\n```fish\nargu a awesome b:: boring:: -- $argv\n```\n\nWith this definition, it is OK to use `-b` or `--boring` by themselves or with an associated value.\n\nNow to use our definitions, we simply place the arguments we want to parse (usually `$argv`) after the `--` argument:\n\n```fish\n$ argu a awesome b: boring: -- --awesome -b tutorial\n--awesome\n-b tutorial\n```\n\nIf we try to put some flags into `$argv` that don't match any of our definitions, `argu` will exit and display a message for us:\n\n```fish\n$ argu a awesome b: boring: -- --verbose\nUnknown option `--verbose'.\n```\n\nIf you simply want to pass in some extra values that aren't associated with an option, you can do that too. Every such value will be associated with the underscore (`_`) special option:\n\n```fish\n$ argu a awesome b: boring: -- --awesome -b tutorial extra values\n--awesome\n-b tutorial\n_ extra\n_ values\n```\n\nWhen called, `argu` will parse the given arguments and print out each matching argument name and value. This output can be easily combined with `read` to begin acting on these values:\n\n```fish\n$ argu a awesome b: boring: -- --awesome -b tutorial | while read -l opt value\n  echo \"Option: $opt\"\n  echo \"Value: $value\"\nend\n\nOption: --awesome\nValue:\nOption: -b\nValue: tutorial\n```\n\n\n## Examples\nAn actual code example speaks a thousand words, so here's an example on how `argu` can be used to parse function arguments:\n\n```fish\nfunction my_utility\n  argu l long x: o:: optional:: -- $argv | while read -l opt value\n    switch $opt\n      case -l --long\n        echo handle `-l --long`\n      case -x\n        echo handle `-x` w/ argument `$value`\n      case -o --optional\n        echo handle `-o --optional` w/ optional argument `$value`\n      case _\n        echo operand: `$value`\n    end\n  end\nend\n```\n\n\n## Syntax\n`argu` obtains options and their arguments from a list of parameters that, as indicated by each `\u003cdefinition\u003e`, are single letters preceded by a `-` or words preceded by `--` and possibly followed by an argument value. Each definition has the following grammar:\n\n    \u003cdefinition\u003e  ::= \u003cletter\u003e \u003cvalue\u003e | \u003cword\u003e \u003cvalue\u003e\n    \u003cvalue\u003e       ::= \"\" | \":\" | \"::\"\n\nA definition beginning with `\u003cletter\u003e` defines a short option, while a definition beginning with `\u003cword\u003e` defines a long option. A short option will match `-\u003cletter\u003e`, while a long option will match `--\u003cword\u003e`.\n\nIf a `\u003cletter\u003e` or `\u003cword\u003e` is followed by a `:`, the option is expected to have an argument, which may be supplied separately or next to the option without spaces in the same string. To indicate optional arguments, use an additional `:` character after a `:` at the end of the definition.\n\nBoth required and optional values for arguments can be supplied either in the same string as the option, or in the string following the option. For short options, the value can be appended without spaces, e.g, `-\u003cletter\u003evalue`. For long options, use a `=` character after the option, e.g, `--\u003cword\u003e=value`.\n\nIn general, `argu` parses arguments according to [The Open Group Utility Syntax Guidelines][utilconv], except that it is less restrictive. The following is a summary of the features:\n\n- Short options; single letters preceded by `-`, and long options; words preceded by `--`, are both supported.\n\n- Single letters may be grouped. `-abc` → `-a -b -c`\n\n- Options required to take an argument can specify the argument either in the same string as the option or separated from the by a space. (1) `-a argument`, (2) `-aargument`\n\n- Options that can take an argument optionally shall specify the argument in the same string as the option argument if in short option style: `-aargument`, or separated by a `=` if in long form: `--long-form=argument`. If a blank space is used, the following argument will be treated independently.\n\n- Options can appear multiple times in the same argument list. `argu` will print every match sequentially on each call, and should default to the short form of the option if available.\n\n\n## Relation to getopts\n`argu` has been written from scratch with a new algorithm, to improve performance and provide more consistent parsing. It aims to replace [plugin-getopts], a separate plugin. Inspiration is drawn from this plugin, but the usage and implementation are **not** related nor compatible. See the `README` on the above plugin to compare the changes if you are migrating to `argu` from [plugin-getopts].\n\n\n## Inspiration and related links\n- [The Open Group Base Specifications: Utility Conventions][utilconv]\n- [GNU getopt](http://man7.org/linux/man-pages/man1/getopt.1.html)\n- [zparseopts](http://linux.die.net/man/1/zshmodules)\n- Credit goes to https://github.com/fishery/getopts for the `while read` idea for reading options.\n\n\n## License\n[MIT][mit] © [Stephen Coakley][author]. See the [AUTHORS](AUTHORS) file for a generated list of all contributors, and the [LICENSE](LICENSE) file for license details.\n\n\n[author]: https://github.com/coderstephen\n[getopts]: http://en.wikipedia.org/wiki/Getopts\n[mit]: http://opensource.org/licenses/MIT\n[omf]: https://www.github.com/oh-my-fish\n[plugin-getopts]: https://github.com/oh-my-fish/plugin-getopts\n[utilconv]: http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02\n","repository_updated":0},"asdf":{"name":"asdf","description":"Oh My Fish plugin for asdf","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["asdf","fish-shell","oh-my-fish","version-manager"],"author":"doughsay","repository":"https://github.com/doughsay/omf-asdf","license":"MIT","dependencies":[],"stars":7,"forks":2,"watchers":7,"issues":0,"updated":1669145302,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### asdf\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nThis plugin installs [asdf](https://github.com/asdf-vm/asdf) and initializes it using an oh-my-fish plugin. It also provides a few helper functions.\n\n## Install\n\n```fish\n$ omf install asdf\n```\n\n\n## Usage\n\n```fish\n$ asdf \u003ccommand\u003e # see asdf documentation\n```\n\nHelper function for listing all installed asdf plugins with all their respective installed versions:\n\n```fish\n$ asdf-list-all\n```\n\nHelper functions for listing all active tools and their versions. This reads from `.tool-versions` files recursively up the directory tree starting from `pwd`. It also ignores global versions defined in `~/.tool-versions`.\n\n```fish\n$ asdf-tools\n```\n\n\n# TODO\n\nIn the future I plan to have this plugin provide fish functions for determining tool versions through asdf, so theme designers can optionally include tool versions in prompts.\n\n\n# License\n\n[MIT][mit] © [Chris Dosé][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/plugin-asdf/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"autojump":{"name":"autojump","description":" Fish shell plugin for autojump integration","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["autojump","fish","omf"],"author":"rominf","repository":"https://github.com/rominf/omf-plugin-autojump","license":"MIT","dependencies":[],"stars":2,"forks":4,"watchers":2,"issues":1,"updated":1639488565,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### autojump\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nAutomatically launch `autojump` helper.\n\n## Install\n\n```fish\n$ omf install autojump\n```\n\n\n## Usage\n\nJust use `autojump` normally.\n\n# License\n\n[MIT][mit] © [Roman Inflianskas][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/plugin-autojump/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"autoproxy":{"name":"autoproxy","description":"Oh My Fish plugin to automatically set proxy settings","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","fish-shell","oh-my-fish"],"author":"zzamboni","repository":"https://github.com/zzamboni/plugin-autoproxy","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1489519988,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### autoproxy\n\u003e A plugin for [Oh My Fish][omf-link] to automatically\n\u003e set [proxy](https://github.com/oh-my-fish/plugin-proxy) settings.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.5.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Overview\n\nSet proxy settings based on the result from a user-defined command.\n\n## Install\n\n```fish\n$ omf install autoproxy\n```\n\n\n## Usage\n\nThis plugin uses\nthe [proxy](https://github.com/oh-my-fish/plugin-proxy) plugin, so you\nneed to configure it accordingly to its instructions. For example, in\n`$OMF_CONFIG/before.init.fish`:\n\n```fish\nset proxy_host proxy.corpdomain.com:8079\nset proxy_auth false\n```\n\nYou need to set `autoproxy_check_command` to a command that returns\n`true` when the proxy should be set, and `false` when it should be\nunset. This command will be executed before every command you type, so\nit should run very fast.\n\nFor example, in `$OMF_CONFIG/before.init.fish`:\n\n```fish\nset -U autoproxy_check_command \"test -f /etc/resolv.conf; and egrep -q '^(search|domain).*corpdomain.com' /etc/resolv.conf\"\n```\n\n# License\n\n[MIT][mit] © [Diego Zamboni][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/zzamboni\n[contributors]:   https://github.com/zzamboni/plugin-autoproxy/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"autovenv":{"name":"autovenv","description":"Automatically activate/deactivate Python virtual enviroments when entering/leaving a directory","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"timothybrown","repository":"https://github.com/timothybrown/fish-autovenv","license":"MIT","dependencies":[],"stars":3,"forks":9,"watchers":3,"issues":3,"updated":1666882901,"full_description":"#### AutoVenv\n[Oh My Fish][omf] plugin to automatically activate/deactivate Python virtual enviroments upon entering/leaving a directory.\n\n[![MIT License][license-badge]](/LICENSE)\n\u003c/br\u003e\n\n## Install\nInstallation with [Oh My Fish][omf]:\n\n    omf install autovenv\n\n## About\nDo you like the way Pyenv automatically switches between enviroments when you change directories and wish\nyou could do the same thing with standard Python 3 venvs? Well, now you can! No complicated scripts,\nbinaries or overhead needed; AutoVenv is a single file, pure `fish` solution.\n\n## Usage\nUpon entering a directory that contains a Python venv (or any directory *above* it) AutoVenv will automatically\nactivate it for you. Likewise, when moving *below* the venv's parent directory AutoVenv will deactivate it!\nAutoVenv can also handle cases where you move directly from one venv directory to another.\n\n## Settings\n    set -U autovenv_enable yes|no\nEnables/disables autovenv functionality.\n\n    set -U autovenv_announce yes|no\nControls whether or not a message is printed when entering/leaving/changing venvs.\n\n## License\n[MIT][mit] © [Timothy Brown][author]\n\n[author]: https://github.com/timothybrown\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[mit]: http://opensource.org/licenses/MIT\n[omf]: https://github.com/oh-my-fish/oh-my-fish","repository_updated":0},"await":{"name":"await","description":"Wait last background job with a nice progress spinner","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-await","license":"MIT","dependencies":[],"stars":12,"forks":2,"watchers":12,"issues":3,"updated":1666974701,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### await\n\u003e Wait last background job with a nice progress spinner\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install await\n```\n\n\n## Usage\n\n```fish\n$ sleep 10 \u0026\n$ await \"Sleeping...\"\n$ git pull origin master \u0026\n$ await \"Sleeping...\" '/' '\\\\' '-' '|'\n```\n\n## Known issues\n\nYou need a double \u003ckbd\u003eCtrl\u003c/kbd\u003e \u003ckbd\u003eC\u003c/kbd\u003e to get terminal cursor back.\n\n# License\n\n[MIT][mit] © [Derek W. Stavis][author]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/derekstavis\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"aws":{"name":"aws","description":"Completions and integrations with the AWS CLI","image":"https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-aws","license":"","dependencies":[],"stars":38,"forks":12,"watchers":38,"issues":2,"updated":1668447459,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### aws\n\u003e An [Oh My Fish][omf] plugin for the [Amazon Web Services CLI][aws-cli].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)][omf]\n\n\u003cbr/\u003e\n\nCurrently provides two integrations beyond just the base features of the [AWS CLI][aws-cli]:\n\n- Completions, so that you don't have to memorize the hundreds of AWS subcommands\n- Simple profile switching, so that you don't have to pass in `--profile` all the time\n\n## Install\n\n```fish\n$ omf install aws\n```\n\n\n## Usage\n\nSee the documentation for the [AWS Command Line Interface][aws-cli] on basic usage.\n\nFor profile switching, this plugin provides the `aws profile` subcommand. To switch your current profile, just provide the profile name:\n\n```fish\n$ aws profile stage\n```\n\nYou can view your current profile by passing in no additional arguments:\n\n```fish\n$ aws profile\nstage\n```\n\nThe profiles available come from your AWS credentials file (`~/.aws/credentials`). Profile switching is very rudimentary and is just a shortcut for implicitly passing the `--profile \u003cname\u003e` option. If you need more robust AWS profile management, check out the [asp] plugin by [@mgoodness](https://github.com/mgoodness).\n\nYour current profile is saved between shell sessions.\n\n\n## License\n\n[MIT][mit] © [sagebind][author] et [al][contributors]\n\n\n[asp]: https://github.com/mgoodness/plugin-asp\n[author]: https://github.com/sagebind\n[aws-cli]: https://aws.amazon.com/cli/\n[contributors]: https://github.com/oh-my-fish/plugin-aws/graphs/contributors\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[mit]: https://opensource.org/licenses/MIT\n[omf]: https://github.com/oh-my-fish/oh-my-fish\n","repository_updated":0},"balias":{"name":"balias","description":"Provide alias with auto completion.","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-balias","license":"MIT","dependencies":[],"stars":18,"forks":5,"watchers":18,"issues":5,"updated":1661414081,"full_description":"\u003cimg src=\"https://dl.dropboxusercontent.com/u/56336/omf/omf-logo-optimised.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Better Alias\n\u003e Aliases with completions for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nUse `balias` instead of `alias`,you can get same completion meanwhile you set  alias.\n\n## Install\n\n```fish\n$ omf install balias\n```\n\n## Usage\n\n```fish\n$ balias apti 'sudo apt-get install'\n$ balias gc   'git checkout'\n```\n\n# License\n\n[MIT][mit] © [Bruno Ferreira Pinto][author]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/bpinto\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"bang-bang":{"name":"bang-bang","description":"Bash style history substitution for Oh My Fish","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-bang-bang","license":"MIT","dependencies":[],"stars":103,"forks":14,"watchers":103,"issues":2,"updated":1670921562,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### !!\n\u003e Bash style history substitution for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nThis plugin wraps [Aerys Bat's implementation](https://github.com/fish-shell/fish-shell/wiki/Bash-Style-Command-Substitution-and-Chaining-(!!-!$)) of bash style history substitution.\n\n## Install\n\n```fish\n$ omf install bang-bang \n```\n\n## Usage\n\n`!!` on command line will be replaced by last command issued:\n\n```fish\n$ mv /etc/hostname /etc/hostname.old\nmv: rename /etc/hostname to /etc/hostname.old: Operation not permitted\n$ sudo !!\n```\n\n`!$` on command line will be replaced by last command arguments:\n\n```fish\n$ mkdir /tmp/test\n$ cd !$\n```\n\n## Troubleshooting\n\nIf the keybindings fail to work after installing the plugin, the issue is \nlikely because of an existing `~/.config/fish/functions/fish_user_key_bindings.fish` \nthat is overiding the plugins.\n\nThe solution is to either removing the exising file or to concat the contents of the \nplugin `functions/fish_user_key_bindings.fish` file into it.\n\n# License\n\n[MIT][mit] © [Aerys Bat][aerys-bat], [Derek Stavis][derekstavis] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[derekstavis]:    http://github.com/derek\n[aerys-bat]:      https://github.com/AerysBat\n[contributors]:   https://github.com/derek/plugin-bang-bang/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"basename-compat":{"name":"basename-compat","description":"A GNU/BSD coreutils' basename compatibility layer","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-basename-compat","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1446595784,"full_description":"\u003cimg src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### `basename` compatibility\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install basename-compat\n```\n\n\n## Usage\n\n```fish\n$ basename\n```\n\n# License\n\n[MIT][mit] © [Oh My Fish][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/oh-my-fish\n[contributors]:   https://github.com/oh-my-fish/plugin-basename-compat/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"bass":{"name":"bass","description":"Make Bash utilities usable in Fish shell","image":"https://travis-ci.org/edc/bass.svg?branch=master","latest_version":{"version":"v1.0","description":"","commit_hash":"master","release_date":1532067765},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"","release_date":1532067765,"version":"v1.0"}],"tags":[],"author":"edc","repository":"https://github.com/edc/bass","license":"MIT","dependencies":[],"stars":1865,"forks":68,"watchers":1865,"issues":11,"updated":1672834252,"full_description":"# Bass\n\n![](https://travis-ci.org/edc/bass.svg?branch=master)\n\nBass makes it easy to use utilities written for Bash in [fish shell](https://github.com/fish-shell/fish-shell/).\n\nRegular bash scripts can be used in fish shell just as scripts written in any language with proper shebang or explicitly using the interpreter (i.e. using `bash script.sh`). However, many utilities, such as virtualenv, modify the shell environment and need to be sourced, and therefore cannot be used in fish. Sometimes, counterparts (such as the excellent [virtualfish](http://virtualfish.readthedocs.org/en/latest/)) are created, but that's often not the case.\n\nBass is created to make it possible to use bash utilities in fish shell without any modification. It works by capturing what environment variables are modified by the utility of interest, and replay the changes in fish.\n\nYou might not need Bass for simple use cases. A great simple alternative (suggested by @jorgebucaran) is to just use `exec bash -c \"source some-bash-setup.sh; exec fish\"`.\n\n# Installation\n\nBass is compatible with fish versions 2.6.0 and later.\n\n\n## Manually\n\nUse the Makefile.\n\n`make install` will copy two files to `~/.config/fish/functions/`.\n\n`make uninstall` will remove those two files.\n\nRelaunch the shell for the change to take effect.\n\n## With [Oh My Fish](https://github.com/oh-my-fish/oh-my-fish)\n\n```console\nomf install bass\n```\n\n## With [Fisher](https://github.com/jorgebucaran/fisher)\n\n```console\nfisher install edc/bass\n```\n\n## With [Fundle](https://github.com/tuvistavie/fundle)\n\nAdd\n\n```console\nfundle plugin 'edc/bass'\n```\n\nto your fish config, relaunch the shell and run `fundle install`.\n\n# Example\n\nBass is simple to use. Just prefix your bash utility command with `bass`:\n\n```\n\u003e bass export X=3\n\u003e echo $X\n3\n```\n\nNotice that `export X=3` is bash syntax. Bass \"transported\" the new bash\nenvironment variable back to fish.\n\nBass has a debug option so you can see what happened:\n\n```\n\u003e bass -d export X=4\n# updating X=3 -\u003e 4\nset -g -x X 4\n```\n\n## nvm\n\nHere is a more realistic example, using the excellent\n[nvm](https://github.com/creationix/nvm):\n\n```\n\u003e bass source ~/.nvm/nvm.sh --no-use ';' nvm use iojs\nNow using io.js v1.1.0\n```\n\nNote that semicolon is quoted to avoid being consumed by fish.\n\nThis example takes advantage of the nvm bash utility to switch to iojs.\nAfter the command, iojs is accessible:\n\n```\n\u003e which iojs\n/Users/edc/.nvm/versions/io.js/v1.1.0/bin/iojs\n```\n\nYou can then very easily pack the command as a function and feel more at home:\n\n```\n\u003e funced nvm\nnvm\u003e function nvm\n           bass source ~/.nvm/nvm.sh --no-use ';' nvm $argv\n       end\n\n\u003e nvm list\n-\u003e  iojs-v1.1.0\n         system\n\u003e nvm ls-remote\n        v0.1.14\n        v0.1.15\n...\n```\n\n(`--no-use` is an important option to `nvm.sh`. See [#13](https://github.com/edc/bass/issues/13) for background.)\n","repository_updated":0},"battery":{"name":"battery","description":"OS X and Linux compatible battery utilities","image":"https://cloud.githubusercontent.com/assets/8317250/8145972/4e867a12-125a-11e5-8b88-3470d1b39a84.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-battery","license":"MIT","dependencies":[],"stars":10,"forks":2,"watchers":10,"issues":1,"updated":1663902057,"full_description":"\u003cimg src=\"https://dl.dropboxusercontent.com/u/56336/omf/omf-logo-optimised.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Battery\n\u003e OS X and Linux compatible battery utility\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\nomf install battery\n```\n\n## Usage\n\nDisplay `battery` slots.\n\n```fish\nbattery\n```\n\nCustomize `battery` options.\n\n```fish\nbattery ▶ ▷\n```\n\nCheck if the battery is currently charging.\n\n```fish\nif set -q BATTERY_IS_CHARGING\n  echo Charging ⌁\nend\n```\n\n### Environment Variables\n\n+ #### `BATTERY_IS_PLUGGED`\nUnset if `false`.\n\n+ #### `BATTERY_IS_CHARGING`\nUnset if `false`.\n\n+ #### `BATTERY_TIME_LEFT`\nTime left in `HH:MM` format.\n\n+ #### `BATTERY_SLOTS`\nNumber of slots/gauges from 10 available.\n\n+ #### `BATTERY_MAX_CAP`\nBattery maximum capacity.\n\n+ #### `BATTERY_CUR_CAP`\nBattery current capacity.\n\n+ #### `BATTERY_PCT`\nCurrent battery life in `%`.\n\n### Screenshot\n\n![](https://cloud.githubusercontent.com/assets/8317250/8145972/4e867a12-125a-11e5-8b88-3470d1b39a84.png)\n\n# License\n\n[MIT][mit] © [Jorge Bucaran][author]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/bucaran\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[contributors]:   https://github.com/oh-my-fish/plugin-battery/graphs/contributors\n","repository_updated":0},"blt":{"name":"blt","description":"Acquia BLT (Build and Launch Tool) plugin for Oh My Fish","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"devert","repository":"https://github.com/devert/plugin-blt","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1484582629,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Acquia BLT\n\u003e A plugin to integrate [Acquia BLT](https://github.com/acquia/blt) for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nBLT (Build and Launch Tool) is a tool that generates new Drupal projects using a standardized template derived from Acquia Professional Services' best practices.\n\n## Install\n\n```fish\n$ omf install blt\n```\n\n\n## Usage\n\nWithin a BLT-generated project repository.\n\n```fish\n$ blt\n```\n\n\n# License\n\n[MIT][mit] © [Dennis Evert][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/devert\n[contributors]:   https://github.com/devert/plugin-blt/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"brew":{"name":"brew","description":"Oh My Fish plugin to integrate Homebrew paths into shell.","image":"https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-brew","license":"MIT","dependencies":[],"stars":16,"forks":11,"watchers":16,"issues":7,"updated":1672323062,"full_description":"![](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)\n\n\u003cdiv align=\"center\"\u003e \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e \u003c/a\u003e\u003c/div\u003e\u003cbr\u003e\n\nbrew\n====\n\n[Oh My Fish](https://www.github.com/oh-my-fish/oh-my-fish) plugin to integrate [Homebrew](http://brew.sh) paths into shell.\n\nInstall\n-------\n\n\u003e *Note*: You need to have `brew` installed.\n\n```fish\n$ omf install brew\n```\n\nLicense\n=======\n\n[MIT](http://opensource.org/licenses/MIT) © [gblmarquez](http://github.com/gblmarquez) et [al](https://github.com/oh-my-fish/plugin-brew/graphs/contributors)\n","repository_updated":0},"bundler":{"name":"bundler","description":"Use Ruby's Bundler automatically for some commands.","image":"https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-bundler","license":"MIT","dependencies":[],"stars":7,"forks":5,"watchers":7,"issues":1,"updated":1653908028,"full_description":"![](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)\n\n\u003cdiv align=\"center\"\u003e\n    \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n        \u003cimg width=\"90\" src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n    \u003c/a\u003e\n\u003c/div\u003e\u003cbr\u003e\n\nbundler\n=======\n\nOverrides the following default calls to append `bundle exec` if such gem is\navailable within the context of bundler.\n\nDefault calls\n-------------\n\n * annotate\n * cap\n * capify\n * cucumber\n * dashing\n * guard\n * kitchen\n * middleman\n * nanoc\n * puma\n * rackup\n * rainbows\n * rake\n * rspec\n * rubocop\n * ruby\n * shotgun\n * sidekiq\n * spec\n * spinach\n * spork\n * thin\n * thor\n * unicorn\n * unicorn_rails\n\nYou can add more bundled executables in your config.fish:\n\n```fish\nset bundler_plugin_execs jekyll mustache\n```\n\nInstall\n-------\n\n\u003e *Note*: You need to have `bundler` installed.\n\n```fish\n$ omf install bundler\n```\n\nUsage\n-----\n\n```fish\n$ guard -i\n```\n\nor\n\n```fish\n$ ruby -v\n```\n\nLicense\n=======\n\n[MIT](http://opensource.org/licenses/MIT) © [bpinto](http://github.com/bpinto) et [al](https://github.com/bpinto/plugin-bundler/graphs/contributors)\n","repository_updated":0},"caffeinate":{"name":"caffeinate","description":"Fish shell integration for caffeinate, disable system idle sleep while select commands are running.","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"thegcat","repository":"https://github.com/thegcat/caffeinate","license":"MIT","dependencies":[],"stars":1,"forks":0,"watchers":1,"issues":0,"updated":1660370422,"full_description":"\u003c!-- markdownlint-disable MD033 MD041 --\u003e\n\u003cimg\nsrc=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\"\nalign=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### caffeinate\n\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\u003c!-- markdownlint-enable MD033 MD041 --\u003e\n\nDisable system idle sleep while certain commands run.\n\nThis plugin currently only works on macOS, contributions to support other OSes\nare welcome.\n\n## Install\n\n```fish\nomf install caffeinate\n```\n\n## Settings\n\nYou can set which terminal commands should prevent system idle sleep by\nsetting the variable `__caffeinate_include`. If unset the default is `git`.\n\n```fish\nset __caffeinate_include sleep \\\n                         git \\\n                         cap \\\n                         make\n```\n\nPlease note that this variable needs to be set before the plugin is loaded by\nOh My Fish, e.g. in `~/.config/fish/conf.d/` in a file that will be loaded\nbefore `omf.fish` in that same directory.\n\n# License\n\n[MIT][mit] © [Felix Schäfer][author] et [al][contributors]\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/thegcat\n[contributors]:   https://github.com/thegcat/caffeinate/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"cd":{"name":"cd","description":"A featured cd can make your fish journey much more pleasant.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-cd","license":"MIT","dependencies":[],"stars":18,"forks":5,"watchers":18,"issues":3,"updated":1640015868,"full_description":"[![][travis-badge]][travis-link]\n![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# cd\n\nPlugin for [Oh My Fish][omf-link].\n\nPackage cd provides a new `cd` command to help you change the current working directory fast. It's a wrapper directive of the built-in `cd` command with many useful features and powerful completions.\n\n## Features:\n\n- Multi-dot navigation: `cd ....`\n- Plus / minus navigation: `cd -` `cd -3` `cd +2`\n- Full `$CDPATH` support\n\n## Install\n\n```fish\n$ omf install cd\n```\n\n\n## Usage\n\n```fish\n$ cd .../foo           # \u003c=\u003e cd ../../foo\n$ cd ...               # \u003c=\u003e cd ../..\n$ cd .../foo/.../bar   # \u003c=\u003e cd ../../foo/../../bar\n```\n\n```fish\n$ cd                   # ~\n$ cd ~/foo             # ~/foo\n$ cd ~/bar             # ~/bar\n$ cd -                 # ~/foo ;; ( Equal to `cd -1` )\n```\n\n```fish\n$ pwd                  # ~/a\n$ cd ~/b               # ~/b ;; ( dirstack: a )\n$ cd ~/c               # ~/c ;; ( dirstack: b a )\n$ cd ~/d               # ~/d ;; ( dirstack: c b a )\n$ cd -2                # ~/b ;; ( dirstack: d c a )\n$ cd +1                # ~/c ;; ( dirstack: b d a )\n$ cd +0                # ~/a ;; ( dirstack: c b d )\n$ cd -0                # ~/a ;; ( dirstack: c b d )\n```\n\n# License\n\n[MIT][mit] © [Jianming Qu](https://jmqu.tech)\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/sancoder-q\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/sancoder-q/plugin-cd.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/sancoder-q/plugin-cd\n","repository_updated":0},"cdb":{"name":"cdb","description":"cd to basename","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","fish-shell","oh-my-fish"],"author":"zzamboni","repository":"https://github.com/zzamboni/plugin-cdb","license":"MIT","dependencies":[],"stars":1,"forks":0,"watchers":1,"issues":0,"updated":1671356340,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### cdb\n\n\u003e A plugin for [Oh My Fish][omf-link] which provides the `cdb` command\n\u003e to cd to the base directory of the given argument.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install cdb\n```\n\n\n## Typical usage\n\n```fish\n~ $ more (or some other command) /some/path/file\n~ $ cdb \u003calt-up\u003e\n/some/path $ \n```\n\n\n# License\n\n[MIT][mit] © [Diego Zamboni][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/zzamboni\n[contributors]:   https://github.com/zzamboni/plugin-cdb/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"color-manual":{"name":"color-manual","description":"A simple oh-my-fish plugin that makes \"man\" pages more colorful","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-plugin","fish-shell","oh-my-fish","oh-my-fish-plugin"],"author":"spacekookie","repository":"https://github.com/spacekookie/omf-color-manual","license":"MIT","dependencies":[],"stars":7,"forks":1,"watchers":7,"issues":1,"updated":1657080932,"full_description":"Oh My Fish - Colour Manual\n==========================\n\nThis is a very simple plugin which colourises the output of `man` which results in much nicer to read manual pages. It does so by simply setting some shell variables to colours. If you want to change them, feel free to tweak around with the values.\n\n## Installation\n\nYou should be able to install `colorman` via [oh-my-fish](https://github.com/oh-my-fish/oh-my-fish).\n\n```console\n$ omf install colorman\n```\n\nOtherwise just download the `init.fish` script (possibly rename it `colorman.fish` and source it somewhere in your `config.fish`. \n\n`omf` unfortunately doesn't allow start-hooks so you have to do this next:\n\n```console\n$ echo \"source ~/.local/share/omf/pkg/colorman/init.fish\" \u003e\u003e ~/.config/fish/config.fish\n```\n\nAaand Done 🙂\n\n## Spelling\n\nThe project is officially spelt \"oh my fish - color manual\", `colorman` for short. But that doesn't mean I have to use wrong gramar (i.e. not spell it *colour* in the README. Just don't be confused :sweat_smile:)\n","repository_updated":0},"colored_man_pages.fish":{"name":"colored_man_pages.fish","description":"Fish shell plugin to colorize man pages","image":"https://raw.githubusercontent.com/PatrickF1/colored_man_pages.fish/master/images/less-man-page.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","fish-packages","fish-plugin","fish-shell","fisher","man-pages","oh-my-fish"],"author":"PatrickF1","repository":"https://github.com/PatrickF1/colored_man_pages.fish","license":"MIT","dependencies":[],"stars":68,"forks":3,"watchers":68,"issues":0,"updated":1672313483,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### colored_man_pages.fish\n\n\u003e A plugin for the [fish-shell](https://fishshell.com).\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.2-blue.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nThis plugin installs a fish function wrapper around `man` that colorizes styled text (specifically underlined, bold, and standout) to make browsing man pages easier and more enjoyable.\n\nThe colors are added by setting environment variables that control how `less`, `man`'s default pager, processes styled text. Why can't we just set those environment variables in our shell configuration instead of using this plugin? Well, if we simply set environment variables, they contain escape sequences that will \"overflow\" into the output of other commands reading environment variables. See this [Stackoverflow question](https://unix.stackexchange.com/questions/87261/getting-unexpected-colorized-output-on-several-commands) for an explanation.\n\n\u003cimg alt=\"colored man page for less\" src=\"./images/less-man-page.png\"\u003e\n\nCredits: This idea was first inspired by [Arch Linux wiki](https://wiki.archlinux.org/index.php/Color_output_in_console#Using_less).\n\nNote: [decors/fish-colored-man](https://github.com/decors/fish-colored-man) is a very similar plugin. Differences:\n\n- `colored_man_pages.fish` includes a wrapper to also colorize the output of utilities that rely on less, such as `git help`\n- `fish-colored-man` allows configuring colors\n\n\n\n## Install\n\nWith [fisher]\n\n```fish\n$ fisher install patrickf1/colored_man_pages.fish\n```\n\n## Usage\n\nJust invoke `man` as usual, but without changing the pager, to get colored output. For example\n\n```fish\n$ man less\n```\n\nTo execute vanilla `man` without colored output, we can bypass the wrapper using `command`. For example\n\n```fish\n$ command man less\n```\n\nTo colorize the output of utilities that rely on less, use the `cless` (short for colored less) wrapper to configure less before executing the utility.\nFor example\n\n```fish\n$ cless git help merge\n$ cless git help log\n```\n\n# License\n\n[MIT][mit] © [Patrick](https://github.com/patrickf1)\n\n[mit]: https://opensource.org/licenses/MIT\n[omf-link]: https://www.github.com/oh-my-fish/oh-my-fish\n[fisher]: https://github.com/jorgebucaran/fisher\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"composer":{"name":"composer","description":"Composer PHP Dependency manager plugin for Oh My Fish","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-composer","license":"MIT","dependencies":[],"stars":7,"forks":3,"watchers":7,"issues":0,"updated":1611673899,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# Composer\n\nPlugin for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf install composer\n```\n\n\n## Usage\n\n```fish\n$ composer\n```\n\n# License\n\n[MIT][mit] © [Natrim][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/natrim\n[contributors]:   https://github.com/oh-my-fish/plugin-composer/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"config":{"name":"config","description":"Get and set package configuration","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-config","license":"MIT","dependencies":[],"stars":2,"forks":1,"watchers":2,"issues":0,"updated":1576747972,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\n# config\nPlugin for [Oh My Fish][omf-link].\n\nStandardized tool for loading and saving configuration variables for your plugins.\n\n\n## Setup\nTo use `config` in your plugin, first add it to your plugin's `bundle` file:\n\n    package config\n\nYou can now start using `config` in your plugin.\n\n\n## Getting and setting values\nEvery config value is grouped under a namespace. To access your plugin's settings, you need to choose a namespace to keep all of your settings in. The name of your plugin is usually a good choice.\n\nReading a config value looks like this:\n\n    config my-namespace --get my-property\n\nFor all of `config`'s actions, the namespace must always be the first argument. In the above command, the value of the `my-property` _key_ in the `my-namespace` _namespace_ will be printed to standard output.\n\nKey names can have their own hierarchy. To add additional layers of grouping, you can separate names with a dot (`.`):\n\n    config my-namespace --get misc.colors.header\n\nThe nesting isn't just a nice convention; the nesting will actually be reflected in the storage backing (more on that in a bit).\n\nSetting values is similar to getting them. We can set `misc.colors.header` to `red` as follows:\n\n    config my-namespace --set misc.colors.header red\n\nIf you need to check what all of your config values are at once, you can see a pretty list of key-value pairs with\n\n    config my-namespace --list\n\nThere are more operations than just getting and setting that you can do on your configuration. Check the output of `config --help` for a complete list of actions and options.\n\n\n## Config files\nConfig values are stored in individual files and directories in `$FISH_CONFIG`. A directory is created for each namespace to hold config files at `$FISH_CONFIG/my-namespace`. When using Oh My Fish! (the default), `$FISH_CONFIG` will be the same as `$OMF_CONFIG`. Otherwise it will be set to `$XDG_CONFIG_HOME`, or fall back to `$HOME/.config`.\n\nEach key gets its own file inside the namespace directory. For example, if you have a key called `email` in a `mailer` namespace, you can expect a file at `$FISH_CONFIG/mailer/email` to exist, which contains as text the value of that key. If a key is nested, like our `misc.colors.header` example from earlier, each level of nesting is made into a directory separator. `misc.colors.header` then would be stored in `$FISH_CONFIG/namespace/misc/colors/header`.\n\nNote that a key cannot hold both subkeys and a value.\n\n\n## Command-line config editing\nThere's a reason why the `config` command has slightly odd ordering of arguments. You can easily embed the `config` command into your own plugin with minimal effort. Let's say you develop a plugin called `fancy-echo` that prints out text prefixed with a configurable string. A good way to store this string would be in the `prefix` key under the `fancy-echo` namespace. In our plugin, we can read that property with\n\n    config fancy-echo --get prefix\n\nNow if the user wants to change this value without opening up and editing the corresponding config file, the user can use the `config` command themselves:\n\n    config fancy-echo --set prefix \"This just in: \"\n\nWe can make this easier by copying Git's `config` command syntax:\n\n```fish\nfunction fe -d \"Fancy echo\"\n  if begin; set -q argv[1]; and test \"$argv[1]\" = config; end\n    # Pass arguments on to `config`\n    config fancy-echo $argv[2..-1]\n    return\n  end\nend\n```\n\nNow we can edit `fancy-echo`'s config with `fancy-echo`'s own command!\n\n    fe config --set prefix \"This just in: \"\n\nIf the user needs some help, they can still use `fe config --help`; the help text will adapt automatically to match the package it is embedded in.\n\n\n## License\n[MIT][mit] © [coderstephen][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/coderstephen\n[contributors]:   https://github.com/oh-my-fish/plugin-config/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"direnv":{"name":"direnv","description":"Unclutter your .profile http://direnv.net","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-direnv","license":"MIT","dependencies":[],"stars":12,"forks":9,"watchers":12,"issues":4,"updated":1667849095,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### direnv\n\u003e [direnv] integration for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install direnv\n```\n\n\n## Usage\n\nSee [official direnv documentation][direnv].\n\n# License\n\n[MIT][mit] © [Derek W. Stavis][author] et [al][contributors]\n\n\n[direnv]:         http://direnv.net\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/derekstavis\n[contributors]:   https://github.com/oh-my-fish/plugin-direnv/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"docker-machine":{"name":"docker-machine","description":"Plugin to integrate Docker Machine","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-docker-machine","license":"MIT","dependencies":[],"stars":11,"forks":2,"watchers":11,"issues":1,"updated":1647621057,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### docker-machine\nPlugin to integrate [Docker Machine][docker-machine] for [Oh My Fish][omf].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n\n\n## Install\nInstallation with [Oh My Fish][omf]:\n\n    omf install docker-machine\n\n\n## Usage\nTo set the current Docker machine, use the `use` subcommand:\n\n    $ docker-machine use mymachine\n    $ docker-machine active\n    mymachine\n\nTo switch back to the local machine, you can use the `unset` subcommand:\n\n    $ docker-machine unset\n    $ docker-machine active\n    No active host found\n\nSee the [Docker Machine][docker-machine] documentation for full details on how to use `docker-machine`.\n\n\n## License\n[MIT][mit] © [Stephen Coakley][author] et [al][contributors].\n\n\n[author]: http://github.com/coderstephen\n[contributors]: https://github.com/oh-my-fish/plugin-docker-machine/graphs/contributors\n[docker-machine]: https://docs.docker.com/machine/\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[mit]: http://opensource.org/licenses/MIT\n[omf]: https://www.github.com/oh-my-fish/oh-my-fish\n","repository_updated":0},"dpaste":{"name":"dpaste","description":"","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-dpaste","license":"MIT","dependencies":[],"stars":5,"forks":5,"watchers":5,"issues":3,"updated":1648810615,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### dpaste\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nPackage allows to quickly share text on pastebin sites dpaste.org (and similar), sprunge.us.\n\n## Install\n\n```fish\n$ omf install dpaste\n```\n\n\n## Usage\n\n### Basic usage to pastebin:\n\n```fish\n$ dpaste \"I \u003c3 to paste\"\nhttps://dpaste.org/ID0\n$ dpaste -t week README.md\nhttps://dpaste.org/ID1\n$ dpaste -t onetime \u003c README.md\nhttps://dpaste.org/ID2\n$ cat README.md | dpaste -t month\nhttps://dpaste.org/ID3\n```\n\n### GitHub Gist Usage\n\n```fish\n$ dpaste --gist -d \"Your description\" a.fish\n```\n\n#### Private gist\n```fish\n$ dpaste --gist -d \"Your description\" -p my-file.fish\n```\n\nParams:\n- `-g --gist` Create a GitHub gist\n- `-d or --desc ` Description of the gist, default \"uploaded from dpaste fish shell plugin\"\n- `-p or --private ` Private gist, default public\n\nFor more information see:\n\n```fish\n$ dpaste --help\n```\n\n# License\n\n[MIT][mit] © [rominf][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/rominf\n[contributors]:   https://github.com/oh-my-fish/plugin-dpaste/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"emacs":{"name":"emacs","description":"Wrapper for daemon functionality of Emacs.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-emacs","license":"MIT","dependencies":[],"stars":19,"forks":11,"watchers":19,"issues":10,"updated":1638944329,"full_description":"# Emacs Plugin\n\nThis plugin replicates the functionality of the [emacs](https://www.gnu.org/software/emacs/) plugin for [oh-my-zsh](http://ohmyz.sh/).\nIt is essentially a wrapper around the very useful [emacs daemon](http://www.emacswiki.org/emacs/EmacsAsDaemon) capability.\n\nBelow is an extract from the original plugin source file:\n\n\"Emacs 23 daemon capability is a killing feature.\nOne emacs process handles all your frames whether\nyou use a frame opened in a terminal via a ssh connection or X frames\nopened on the same host.\nBenefits are multiple\n\n  * You don't have the cost of starting Emacs all the time anymore\n  * Opening a file is as fast as Emacs does not have anything else to do.\n  * You can share opened buffered across opened frames.\n  * Configuration changes made at runtime are applied to all frames.\"\n\n\n### Usage\n\nTo use this plugin, install it as:\n\n```bash\nomf install emacs\n```\n\n### Requirements\n\nEmacs 23 or later is required for this plugin.\n","repository_updated":0},"enhancd":{"name":"enhancd","description":":rocket: A next-generation cd command with your interactive filter","image":"https://user-images.githubusercontent.com/4442708/58421159-3e63fc80-80ca-11e9-9621-9fe139924411.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["autojump","bash","cd","cli","command-line-interface","command-line-tool","fasd","fuzzy-search","fzf","fzf-scripts","jump","shell","shell-extension","shell-scripts","z","zplug","zsh"],"author":"b4b4r07","repository":"https://github.com/b4b4r07/enhancd","license":"","dependencies":[],"stars":2253,"forks":104,"watchers":2253,"issues":21,"updated":1672854098,"full_description":"[version-badge]: https://img.shields.io/github/tag/b4b4r07/enhancd.svg\n[version-link]: https://github.com/b4b4r07/enhancd/releases\n\n[active-badge]: https://masterminds.github.io/stability/active.svg\n[active-link]:  https://masterminds.github.io/stability/active.html\n\n[awk-link]: http://pubs.opengroup.org/onlinepubs/9699919799/utilities/awk.html\n[license-link]: https://b4b4r07.mit-license.org\n\n[![][version-badge]][version-link] [![][active-badge]][active-link]\n\n\u003ca href=\"top\"\u003e\u003c/a\u003e\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://user-images.githubusercontent.com/4442708/58421159-3e63fc80-80ca-11e9-9621-9fe139924411.png\"\u003e\n\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\n\u003cb\u003e\u003ca href=\"#description\"\u003eDescription\u003c/a\u003e\u003c/b\u003e\n|\n\u003cb\u003e\u003ca href=\"#features\"\u003eFeatures\u003c/a\u003e\u003c/b\u003e\n|\n\u003cb\u003e\u003ca href=\"#issues\"\u003eKnown issues\u003c/a\u003e\u003c/b\u003e\n|\n\u003cb\u003e\u003ca href=\"#requirements\"\u003eRequirements\u003c/a\u003e\u003c/b\u003e\n|\n\u003cb\u003e\u003ca href=\"#usage\"\u003eUsage\u003c/a\u003e\u003c/b\u003e\n\u003cbr\u003e\n\u003cb\u003e\u003ca href=\"#installation\"\u003eInstallation\u003c/a\u003e\u003c/b\u003e\n|\n\u003cb\u003e\u003ca href=\"#configurations\"\u003eConfigurations\u003c/a\u003e\u003c/b\u003e\n|\n\u003cb\u003e\u003ca href=\"#references\"\u003eReferences\u003c/a\u003e\u003c/b\u003e\n|\n\u003cb\u003e\u003ca href=\"#license\"\u003eLicense\u003c/a\u003e\u003c/b\u003e\n\u003c/p\u003e\n\n\u003cbr\u003e\n\n:rocket: enhancd \u003csup\u003ev2\u003c/sup\u003e is ...\n\n\u003e A next-generation `cd` command with an interactive filter :sparkles:\n\n## Description\n\n`cd` command is one of the frequently used commands.\n\nNevertheless, it is not so easy to handle unfortunately. A directory path given as an argument to `cd` command must be a valid path that exists and is able to resolve. In other words, you cannot pass a partial path such as \"dir\" (you are in `/home/lisa`, dir is `/home/lisa/work/dir`) to `cd` command.\n\nThe new cd command called \"enhancd\" enhanced the flexibility and usability for a user. enhancd will memorize all directories visited by a user and use it for the pathname resolution. If the log of enhancd have more than one directory path with the same name, enhancd will pass the candidate directories list to the filter within the ENHANCD_FILTER environment variable in order to narrow it down to one directory.\n\nThanks to this mechanism, the user can intuitively and easily change the directory you want to go.\n\n![](https://raw.githubusercontent.com/b4b4r07/screenshots/master/enhancd/demo.gif)\n\n## Features\n\n- Go to the visited directory in the past\n- Easy to filter, using your favorite filter\n- Work on Bash, Zsh and fish (cross-shell compatibility)\n- Go back to a specific parent directory like [zsh-bd](https://github.com/Tarrasch/zsh-bd)\n- Inside a git repo, the first list element is the git root directory\n- Fuzzy search in a similar name directory\n- Support standard input (`echo $HOME | cd` is acceptable)\n- Custom options (user-defined option is acceptable)\n\n## Issues\n\n- Fish version\n  - Because of how fish piping works, it's not possible to pipe to cd like : `ls / | cd`\n\n\n### Fuzzy search\n\nYou can fuzzy-search a directory name you want to run `cd`. For example, a word \"text\" is expand to \"test\" and \"txt\".\n\n![](https://raw.githubusercontent.com/b4b4r07/screenshots/master/enhancd/fuzzy.gif)\n\n## Requirements\n\n- An interactive filter\n\n  - [**fzy**](https://github.com/jhawthorn/fzy)\n  - [**percol**](https://github.com/mooz/percol)\n  - [**peco**](https://github.com/peco/peco)\n  - [**fzf**](https://github.com/junegunn/fzf)\n  - ...\n\n  Choose any one from among these.\n\n## Usage\n\nUnder Zsh or Bourne shells such as sh and bash, you just source `init.sh` into your shell:\n\n```console\n$ source ./init.sh\n```\n\nBecause enhancd functions must be executed in the context of the current shell, you should run something like above command.\n\nThe basic usage of the `cd` command that has been implemented by `enhancd` is the same as the normal builtin `cd` command.\n\n```console\n$ cd [-|..] \u003cdirectory\u003e\n```\n\nIf no arguments are given, enhancd `cd` command will display a list of the directory you've visited once, encourage you to filter the directory that you want to move.\n\n```console\n$ cd\n  ...\n  /home/lisa/src/github.com/b4b4r07/enhancd/zsh\n  /home/lisa/src/github.com/b4b4r07/gotcha\n  /home/lisa/src/github.com/b4b4r07/blog/public\n  /home/lisa/src/github.com/b4b4r07/blog\n  /home/lisa/src/github.com/b4b4r07/link_test\n  /home/lisa/src/github.com/b4b4r07\n  /home/lisa/Dropbox/etc/dotfiles\n  /home/lisa/src/github.com/b4b4r07/enhancd\n\u003e /home/lisa\n  247/247\n\u003e _\n```\n\nThe ENHANCD_FILTER variable is specified as a list of one or more visual filter command such as [this](#heartbeat-requirements) separated by colon (`:`) characters.\n\nIt is likely the only environment variable you'll need to set when starting enhancd.\n\n```console\n$ ENHANCD_FILTER=peco; export ENHANCD_FILTER\n```\n\nSince the `$ENHANCD_FILTER` variable can be a list, enhancd will use `$ENHANCD_FILTER` to mean the first element unless otherwise specified.\n\n```console\n$ ENHANCD_FILTER=fzy:fzf:peco\n$ export ENHANCD_FILTER\n```\n\nAlso,\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003eHyphen (\u003ccode\u003e-\u003c/code\u003e)\u003c/strong\u003e\u003c/summary\u003e\n\nWhen enhancd takes a hyphen (`-`) string as an argument, it searchs from the last 10 directory items in the log. With it, you can search easily the directory you used last.\n\n```console\n$ cd -\n  /home/lisa/Dropbox/etc/dotfiles\n  /home/lisa/Dropbox\n  /home/lisa/src/github.com\n  /home/lisa/src/github.com/b4b4r07/cli\n  /home\n  /home/lisa/src\n  /home/lisa/src/github.com/b4b4r07/enhancd\n  /home/lisa/src/github.com/b4b4r07/gotcha\n  /home/lisa/src/github.com/b4b4r07\n\u003e /home/lisa/src/github.com/b4b4r07/portfolio\n  10/10\n\u003e _\n```\n\nThen, since the current directory will be delete from the candidate, you just press Enter key to return to the previous directory after type `cd -` (`$PWD` is `/home/lisa`, `$OLDPWD` is `/home/lisa/src/github.com/b4b4r07/portfolio`).\n\n![](https://raw.githubusercontent.com/b4b4r07/screenshots/master/enhancd/cd_hyphen.gif)\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003eDouble-dot (\u003ccode\u003e..\u003c/code\u003e)\u003c/strong\u003e\u003c/summary\u003e\n\nFrom the beginning, `..` means the directory's parent directory, that is, the directory that contains it. When enhancd takes a double-dot (`..`) string as an argument, it behaves like a [zsh-bd](https://github.com/Tarrasch/zsh-bd) plugin. In short, you can jump back to a specific directory, without doing `cd ../../..`.\n\nFor example, when you are in `/home/lisa/src/github.com/b4b4r07/enhancd`, type `cd ..` in your terminal:\n\n```console\n$ cd ..\n  /\n  home\n  lisa\n  src\n  github.com\n\u003e b4b4r07\n  6/6\n\u003e _\n```\n\nWhen moving to the parent directory, the current directory is removed from the candidate.\n\n![](https://raw.githubusercontent.com/b4b4r07/screenshots/master/enhancd/bd.gif)\n\n\u003c/details\u003e\n\n\n### Enhancd complete (fish)\n\nOn fish shell, you can use `alt+f` to trigger `enhancd` when typing a command, the selected item will be appended to the commandline\n\n### Options\n\n```console\n$ cd --help\nusage: cd [OPTIONS] [dir]\n\nOPTIONS:\n  -h, --help       Show help message\n```\n\nThose options are defined at [config.ltsv](https://github.com/b4b4r07/enhancd/blob/master/config.ltsv). As it is written in this json, the user have to make a directory list file or script that generate the list like [this script](https://github.com/b4b4r07/enhancd/blob/master/src/custom/sources/ghq.sh). Of cource, you can disable those options if you do not like it.\n\n## Installation\n\n### Declarative way (bash/zsh/fish):\n\nUsing CLI package manager \"[afx](https://github.com/b4b4r07/afx)\". YAML for the installation is here:\n\n```yaml\ngithub:\n- name: b4b4r07/enhancd\n  description: A next-generation cd command with your interactive filter\n  owner: b4b4r07\n  repo: enhancd\n  plugin:\n    env:\n      ENHANCD_FILTER: fzf --height 25% --reverse --ansi:fzy\n    sources:\n    - init.sh\n```\n\nthen,\n\n```console\nafx install\n```\n\n### Bash\n\n```console\n# add the fzy brew tap to homebrew\n$ brew tap jhawthorn/fzy\n\n# install fzy and ccat with homebrew\n$ brew install fzy ccat\n\n# alt: brew install fzy ccat percol peco fzf\n#  depending on which interactive filter you want to use\n\n# install enhancd into your home directory (or a preferred directory)\n$ cd ~\n$ git clone https://github.com/b4b4r07/enhancd\n\n# if you want to hide the directory in the finder (gui)\n$ chflags hidden enhancd\n\n# add enhancd to your bash profile (or sourced file of choice)\n$ echo \"source ~/enhancd/init.sh\"  \u003e\u003e ~/.bash_profile\n\n# reload your bash profile\n$ source ~/.bash_profile\n```\n\n### Zsh\n\nAlso if you use zsh as your shell, you can install this via [zplug](https://github.com/zplug/zplug) which is powerfull plugin mananger for zsh:\n\n```bash\nzplug \"b4b4r07/enhancd\", use:init.sh\n```\n\n### Fish\n\n#### System Requirements\n\n- [Fish](https://fishshell.com/) ≥ 3.0\n\nInstall with [Fisher](https://github.com/jorgebucaran/fisher):\n\n```console\nfisher install b4b4r07/enhancd\n```\n\n## Configurations\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_DIR\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nThe ENHANCD_DIR variable is a base directory path. It defaults to `~/.enhancd`.\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_FILTER\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\n1. What is ENHANCD_FILTER?\n\n   The ENHANCD_FILTER is an environment variable. It looks exactly like the PATH variable containing with many different filters such as [peco](https://github.com/peco/peco) concatenated using '`:`'.\n\n2. How to set the ENHANCD_FILTER variable?\n\n   Setting the ENHANCD_FILTER variable is exactly like setting the PATH variable. For example:\n\n   ```console\n   $ export ENHANCD_FILTER=\"/usr/local/bin/peco:fzf:non-existing-filter\"\n   ```\n\n   This above command will hold good till the session is closed. In order to make this change permanent, we need to put this command in the appropriate profile file. The ENHANCD_FILTER command in this example is set with 3 components: `/usr/local/bin/peco` followed by `fzf` and the `not-existing-filter`.\n\n   enhancd narrows the ENHANCD_FILTER variable down to one. However, the command does not exist can not be the candidate.\n\n   Let us try to test this ENHANCD_FILTER variable.\n\n   ```console\n   $ cd\n   ```\n\n   If cd command does not return error, the settings of ENHANCD_FILTER is success.\n\n3. How to find the value of the ENHANCD_FILTER variable?\n\n   ```console\n   $ echo $ENHANCD_FILTER\n   /usr/local/bin/peco:fzf:non-existing-filter\n   ```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_COMMAND\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nThe ENHANCD_COMMAND environment variable is to change the command name of enhancd `cd`. It defaults to `cd`.\n\nWhen the command name is changed, you should set new command name to ENHANCD_COMMAND, export it and restart your shell (reload `init.sh`).\n\n```console\n$ echo $ENHANCD_COMMAND\ncd\n$ export ENHANCD_COMMAND=ecd\n$ source /path/to/init.sh\n```\n\nThe ENHANCD_COMMAND may only hold one command name. Thus, in the previous example, it is true that enhancd `cd` command name is `ecd`, but it is not `cd` (`cd` is turned into original `builtin cd`).\n\nBesides putting a setting such as this one in your `~/.bash_profile` or `.zshenv` would be a good idea:\n\n```bash\nENHANCD_COMMAND=ecd; export ENHANCD_COMMAND\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_DISABLE_DOT\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nIf you don't want to use the interactive filter, when specifing a double dot (`..`), you should set not zero value to `$ENHANCD_DISABLE_DOT`. Defaults to 0.\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_DISABLE_HYPHEN\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nThis option is similar to `ENHANCD_DISABLE_DOT`. Defaults to 0.\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_DISABLE_HOME\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nIf you don't want to use the interactive filter when you call `cd` without an argument, you can set any value but `0` for `$ENHANCD_DISABLE_HOME`. Defaults to `0`.\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_DOT_ARG\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nYou can customize the double-dot (`..`) argument for enhancd by this environment variable.\nDefault is `..`.\n\nIf you set this variable any but `..`, it gives you the _double-dot_ behavior with that argument; i.e. upward search of directory hierarchy.\nThen `cd ..` changes current directory to parent directory without interactive filter.\n\nIn other words, you can keep original `cd ..` behavior by this option.\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_HYPHEN_ARG\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nYou can customize the hyphen (`-`) argument for enhancd by this environment variable.\nDefault is `-`.\n\nIf you set this variable any but `-`, it gives you the _hyphen_ behavior with that argument; i.e. backward search of directory-change history.\nThen `cd -` changes current directory to `$OLDPWD` without interactive filter.\n\nIn other words, you can keep original `cd -` behavior by this option.\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_HYPHEN_NUM\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nYou can customize the number of rows by \"cd -\"\nDefault is `10`.\n\nThis is passed to `head` comand as `-n` option.\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_HOME_ARG\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nYou can customize to trigger the argumentless `cd` behavior by giving the string specified by this environment variable as an argument.\nDefault is empty string.\n\nIf you set this variable any but empty string, it gives you the behavior of `cd` with no argument; i.e. backward search of the whole directory-change history.\nThen `cd` with no argument changes current directory to `$HOME` without interactive filter.\n\nIn other words, you can keep original behavior of `cd` with no argument by this option.\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_HOOK_AFTER_CD\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nDefault is empty. You can run any commands after changing directory with enhancd (e.g. `ls`: like `cd \u0026\u0026 ls`).\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_USE_FUZZY_MATCH\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nDefault is 1 (enable). See [#33](https://github.com/b4b4r07/enhancd/issues/33).\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_COMPLETION_KEYBIND\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nDefault is \u003ckbd\u003eTab\u003c/kbd\u003e (`^I`). See [#90](https://github.com/b4b4r07/enhancd/issues/90).\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003e\u003cstrong\u003e\u003ccode\u003eENHANCD_COMPLETION_BEHAVIOR\u003c/code\u003e\u003c/strong\u003e\u003c/summary\u003e\n\nDefault is the word of `default` (Regular completion). See [#90](https://github.com/b4b4r07/enhancd/issues/90).\n\nIt can be taken following words:\n\n- default\n- list (dir list with `$ENHANCD_FILTER`)\n- history (dir history list with `$ENHANCD_FILTER`)\n\n\u003c/details\u003e\n\n## References\n\nThe \"visual filter\" (interactive filter) is what is called \"Interactive Grep Tool\" according to [percol](https://github.com/mooz/percol) that is a pioneer in interactive selection to the traditional pipe concept on UNIX.\n\n- **percol** :point_right: [percol adds flavor of interactive selection to the traditional pipe concept on UNIX](https://github.com/mooz/percol)\n- **peco** :point_right: [Simplistic interactive filtering tool](https://github.com/peco/peco)\n- **fzf** :point_right: [:cherry_blossom: fzf is a blazing fast command-line fuzzy finder written in Go](https://github.com/junegunn/fzf)\n- **fzy** :point_right: [:mag: A better fuzzy finder](https://github.com/jhawthorn/fzy)\n- **gof** :point_right: [gof - Go Fuzzy](https://github.com/mattn/gof)\n- **selecta** :point_right: [Selecta is a fuzzy text selector for files and anything else you need to select](https://github.com/garybernhardt/selecta/)\n- **pick** :point_right: [Pick is \"just like Selecta, but faster\"](https://robots.thoughtbot.com/announcing-pick)\n- **icepick** :point_right: [icepick is a reimplementation of Selecta in Rust](https://github.com/felipesere/icepick)\n- **sentaku** :point_right: [Utility to make sentaku (selection, 選択(sentaku)) window with shell command](https://github.com/rcmdnk/sentaku)\n- **hf** :point_right: [hf is a command line utility to quickly find files and execute a command](https://github.com/hugows/hf)\n\n## License\n\n[MIT][license-link] :copyright: b4b4r07\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/b4b4r07/enhancd.svg)](https://starchart.cc/b4b4r07/enhancd)\n","repository_updated":0},"envious":{"name":"envious","description":"Plugin for Oh-my-fish!","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"v1.0.0","description":"","commit_hash":"master","release_date":1474596105},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"","release_date":1474596105,"version":"v1.0.0"}],"tags":[],"author":"iamruinous","repository":"https://github.com/iamruinous/plugin-envious","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":2,"updated":1500659517,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### envious\n\u003e A plugin for [Oh My Fish][omf-link]. Manage shell environment variables from the filesystem.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install envious\n```\n\n\n## Usage\n\n```fish\n$ mkdir ~/.config/envious/.env.d\necho BAR \u003e\u003e ~/.config/envious/.env.d/FOO\nfish\necho $FOO\n# \u003e BAR\n```\n\n# License\n\n[MIT][mit] © [iamruinous][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/iamruinous\n[contributors]:   https://github.com/iamruinous/pkg-envious/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"epwd":{"name":"epwd","description":"A plugin for Oh My Fish to output the current working directory relative to environment variables.","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","fish-packages","fish-shell","omf"],"author":"alyyousuf7","repository":"https://github.com/alyyousuf7/plugin-epwd","license":"MIT","dependencies":[],"stars":1,"forks":1,"watchers":1,"issues":1,"updated":1508275993,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### epwd\n\u003e A plugin for [Oh My Fish][omf-link] to output the current working directory relative to environment variables.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install epwd\n```\n\n\n## Usage\n\n```fish\n$ pwd\n/home/ali/go/src\n$ epwd\n$GOPATH/src\n```\n\n\n# License\n\n[MIT][mit] © [Ali Yousuf][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/alyyousuf7\n[contributors]:   https://github.com/alyyousuf7/plugin-epwd/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"errno":{"name":"errno","description":"A Oh My Fish plugin to deal with POSIX error codes","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-errno","license":"MIT","dependencies":[],"stars":6,"forks":0,"watchers":6,"issues":0,"updated":1602021261,"full_description":"\u003cimg src=\"https://dl.dropboxusercontent.com/u/56336/omf/omf-logo-optimised.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### errno\n\u003e An [Oh My Fish][omf-link] plugin to deal with POSIX error codes\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install errno\n```\n\n## Usage\n\nTranslate error codes to return status codes:\n\n```fish\n$ errno EINVAL; echo $status\n23\n```\n\nLookup error codes or numbers message strings:\n\n```fish\n$ strerror 23\nInvalid argument\n```\n\nBoth functions include completions:\n\n- `errno`\u003ckbd\u003eTAB\u003c/kbd\u003e shows all POSIX error codes\n- `strerror`\u003ckbd\u003eTAB\u003c/kbd\u003e shows message strings for all POSIX error codes\n\n\n# License\n\n[MIT][mit] © [Derek Willian Stavis][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/derekstavis\n[contributors]:   https://github.com/derekstavis/plugin-errno/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"exenv":{"name":"exenv","description":"","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-exenv","license":"MIT","dependencies":[],"stars":1,"forks":2,"watchers":1,"issues":0,"updated":1613331539,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n#  [_exenv_](https://github.com/mururu/exenv)\n\nElixir environment/version manager plugin for [Oh My Fish][omf-link].\n\n## Install\n\u003e _Note_: You need to have `exenv` installed.\n\n```fish\n$ omf install exenv\n```\n\n## Configuration\n\nIf you have a custom exenv root, you can add the following to your `~/.config/fish/init.fish` file before sourcing Oh My Fish.\n\n```\nset -gx EXENV_ROOT #path\n```\n\n# License\n\n[MIT][mit] © [janlindblom][author]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/janlindblom\n[contributors]:   https://github.com/janlindblom/plugin-exenv/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"expand":{"name":"expand","description":"Provides interactive word expansions in real-time","image":"https://asciinema.org/a/39860.png","latest_version":{"version":"v1.0.0","description":"First release of `expand`. Has bugfixes, and supports multiple expansion providers.\n","commit_hash":"master","release_date":1458336314},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"First release of `expand`. Has bugfixes, and supports multiple expansion providers.\n","release_date":1458336314,"version":"v1.0.0"}],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-expand","license":"MIT","dependencies":[],"stars":51,"forks":8,"watchers":51,"issues":2,"updated":1668948331,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" height=\"160px\"/\u003e\n\n### expand\nWord expansion for [Oh My Fish!][omf].\n\n[![MIT License][license-badge]](/LICENSE)\n\n\u003cbr/\u003e\n\n\n## Overview\nThis plugin provides the means of adding word-by-word expansions for other plugins, as well as for your own expansions. A word expansion is a real-time substitution of the words you type on the command line. It is a bit like `abbr`, but dynamic and extensible and a whole lot more awesome.\n\n\n[![asciicast](https://asciinema.org/a/39860.png)](https://asciinema.org/a/39860)\n\n\n## Install\n```fish\n$ omf install expand\n```\n\n\n## Using it\nUsing expansions already provided by your installed plugins couldn't be any easier. Word expansions are triggered when you use the \u003ckbd\u003eTAB\u003c/kbd\u003e key when the cursor is over a word. Before checking for regular command completions, the current word will be checked against available word expansions. If a suitable expansion is found, the current word will be replaced with the result of the expansion.\n\nIf more than one suitable expansion is found for the current word, `expand` will attempt to use an _interactive filter_ tool to allow you to choose interactively which expansion you would like to use (or none if you don't want any of them). By default, `expand` will use the filter command specified in the `$FILTER` environment variable. If a filter is not specified, `expand` will look for some popular ones if you have them installed:\n\n- [fzf]: A command-line fuzzy finder written in Go.\n- [peco]: The simplistic interactive filtering tool, written in Go.\n- [percol]: An interactive grep tool written in Python.\n- [selecta]: A fuzzy text selector written in Ruby.\n\nIf no filters are specified or installed, you can still cycle through all of the available replacements by pressing \u003ckbd\u003eTAB\u003c/kbd\u003e repeatedly.\n\nIf you decide that you want to cancel the current expansion, you can press \u003ckbd\u003eBackspace\u003c/kbd\u003e to undo the expansion.\n\nExpansions can be more than simple abbreviations; the current word can be used to introduce patterns and queries to provide dynamic expansions in real-time.\n\n\n## Writing expansions\nWriting your own expansions is incredibly simple. There are two parts to a word expansion: a condition, and an expander. A condition is the means of specifying on what words your expander should be run. The expander is a script or function that takes the current word and produces a replacement as its output. Below is a simple but useful example that lets you expand a substitution syntax (like `s/something/something else`) into the previous command with the substitution applied:\n\n```fish\nexpand-word -p '^s/..*/.*$' -e 'echo -n \"$history[1]\" | sed -e (commandline -t)/g'\n```\n\nAnd that's really all that you need! Try running the above command, and then try pressing the tab key on a substitution:\n\n```fish\n$ git stats\ngit: 'stats' is not a git command. See 'git --help'.\n\nDid you mean this?\n        status\n$ s/stats/status\u003cTab\u003e\n$ git status\n```\n\nThe `expand-word` function registers a new expander by specifying the condition and the expander itself as option arguments. There are two interesting flags used in this expansion: `-p` and `-e`. First let's look at what `-e` is doing. This flag is short for the `--expander` option, which specifies the expander function or script to run. The expander uses the builtin [`commandline`][commandline] command to print the current _token_, or word, that is being expanded and uses it as a substitution expression with `sed`. The replaced command is then printed out, and the output is used by `expand` to replace the current word.\n\nYou can do pretty much anything you like in an expander. All you are required to do is print the desired replacement for the current word to standard output, and `expand` will do the rest. Now let's look closer at how we can use conditions to properly choose when our expander should run.\n\n\n### Conditions\nThere are two different types of conditions currently available: patterns, or functions.\n\nA pattern condition is an [extended regular expression][regex] that is matched against the current word. If the word matches, the corresponding expander is used. Let's look at how we can use a pattern to run an expander on words that start with `git`:\n\n```fish\nexpand-word -p '^git.+' -e 'some_expander_function'\n```\n\nThe `^git.+` pattern will match any word that starts with `git`, but not `git` itself. Keep in mind that the regular expression format is the POSIX ERE syntax, not PCRE. Check the `grep` manual for a good guide to this syntax.\n\nThe second type of condition is more interesting; a function condition is a script or function that is run each time you attempt to expand a word. The function can perform any logic you need to perform in order to correctly determine if your expander can expand the current word. If the word is of a format that your expander is expecting, your function should return `0` to tell `expand` to use your expander. If the function cannot expand the given word, a non-zero value should be returned instead, and expander will be skipped.\n\nFor performance reasons, you may want to put some effort into optimizing a condition function, since _all_ of the condition functions will run every time you expand a word. If you have a lot of expansions or slow conditions, you may experience some lag when expanding words.\n\nBelow is an example of using a function as an expansion condition:\n\n```fish\nfunction should_expand_home\n  if test (commandline -t) != \"home\" -a \"$PWD\" != \"$HOME\"\n    return 1\n  end\nend\n\nexpand-word -c 'should_expand_home' -e 'echo $HOME'\n```\n\nThis expansion will only be used on the word \"home\", but only if you are not currently in your home directory. Pretty cool, eh?\n\n\n### Giving up\nIn addition to conditions, you can also have your expanders \"give up\" prematurely when trying to expand a word by returning a non-zero exit code. If your expander gives up a word, it will be ignored and the next expander will be used as normal.\n\n\n## License\n[MIT][mit] © [Stephen Coakley][author] et [al][contributors]\n\n\n[author]: https://github.com/coderstephen\n[commandline]: http://fishshell.com/docs/current/commands.html#commandline\n[completions]: http://fishshell.com/docs/current/tutorial.html#tut_tab_completions\n[contributors]: https://github.com/oh-my-fish/plugin-fasd/graphs/contributors\n[fzf]: https://github.com/junegunn/fzf\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[mit]: http://opensource.org/licenses/MIT\n[omf]: https://www.github.com/oh-my-fish/oh-my-fish\n[peco]: https://github.com/peco/peco\n[percol]: https://github.com/mooz/percol\n[regex]: http://pubs.opengroup.org/onlinepubs/009696899/basedefs/xbd_chap09.html\n[selecta]: https://github.com/garybernhardt/selecta\n","repository_updated":0},"export":{"name":"export","description":"export like bash","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"jcouyang","repository":"https://github.com/jcouyang/plugin-export","license":"MIT","dependencies":[],"stars":3,"forks":0,"watchers":3,"issues":0,"updated":1666455544,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# export\n\nPlugin for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf install export\n```\n\n\n## Usage\n\n```fish\n$ export\n```\n\n# License\n\n[MIT][mit] © [{{USER}}][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/pkg-export/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"fasd":{"name":"fasd","description":"fasd plugin for Oh My Fish","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-fasd","license":"","dependencies":[],"stars":26,"forks":13,"watchers":26,"issues":2,"updated":1671803582,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### fasd\n\u003e [fasd] plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install fasd\n```\n\n\n# License\n\n[MIT][mit] © [simnalamburt][author] et [al][contributors]\n\n\n[fasd]:           https://github.com/clvv/fasd\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/simnalamburt\n[contributors]:   https://github.com/oh-my-fish/plugin-fasd/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"feedback":{"name":"feedback","description":"Display feedback messages","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":null,"tags":[],"author":"Lusiadas","repository":"https://gitlab.com/lusiadas/feedback","license":"Unknown","dependencies":null,"stars":0,"forks":0,"watchers":0,"issues":0,"updated":0,"full_description":"","repository_updated":0},"fish_logo":{"name":"fish_logo","description":"🐠 Fish shell colorful ASCII-art logo","image":"https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-bright.dark.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["ascii-art","ascii-art-logo","fish","fish-functions","fish-packages","fish-plugin","fish-plugins","fish-shell","fisher","fishshell","logo","oh-my-fish","oh-my-fish-plugin"],"author":"laughedelic","repository":"https://github.com/laughedelic/fish_logo","license":"MIT","dependencies":[],"stars":104,"forks":9,"watchers":104,"issues":0,"updated":1666890320,"full_description":"# fish_logo\n\n[![](https://img.shields.io/badge/license-MIT-blue.svg)](https://www.tldrlegal.com/l/mit)\n[![](https://fisherman-wharf.herokuapp.com/badge.svg)](https://fisherman-wharf.herokuapp.com)\n\nThis plugin adds a function to print out the [fish-shell](http://fish.sh) ASCII-art logo. And it's customizable! See [Usage](#usage) and [Examples](#examples).\n\n\u003cdiv align=\"center\"\u003e\n  \u003cimg\n    width=\"400\"\n    src=\"https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/default-base16-colors.png\"\n  /\u003e\n\u003c/div\u003e\n\n\n## Installation\n\n* Using [Fisher](https://github.com/jorgebucaran/fisher):\n  ```shell\n  fisher install laughedelic/fish_logo\n  ```\n\n* Using [oh-my-fish](https://github.com/oh-my-fish/oh-my-fish):\n  ```shell\n  omf install fish_logo\n  ```\n\n\n## Usage\n\n* This plugin adds the `fish_logo` function with the following _positional_ arguments:\n\n  | # | Argument       | Default  |\n  |--:|:---------------|:--------:|\n  | 1 | outer color    |  `red`   |\n  | 2 | medium color   |  `f70`   |\n  | 3 | inner color    | `yellow` |\n  | 4 | \"mouth\" symbol |   `[`    |\n  | 5 | eye symbol     |   `O`    |\n\n* Colors are any valid arguments of the [`set_color`](http://fish.sh/docs/current/commands.html#set_color) command: named colors, 3 or 6 hex digits. Named colors are _autocompleted_.\n\n* To \"skip\" an argument (e.g. use the default), just pass an empty one:\n\n  ```fish\n  fish_logo f00 '' ff0\n  ```\n\n* If you don't want colors, you can use\n\n  ```fish\n  fish_logo normal normal normal\n  ```\n\n* There are several variations of the logo with different symbols used for its \"mouth\" and eye. The defaults correspond to the logo on the fish-shell website. Another variation of the logo seen in the wild uses `L` and `@` symbols:\n\n  ```fish\n  fish_logo '' '' '' L @\n  ```\n\n  This really affects how the fish looks, so try to experiment with it yourself.\n\n* You can add this logo to your [fish greeting](http://fish.sh/docs/current/index.html#greeting) with this function:\n\n  ```fish\n  function fish_greeting\n      fish_logo\n  end\n  ```\n\n  Just write it to `~/.config/fish/functions/fish_greeting.fish` and you will see it every time you start a new session.\n\n\n## Examples\n\nNote, that named colors will be interpreted by _your terminal_, so the overall look of the logo will \"adapt\" to your terminal color scheme.  \n\nThe orange color is not in the standard 8-colors palette, so the default for it is hardcoded, but anyway it should look well with different variations of red and yellow.\n\n| Terminal |  Typeface  | Color Schemes |\n|:--------:|:----------:|:-------------:|\n| [iTerm2] | [mononoki] |   [base16]    |\n\n| ![red-google]      | ![blue-londontube] | ![red-default]      |\n|:-------------------|:-------------------|:--------------------|\n| ![blue-harmonic16] | ![red-solarized-l] | ![red-solarized]    |\n| ![red-monokai]     | ![blue-solarized]  | ![blue-solarized-l] |\n\n\n## Credits\n\nThis work is based on the following findings:\n\n- In the [fish-shell repo](https://github.com/fish-shell/fish-shell):\n  + [`doc_src/ascii_fish.png`](https://github.com/fish-shell/fish-shell/blob/master/doc_src/ascii_fish.png)\n  + [`doc_src/branding/`](https://github.com/fish-shell/fish-shell/tree/master/doc_src/branding) with the graphical logo made by [@stestagg](https://github.com/stestagg)\n  + discussion in [#114](https://github.com/fish-shell/fish-shell/issues/114) and the [function](https://github.com/fish-shell/fish-shell/issues/114#issuecomment-24101750) by [@xfix](https://github.com/xfix)\n- [gist](https://gist.github.com/siteshwar/5472791) by [@siteshwar](https://github.com/siteshwar) with a variation of the logo\n\n\n[iTerm2]: http://iterm2.com/\n[mononoki]: http://madmalik.github.io/mononoki/\n[base16]: https://github.com/chriskempson/base16/\n\n[red-bright]:      https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-bright.dark.png\n[red-colors]:      https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-colors.dark.png\n[red-flat]:        https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-flat.dark.png\n[red-default]:     https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-default.dark.png\n[red-monokai]:     https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-monokai.dark.png\n[red-solarized]:   https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-solarized.dark.png\n[red-google]:      https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-google.dark.png\n[red-tomorrow]:    https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-tomorrow.dark.png\n[red-solarized-l]: https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/red-base16-solarized.light.png\n\n[blue-3024]:        https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/blue-base16-3024.dark.png\n[blue-eighties]:    https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/blue-base16-eighties.dark.png\n[blue-harmonic16]:  https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/blue-base16-harmonic16.dark.png\n[blue-londontube]:  https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/blue-base16-londontube.dark.png\n[blue-solarized]:   https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/blue-base16-solarized.dark.png\n[blue-solarized-l]: https://gist.githubusercontent.com/laughedelic/b7d5e572b0a35afd51fd40a2d9eef66b/raw/blue-base16-solarized.light.png\n","repository_updated":0},"fishingz":{"name":"fishingz","description":"Friendly interactive shell (Fish) Plugin.","image":"https://user-images.githubusercontent.com/39640214/41501398-9ff0be4e-71de-11e8-8720-41733d6c0f7e.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"nekochango","repository":"https://github.com/nekochango/fishingz","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":4,"updated":1530371861,"full_description":"# \u003cimg src=\"http://placehold.jp/32/39aaff/000000/180x40.png?text=fishingz\"\u003e\nA plugin dedicated to fish shell for fast access to all file systems.  \nAccess is made based on path information collected in advance (hereinafter referred to as DB).\n\n　\n\n## \u003cimg src=\"http://placehold.jp/32/39aaff/444444/180x40.png?text=contents\"\u003e\n\u003cb\u003e\u003ca href=\"#-2\"\u003eFeatures\u003c/a\u003e\u003c/b\u003e\u003cbr/\u003e\n\u003cb\u003e\u003ca href=\"#-3\"\u003eDemo(1)\u003c/a\u003e\u003c/b\u003e\u003cbr/\u003e\n\u003cb\u003e\u003ca href=\"#-4\"\u003eDemo(2)\u003c/a\u003e\u003c/b\u003e\u003cbr/\u003e\n\u003cb\u003e\u003ca href=\"#-5\"\u003eDemo(3)\u003c/a\u003e\u003c/b\u003e\u003cbr/\u003e\n\u003cb\u003e\u003ca href=\"#-6\"\u003eInstall\u003c/a\u003e\u003c/b\u003e\u003cbr/\u003e\n\u003cb\u003e\u003ca href=\"#-7\"\u003eSetup\u003c/a\u003e\u003c/b\u003e\u003cbr/\u003e\n\u003cb\u003e\u003ca href=\"#-8\"\u003eAdvanced Settings\u003c/a\u003e\u003c/b\u003e\u003cbr/\u003e\n\n　\n\n## \u003cimg src=\"http://placehold.jp/24/39aaff/ffffff/180x40.png?text=Features\"\u003e\n### :whale: High-speed access using DB\n```diff\n+ Open the DB and select the target path.\n+　　- Do not identify path (find command execution) every access\n+ The process is automatically executed as follows depending on the type of the selected path.\n+　　- If it is \"directory\", execute cd\n+　　- If it is HTML, it opens in the web browser\n+　　- If it is Text, it will be opened with your favorite editor\n```\n\n### :whale: Acquire pass only from DB\n```diff\n+ Ctrl-k will copy the path under the cursor to the clipboard\n+ After copying it returns to the command line so you can paste with Shift - Insert etc.\n+　　- The path obtained by this can be an argument such as grep, cp, mv, diff, ls\n```\n\n### :whale: Initial DB construction applied high speed correspondence\n```diff\n+ DB Collect file paths using machine specifications as much as possible only when it is first constructed.\n```\n\n### :whale: Automatic DB update after the second time\n```diff\n+ Use fishingz for a certain number of times, or automatic update is performed when a certain time has passed since immediately after DB construction\n+　　- The threshold up to DB update can be set freely\n+　　- When rebuilding the DB, it is done with the machine load reduced in the background (load change is also possible)\n+　　- Scheduler registration such as cron, at etc. is unnecessary because the update opportunity is simple\n```\n\n### :whale: File can be searched from DB by sonar command which is a subset\n```diff\n+ After DB construction, you can search files from DB using sonar command.\n+　　- The usage of the sonar command is the same as egrep (just calls egrep)\n```\n\n\n## \u003cimg src=\"http://placehold.jp/24/39aaff/ffffff/180x40.png?text=Demo(1)\"\u003e\n### Move to the /etc/apache2/sites-enabled directory\n#### :fish: 1　Open DB\n+ Open the DB by entering C-u C-u from the command line. (Key can be changed)   \n![open_a_locatedb](https://user-images.githubusercontent.com/39640214/41501398-9ff0be4e-71de-11e8-8720-41733d6c0f7e.gif)\n\n#### :fish: 2　Select a path\n+ We narrow down as \u003cb\u003e/etcapac2site\u003c/b\u003e by fzf.    \n+ Select the target \u003cb\u003e [d] /etc/apache2/sites - enabled \u003c/b\u003e.    \n+ \u003cB\u003e cd /etc/apache2/sites-enabled \u003c/b\u003e was executed with the above operation  \n![select_dir](https://user-images.githubusercontent.com/39640214/41502097-6ecb9834-71ed-11e8-804e-0cdfd8f8f102.gif)\n\n　\n\n## \u003cimg src=\"http://placehold.jp/24/39aaff/ffffff/180x40.png?text=Demo(2)\"\u003e\n### Open /home/neko/.local/share/fish/generate_completions/fzf-tmux.fish with nvim-qt\n#### :fish: 1　Open DB for file\n+ Open the file DB by entering C-u C-f from the command line. (Key can be changed)\n\n#### :fish: 2　Select a path\n+ Filter by fzf as fishfzf.fish.\n+ Select the target \u003cb\u003e /home/neko/.local/share/fish/generate_completions/fzf-tmux.fish \u003c/b\u003e.  \n![demo_f](https://user-images.githubusercontent.com/39640214/41606895-b448e1da-741f-11e8-9388-0b3b85ba016d.gif)\n\n　\n\n## \u003cimg src=\"http://placehold.jp/24/39aaff/ffffff/180x40.png?text=Demo(3)\"\u003e\n### Copy only path information from DB with Ctrl-k\n#### :fish: 1　Open DB for file\n+ Open Directory for DB by entering C-u C-i from the command line. (Key can be changed) \n\n#### :fish: 2　Select a path\n+ Move the cursor to /etc/systemd\n+ Press Ctrl-k to copy /etc/systemd to clipboard (key can be changed)\n+ Paste to the console with Shift-Insert\n![ctrlk](https://user-images.githubusercontent.com/39640214/41803236-c112332c-76c1-11e8-920a-c986c656e75a.gif)\n\n\n　\n\n\n## \u003cimg src=\"http://placehold.jp/24/39aaff/ffffff/180x40.png?text=Install\"\u003e\n\n### :tropical_fish:　　Required Software\n```diff\n+ 　　　fish (Over ver2.7)\n+ 　　　fzf  \n+ 　　　xclip Or xsel\n```  \n\n### :tropical_fish:　　1.　Install fishingz\n\u003cb\u003eby GitHub\u003c/b\u003e\n```console  \ngit clone https://github.com/nekochango/fishingz  \ncp -p ./fishingz/fishingz.fish $HOME/.config/fish/function/.  \n```\n```console\nsource $HOME/.config/fish/functions/fishingz.fish\n```\n\n### :tropical_fish:　　2.　Install fzf\n- [fzf　:mag:](https://github.com/junegunn/fzf#using-git)\n```console\ngit clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf\n~/.fzf/install\n```\n\n### :tropical_fish:　　3.　Install xclip\n- [xclip　:mag:](https://github.com/astrand/xclip)  \n\nIf there is no administrator authority, compile and create xclip.\n```console\ngit clone https://github.com/astrand/xclip\nautoreconf\t\t# create configuration files\n./configure\t\t# create the Makefile\nmake\t\t\t# build the binary\n```\n\nIf you have administrator privileges, install with \napt-get install \u003c/b\u003e. \n```console\napt-get install -y xclip\n```\n\n　\n\n## \u003cimg src=\"http://placehold.jp/24/39aaff/ffffff/180x40.png?text=Setup\"\u003e\n\n\n### :tropical_fish:　　1.　Make key binding to call fishingz\n\n|Key|Corresponding command|processing Contents|\n|---|---|:--|\n|C-u C-u|fishingz|Use a DB containing \"directory\", \"file\", \"symbolic link\", \"history\" all.|\n|C-u C-i|fishingz --find-dir|Use a DB containing only \"directory\".|\n|C-u C-f|fishingz --find-file|Use a DB containing only \"file\".|\n|C-u C-l|fishingz --find-link|Use a DB containing only \"symbolic link file\".|\n|C-u C-m|fishingz --find-mru|Use a DB containing only \"history\".|\n\n　\n\nWhen setting the above table, please describe as follows. \n　\n\n***$HOME/.config/fish/functions/fish_user_key_bindings.fish***  \n```diff\n  function fish_user_key_bindings  \n    ### fishingz ###  \n+   bind \\cu\\cu 'fishingz             ; commandline -f repaint'\n+   bind \\cu\\ci 'fishingz --find-dir  ; commandline -f repaint'\n+   bind \\cu\\cf 'fishingz --find-file ; commandline -f repaint'\n+   bind \\cu\\cl 'fishingz --find-link ; commandline -f repaint'\n+   bind \\cu\\cm 'fishingz --find-mru  ; commandline -f repaint'\n\n    fzf_key_bindings\n    ### fzf ###\n    if test \"$FZF_LEGACY_KEYBINDINGS\" -eq 1\n        bind \\ct '__fzf_find_file'\n        bind \\cr '__fzf_reverse_isearch'\n        bind \\ec '__fzf_cd'\n        bind \\eC '__fzf_cd --hidden'\n(-- snip --)\n```\n\n　\n\n### :tropical_fish:　　2.　Build a DB\n```console\nfishingz -i\n```\nIn the initial setting, the following file system is excluded from searching.\n```\n/lost+found 　/snap 　/proc 　/sbin 　/media 　/root 　/opt\n/srv 　/cdrom 　/lib64 　/mnt 　/run 　/tmp 　/lib 　/dev\n```\n\n　\n\n### :tropical_fish:　　3.　Register the application for each file type  \nRegister the application you want to use for each file type.  \nThe file type corresponds to the result of \"file-b-i\".\nIt is also executed from the corresponding application.\n\n　\n\n***$HOME/.fishingz/init.fish***  \n```\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n# Command to execute in case of [f]\n# file-type : command : use sudo when readonly file : redirect : background \n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nset -g  FISHINGZ_F_ACTIONS  '\n  \"text/html\"       : \"setsid google-chrome\" : \"\"     : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"application/xml\" : \"setsid google-chrome\" : \"\"     : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"text/html\"       : \"setsid google-chrome\" : \"sudo\" : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"text/xml\"        : \"setsid google-chrome\" : \"sudo\" : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"text\"            : \"nvim\"                 : \"sudo\" : \"\"                        : \"\"   \n  \"image\"           : \"setsid xdg-open\"      : \"\"     : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"inode/x-empty\"   : \"nvim\"                 : \"\"     : \"\"                        : \"\"\n'\n```\n\n　\n\n\u003cb\u003e**With this you can use fishingz.**\u003c/b\u003e\n\n　\n\n## \u003cimg src=\"http://placehold.jp/24/39aaff/ffffff/280x40.png?text=Advanced%20Settings\"\u003e\n\n\nThe following can be done as necessary.\n　 \n\n### :dolphin:　　1.　Set up fishingz\n\nThe configuration file is $ HOME/.fishingz/init.fish.\n\n|Variable name|Processing content|Default value|\n|---|:--|:--|\n|FISHINGZ_F_ACTIONS|Define the application you want to use according to the file type||\n|FISHINGZ_DB_REBLD_THLD_C|Number of times fishingz used to rebuild DB|50|\n|FISHINGZ_DB_REBLD_THLD_T|Elapsed time to DB reconfiguration (sec)|86400(sec)=1day|\n|FISHINGZ_NPROC_ON_REBUILD|Number of CPUs used for DB reconstruction|1|\n|FISHINGZ_HISTMAX|Number of MRUs to keep|1000|\n|FISHINGZ_COLOR_D|Display color of directory when opening DB|32m (green)|\n|FISHINGZ_COLOR_F|Display color of file when opening DB|36m (cyan)|\n|FISHINGZ_COLOR_L|Symbolic link display color when opening DB|35m (purple)|\n|FISHINGZ_COLOR_M|MRU display color when opening DB|33m (yellow)|\n|FISHINGZ_FZF_COLOR|Color setting in fzf mode||\n|FISHINGZ_HISTMAX|Key setting for single line copy processing in fzf mode||\n|FISHINGZ_EXCLUDE_FS|File system you want to exclude from DB|/lost+found, /snap, /proc, /sbin, ...|\n|FISHINGZ_EXCLUDE_DIR|Directory you want to exclude from DB|.git, .svn, CVS|\n　\n\nWhen setting the above table, please describe as follows.\n　\n\n***$HOME/.fishingz/init.fish***  \n```\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n# Command to execute in case of [f]\n# file-type : command : use sudo when readonly file : redirect : background \n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nset -g  FISHINGZ_F_ACTIONS  '\n  \"text/html\"       : \"setsid google-chrome\" : \"\"     : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"application/xml\" : \"setsid google-chrome\" : \"\"     : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"text/html\"       : \"setsid google-chrome\" : \"sudo\" : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"text/xml\"        : \"setsid google-chrome\" : \"sudo\" : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"text\"            : \"nvim\"                 : \"sudo\" : \"\"                        : \"\"   \n  \"image\"           : \"setsid xdg-open\"      : \"\"     : \"1\u003e/dev/null 2\u003e/dev/null\" : \"\u0026\"  \n  \"inode/x-empty\"   : \"nvim\"                 : \"\"     : \"\"                        : \"\"\n'\n\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n# No searchable top directories, when creating database\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nset -g  FISHINGZ_EXCLUDE_FS   \"/mnt\"  \"/srv\"  \"/lib\"  \"/lib64\"  \n\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n# No searchable directories, when creating database\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nset -g FISHINGZ_EXCLUDE_DIR  \".mozilla\"  \".cache\"\n\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n# It represents how many times fishingz is updated when it is updated\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nset -g  FISHINGZ_DB_REBLD_THLD_C  50      # 50 reps\nset -g  FISHINGZ_DB_REBLD_THLD_T  86400   # 1day=3600(sec)*24\n\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n# the number of lines or commands that (a) are allowed in the history file \n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nset -g  FISHINGZ_HISTMAX          10000\n\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n# Number of Core to use when re-building DB\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nset -g FISHINGZ_NPROC_ON_REBUILD  1\n\n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n# fzf color settings.\n# 30:black, 31:red, 32:green, 33:yellow, 34:blue, 35:magenta, 36:cyan, 37:white \n#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nset -g  FISHINGZ_COLOR_D  32m       # [d] directory\nset -g  FISHINGZ_COLOR_F  36m       # [f] file\nset -g  FISHINGZ_COLOR_L  35m       # [l] symlink\nset -g  FISHINGZ_COLOR_M  33m       # [M] MRU\nset -g  FISHINGZ_FZF_COLOR \"--color=hl:#ff00b0,bg+:#666666\"\n```\n\n　\n","repository_updated":0},"fonts":{"name":"fonts","description":"Automatically download and install fonts from Google Fonts and Powerline Fonts repositories","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"derekstavis","repository":"https://github.com/derekstavis/plugin-fonts","license":"MIT","dependencies":[],"stars":5,"forks":2,"watchers":5,"issues":5,"updated":1601254817,"full_description":"\u003cimg src=\"https://dl.dropboxusercontent.com/u/56336/omf/omf-logo-optimised.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Fonts\n\u003eA font package manager for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install fonts\n```\n\n## Usage\n\nTo install a font:\n\n```fish\n$ fonts install raleway\n```\n\nTo install a powerline font:\n\n```\n$ fonts install --powerline Inconsolata\n```\n\nTo remove fonts:\n\n```fish\n$ fonts remove raleway\n$ fonts remove Inconsolata\n```\n\nTo list all available fonts\n\n```fish\n$ fonts list\n```\n\n# Font sources\n\n[Google Fonts][google-fonts] and [Powerline Fonts][powerline-fonts] Github\nrepositories.\n\n# License\n\n[MIT][mit] © [Derek Willian Stavis][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/derekstavis\n[contributors]:   https://github.com/derekstavis/pkg-fonts/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[google-fonts]:    https://github.com/google/fonts\n[powerline-fonts]: https://github.com/powerline/fonts\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"foreign-env":{"name":"foreign-env","description":"Run foreign bash scripts and capture exported environment variables","image":"https://github.com/oh-my-fish/plugin-foreign-env/actions/workflows/test.yml","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-foreign-env","license":"MIT","dependencies":[],"stars":175,"forks":12,"watchers":175,"issues":10,"updated":1672334490,"full_description":"\u003cimg src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Foreign Environment\n\u003e A foreign environment interface for Fish shell\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n[![test](https://github.com/oh-my-fish/plugin-foreign-env/actions/workflows/test.yml/badge.svg)](https://github.com/oh-my-fish/plugin-foreign-env/actions/workflows/test.yml)\n\n\u003cbr/\u003e\n\nForeign environment wraps application execution in a way that environment variables that are exported or modified get imported back into fish. This makes possible running popular bash scripts, like the excellent `nvm`.\n\n\n# Install\n\nBe sure to have [Oh My Fish][omf-link] installed, so you just need to:\n\n```fish\nomf install foreign-env\n```\n\nIf you dislike shell frameworks, you can still use Foreign Environment in Fish! Clone this repo somewhere and append to your `~/.config/fish/config.fish`:\n\n```fish\nset fish_function_path $fish_function_path \u003cinsert path to foreign-env repo\u003e/functions\n```\n\n\n# Usage examples\n\nYou can use bash syntax to export variables:\n\n```fish\nfenv export PYTHON=python2\n```\n\nThis will have the same effect as typing:\n\n```fish\nset -g -x PYTHON python2\n```\n\nYou can also call multiple commands, separated by semicolon:\n\n```fish\nfenv source ~/.nvm/nvm.sh \\; nvm --help\n```\n\nWhen commands aren't double quoted, you need to escape semicolon with slash `\\;` to prevent fish from interpreting it. Or just quote the whole command:\n\n```fish\nfenv \"source ~/.nvm/nvm.sh; nvm --help\"\n```\n\n\n# Caveats\n\n* Currently we only handle environment variables that are added or modified. If a variable is unset (removed from environment) it will not be removed from fish.\n\n# License\n\n[MIT][mit] © [Derek Willian Stavis][author]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/derekstavis\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n","repository_updated":0},"fuck":{"name":"fuck","description":"Execute last command as root in fish","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"RubieV","repository":"https://github.com/RubieV/plugin-fuck","license":"MIT","dependencies":[],"stars":3,"forks":0,"watchers":3,"issues":0,"updated":1596982257,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### fuck\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install fuck\n```\n\n\n## Usage\n\nExecute last command as sudo\n\n```fish\n$ whoami\nuser\n$ fuck\nroot\n```\n\n\n# License\n\n[MIT][mit] © [Ruben van Vreeland][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/rubiev\n[contributors]:   https://github.com/rubiev/plugin-fuck/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"fzf":{"name":"fzf","description":"Ef-🐟-ient fish keybindings for fzf","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","fisher","fzf"],"author":"jethrokuan","repository":"https://github.com/jethrokuan/fzf","license":"MIT","dependencies":[],"stars":800,"forks":66,"watchers":800,"issues":26,"updated":1672731327,"full_description":"# Fzf\n\nIntegrate [fzf](https://github.com/junegunn/fzf) (command-line fuzzy finder) functionality into [Fish](https://github.com/fish-shell/fish-shell). Includes handy functions to:\n\n- complete commands via \u003ckbd\u003eTab\u003c/kbd\u003e\n- search command history\n- find and `cd` into sub-directories\n- find and open files\n\nAll functions:\n\n- are lazily-loaded to keep shell startup time down\n- have configurable key bindings\n\n## Installation\n\n### System Requirements\n\n- [fzf](https://github.com/junegunn/fzf) \u003e= `0.11.3`\n- [Fish](https://github.com/fish-shell/fish-shell) \u003e= `2.4.0`\n\nInstall with [Fisher](https://github.com/jorgebucaran/fisher):\n\n```console\nfisher install jethrokuan/fzf\n```\n\n## Quickstart\n\n| Legacy      | New Keybindings | Remarks                                         |\n| ----------- | --------------- | ----------------------------------------------- |\n| Ctrl-t      | Ctrl-o          | Find a file.                                    |\n| Ctrl-r      | Ctrl-r          | Search through command history.                 |\n| Alt-c       | Alt-c           | cd into sub-directories (recursively searched). |\n| Alt-Shift-c | Alt-Shift-c     | cd into sub-directories, including hidden ones. |\n| Ctrl-o      | Alt-o           | Open a file/dir using default editor ($EDITOR)  |\n| Ctrl-g      | Alt-Shift-o     | Open a file/dir using xdg-open or open command  |\n\nLegacy keybindings are kept by default, but these have conflict with key bindings in Fish 2.4.0. If you want to use the new keybindings, ƒenter the following into your terminal:\n\n```fish\nset -U FZF_LEGACY_KEYBINDINGS 0\n```\n\nYou can disable default keybindings altogether by running:\n\n```fish\nset -U FZF_DISABLE_KEYBINDINGS 1\n```\n\n\u003e **Note:** On OS X, \u003ckbd\u003eAlt\u003c/kbd\u003e+\u003ckbd\u003eC\u003c/kbd\u003e (Option-C) types ç by default. In iTerm2, you can send the right escape sequence with \u003ckbd\u003eEsc\u003c/kbd\u003e+\u003ckbd\u003eC\u003c/kbd\u003e. If you configure the option key to act as +Esc (iTerm2 Preferences \u003e Profiles \u003e Default \u003e Keys \u003e Left option (⌥) acts as: \u003e +Esc), then \u003ckbd\u003eAlt\u003c/kbd\u003e+\u003ckbd\u003eC\u003c/kbd\u003e will work for `fzf` as documented.\n\n## Commands\n\n| Variable                     | Remarks                                                     | Example                                                                                                                                                                                      |\n| ---------------------------- | ----------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `FZF_FIND_FILE_COMMAND`      | Modify the command used to generate the list of files       | `set -U FZF_FIND_FILE_COMMAND \"ag -l --hidden --ignore .git . \\$dir 2\u003e /dev/null\"` or `set -U FZF_FIND_FILE_COMMAND \"fd --type f . \\$dir\"` (`$dir` represents the directory being completed) |\n| `FZF_CD_COMMAND`             | Similar to ^                                                | Similar to ^                                                                                                                                                                                 |\n| `FZF_CD_WITH_HIDDEN_COMMAND` | Similar to ^                                                | Similar to ^                                                                                                                                                                                 |\n| `FZF_OPEN_COMMAND`           | Similar to ^                                                | Similar to ^                                                                                                                                                                                 |\n| `FZF_PREVIEW_FILE_CMD`       | Modify the command used to generate preview of files.       | `set -U FZF_PREVIEW_FILE_CMD \"head -n 10\"`                                                                                                                                                   |\n| `FZF_PREVIEW_DIR_CMD`        | Modify the command used to generate preview of directories. | `set -U FZF_PREVIEW_DIR_CMD \"ls\"`                                                                                                                                                            |\n\n## Variables\n\n| Variable                   | Remarks                                                       | Example                                               |\n| -------------------------- | ------------------------------------------------------------- | ----------------------------------------------------- |\n| `FZF_DEFAULT_OPTS`         | Default options passed to every fzf command                   | `set -U FZF_DEFAULT_OPTS \"--height 40\"`               |\n| `FZF_FIND_FILE_OPTS`       | Pass in additional arguments to the fzf command for find file | `set -U FZF_FIND_FILE_OPTS \"--reverse --inline-info\"` |\n| `FZF_CD_OPTS`              | Similar to ^                                                  | Similar to ^                                          |\n| `FZF_CD_WITH_HIDDEN_OPTS`  | Similar to ^                                                  | Similar to ^                                          |\n| `FZF_REVERSE_ISEARCH_OPTS` | Similar to ^                                                  | Similar to ^                                          |\n| `FZF_OPEN_OPTS`            | Similar to ^                                                  | Similar to ^                                          |\n| `FZF_COMPLETE_OPTS`        | Similar to ^                                                  | Similar to ^                                          |\n| `FZF_TMUX`                 | Runs a tmux-friendly version of fzf instead.                  | `set -U FZF_TMUX 1`                                   |\n| `FZF_ENABLE_OPEN_PREVIEW`  | Enable preview window open command.                           | `set -U FZF_ENABLE_OPEN_PREVIEW 1`                    |\n\n## `fzf` Tab Completions\n\nThis package ships with a `fzf` widget for fancy tab completions.\n\nPlease see [the wiki page](https://github.com/jethrokuan/fzf/wiki/FZF-Tab-Completions) for details.\n\n## Alternatives\n\n- [fzf.fish](https://github.com/patrickf3139/fzf.fish) is a newer fzf plugin with very similar features. It lacks fzf tab completion but includes functions for searching git log, git status, and browsing shell variables using fzf. Additionally, it is more likely to be maintained going forward. You can read more about the differences between it and this plugin on this `fzf.fish` [Wiki page](https://github.com/PatrickF1/fzf.fish/wiki/Prior-Art).\n- The `fzf` utility ships with its [own out-of-the-box Fish integration](https://github.com/junegunn/fzf/blob/master/shell/key-bindings.fish). What sets this package apart is that it has better shell integration, most notably tab completions. They are not compatible so use one or the other.\n\n[tmux]: https://tmux.github.io/\n\n## License\n\n[MIT](LICENSE.md)\n","repository_updated":0},"fzf-autojump":{"name":"fzf-autojump","description":"Fish shell plugin for autojump and fzf integration","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["autojump","fish","fzf","omf"],"author":"rominf","repository":"https://github.com/rominf/omf-plugin-fzf-autojump","license":"MIT","dependencies":[],"stars":4,"forks":1,"watchers":4,"issues":1,"updated":1628460735,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### fzf-autojump\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nAdds dirs from the autojump database to the fzf list.\n\nRequires fzf plugin (https://github.com/fisherman/fzf).\n\n## Install\n\n```fish\n$ omf install fzf-autojump\n```\n\n\n## Usage\n\nTo invoke, press `Alt + Shift + H`.\n\nManual invocation:\n\n```fish\n$ __fzf_autojump\n```\n\n\n# License\n\n[MIT][mit] © [Roman Inflianskas][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/plugin-fzf-autojump/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"gem":{"name":"gem","description":"Ruby gem integration.","image":"https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-gem","license":"MIT","dependencies":[],"stars":0,"forks":4,"watchers":0,"issues":0,"updated":1613331546,"full_description":"![](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)\n\n\u003cdiv align=\"center\"\u003e\n    \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n        \u003cimg width=\"90\" src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n    \u003c/a\u003e\n\u003c/div\u003e\u003cbr\u003e\n\nbundler\n=======\n\nRuby gem support for fish.\n\nInstall\n-------\n\n```fish\n$ omf install gem\n```\n\nConfiguration\n-------------\n\nIn order to use `gem` you must specify the path to gem root. You can do so by\nadding the following snippet to your `.config/fish/config.fish` file before\nsourcing Oh My Fish.\n\n    set GEM_ROOT #path\n\nFor example:\n\n    set GEM_ROOT ~/.gem/ruby/2.1.0\n\nLicense\n=======\n\n[MIT](http://opensource.org/licenses/MIT) © [bpinto](http://github.com/bpinto)\net [al](https://github.com/bpinto/plugin-bundler/graphs/contributors)\n","repository_updated":0},"getopts":{"name":"getopts","description":"A Unix compliant implementation of getopts for fish.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-getopts","license":"MIT","dependencies":[],"stars":5,"forks":0,"watchers":5,"issues":1,"updated":1666975718,"full_description":"# getopts\n\u003e friendly [`getopts`](http://en.wikipedia.org/wiki/Getopts) for [fish](https://fishshell.com) :fish:\n\n## Usage\n\n```fish\nAdd `getopts` to your `$fish_plugins` or import directly into your library via `import plugins/getopts`.\n```\n\n## Premise\nEvery utility / function needs to handle arguments. What usually happens is that every function does all the grunt work to parse `$argv` itself, and while some patterns do tend to recur, it's different almost every time. Enter fish `getopts`.\n\n## Synopsis\n  `getopts \u003coption string\u003e [ARGV...]`\n\n## Options\n#### `\u003coption string\u003e [:][\u003cletter\u003e][[:]\u003cword\u003e[:[^]]]`\n\nA string containing the option characters recognized by the utility calling `getopts`. If a `\u003cletter\u003e` or `\u003cword\u003e` ends in `:`, the option is expected to have an argument, which may be supplied separately or next to the option without spaces in the same string.\n\nTo indicate long options: `\u003cletter\u003e:\u003cword\u003e` and `\u003cword\u003e` are both valid option strings that will attempt to match `-\u003cletter\u003e` and `--\u003cword\u003e`.\n\nTo indicate _only_ short options, do not specify a `:\u003cword\u003e` after `\u003cletter\u003e`. For example, `a b` will match `-a` or `-b`.\n\nTo indicate optional arguments, use a `^` character after a `:` at the end of the option in the option string. For example `\u003cletter\u003e:^` and `\u003cletter\u003e:\u003cword\u003e:^` are both valid. Optional arguments should be supplied in the same string as the option and without spaces, e.g, `-\u003cletter\u003evalue` will correctly assign `value` as the argument to the the option `\u003cletter\u003e`, but `-\u003cletter\u003e` value, will parse `value` as the next argument in `\u003cARGV\u003e`.\n\nTo specify optional arguments using the option's long form, use a `=` character after the option: `--\u003cword\u003e=value`.\n\nUse a `:` at the beginning of the option string to enable strict mode. If enabled, `getopts` will exit with a status __\u003e 0__ if or when an unknown option is found. See [Diagnostics](#diagnostics).\n\n#### `\u003cARGV\u003e`\n\nList of options and operands to parse. `getopts` prints any matched options as well as available argument separated by a \\n to stdout and returns with a status of __0__ if there are still arguments; else returns with a status __\u003e 0__ if the end of the options is reached or an error occurs. See [Diagnostics](#diagnostics).\n\n#### Summary\n\n| Option String          |  Argument     | Short Style     | Long Style   |\n|:---------------:|:--------------:|------------------|:--------------------:|\n   `\"q:qqq:\"`          | Required   | `-q1` `-q 1`    | `--qqq 1`           |\n   `\"q:qqq:^\"`         | Optional    | `-q1`              | `--qqq=3`              |\n\n\n## Description\n`getopts` obtains options and their arguments from a list of parameters that, as indicated by \u003coption string\u003e, are single letters preceded by a `-` or words preceded by `--` and possibly followed by an argument value.\n\nfish `getopts` follows the specifications described in the [Utility Syntax Guidelines](http://pubs.opengroup.org/onlinepubs/7908799/xbd/utilconv.html). The following is a summary of the features:\n\n+ Short options; single letters preceded by `-`, and long options; words preceded by `--`, are both supported.\n\n+ Single letters may be grouped. `-abc` → `-a -b -c`\n\n+ Options required to take an argument can specify the argument either in the same string as the option or separated from the by a space. (1) `-a argument`, (2) `-aargument`\n\n+ Options that can take an argument optionally shall specify the argument in the same string as the option argument if in short option style: `-aargument`, or separated by a `=` if in long form: `--long-form=argument`. If a blank space is used, the following argument will be treated independently.\n\n+ Options can appear multiple times in the same argument list. `getopts` will print every match sequentially on each call, and should default to the short form of the option if available.\n\n+ The option delimiter `:` and optional argument character `^` shall not be used as an option.\n\n+ `getopts` will return the remaining operands when the end of the options is reached, i.e, a `--` argument that is not an option is found, or an argument that does not begin with `-` is found.\n\n## Environment Variables\nThe following environment variables are used internally by `getopts`. These variables are erased from memory when the function returns 1.\n\n+ `__getopts_optstr` _Whitespace trimmed option string._\n\n+ `__getopts_argv` _Preprocessed copy of arguments._\n\n+ `__getopts_index` _Index of the next argument to handle._\n\n+ `__getopts_required` _List of options with required arguments._\n\n+ `__getopts_optional` _List of options with optional arguments._\n\n\n## \u003ca name=\"diagnostics\"\u003e\u003c/a\u003eDiagnostics\nPossible exit status values are:\n\n+ __0__: An argument formed like an option was found. This causes getopts to print the option short-style and its argument if available. If strict-mode is enabled setting the first character of the option to `:`, an unknown option will cause `getopts` to fail. See below.\n\n+ __1__: The end of the options was reached. Remaining operands are also sent to stdout.\n\n+ __2__: An option argument was missing.\n\n+ __3__: An unknown option was found. Only if strict-mode is enabled.\n\n## Examples\n```fish\n  function my_utility\n    while set optarg (getopts \"l:long x: o:optional:^\" $argv)\n      switch $optarg[1]\n        case l\n          echo handle `-l --long`\n        case x\n          echo handle `-x` w/ argument `$optarg[2]`\n        case o\n          echo handle `-o --optional` w/ optional argument `$optarg[2]`\n        case \\*\n          echo unknown option `$optarg[1]`\n      end\n    end\n    echo -n operands: \"`$optarg`\"\n  end\n```\n\n## Links\n+ [UNIX Utility Conventions](http://pubs.opengroup.org/onlinepubs/7908799/xbd/utilconv.html)\n\n## License\n[MIT](http://opensource.org/licenses/MIT) © [Jorge Bucaran](http://bucaran.me)\n","repository_updated":0},"gh":{"name":"gh","description":"Easily manage your local git repos","image":"https://raw.githubusercontent.com/jdxcode/gh/master/demo.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["bash","cli","fish","github","zsh"],"author":"jdxcode","repository":"https://github.com/jdxcode/gh","license":"ISC","dependencies":[],"stars":159,"forks":36,"watchers":159,"issues":7,"updated":1670260384,"full_description":"gh\n==\n\ngh allows you to very quickly navigate between GitHub project cloned on your\nlocal box. It will `cd` into project directories quickly and clone repos that do\nnot exist.\n\nThere is a lot of mental overhead trying to manage a custom `~/src` directory with your projects. I tried managing by work/personal, programming language, even tried a different directory for each month. I found by simply making your projects path reflect GitHub, it was much easier to remember where things were.\n\nHere is a demo of me moving around various projects\n\n![demo](demo.gif)\n\n\u003c!-- toc --\u003e\n\n- [Usage](#usage)\n  * [Changing the base directory](#changing-the-base-directory)\n- [Supported Shells](#supported-shells)\n- [Installation for bash](#installation-for-bash)\n- [Installation For Fish](#installation-for-fish)\n- [Installation For Oh-My-ZSH](#installation-for-oh-my-zsh)\n- [Installation for zsh](#installation-for-zsh)\n- [GitHub Alternatives](#github-alternatives)\n- [Go developers](#go-developers)\n\n\u003c!-- tocstop --\u003e\n\nUsage\n=====\n\nClone and/or go to `~/src/github.com/githubuser/githubrepo`.\n\n```\ngh githubuser githubrepo\n```\n\nIt'll either just be a `cd` or it will clone `git@github.com:githubuser/githubrepo.git`\n\nNote that tab completion is available for project and usernames.\n\n## Changing the base directory\n`gh` will clone or `cd` into `$GH_BASE_DIR/github.com/user/repo`.\nBy default `$GH_BASE_DIR` points to `$HOME/src`. By changing the `$GH_BASE_DIR` variable in your shell's config file, you can control where `gh` will clone/`cd` into.\n\n**Note:** Already cloned repos will not be transferred to the new location, they will be cloned again.\n\n**More important Note:** Do not use the tilde-character (`~`) in `$GH_BASE_DIR`, use `$HOME` instead.\n\nSupported Shells\n================\n\n* bash\n* [fish](http://fishshell.com/)\n* [OH-MY-ZSH](http://ohmyz.sh/)\n* zsh\n\nInstallation for bash\n=====================\n\n```\necho 'source ~/src/github.com/jdxcode/gh/bash/gh.bash' \u003e\u003e ~/.bashrc\necho 'source ~/src/github.com/jdxcode/gh/completions/gh.bash' \u003e\u003e ~/.bashrc\n```\n\nInstallation For Fish\n=====================\n\nUsing [oh-my-fish](https://github.com/oh-my-fish/oh-my-fish):\n\n```\nomf install gh\n```\n\nUsing [fisherman](https://github.com/fisherman/fisherman):\n\n```\nfisher jdxcode/gh\n```\n\nAlternatively, symlink (or copy) the function and completion files into `$fish_function_path` and `$fish_complete_path`\n\n    mkdir -p ~/src/github.com/jdxcode\n    git clone git@github.com:jdxcode/gh.git ~/src/github.com/jdxcode/gh\n    ln -s ~/src/github.com/jdxcode/gh/functions/gh.fish ~/.config/fish/functions/gh.fish\n    ln -s ~/src/github.com/jdxcode/gh/completions/gh.fish ~/.config/fish/completions/gh.fish\n\nInstallation For Oh-My-ZSH\n==========================\n\nAdd this environment variable for your GitHub username (optional)\n\n    typeset +gx -A GITHUB\n    GITHUB[user]=jdxcode\n\nThen symlink (or copy) the gh folder into your Oh-My-ZSH plugins folder\n\n    ln -s ~/src/github.com/jdxcode/gh/zsh/gh ~/.oh-my-zsh/custom/plugins/gh\n\nNext add the plugin to your `~/.zshrc` file\n\n    plugins=(gh)\n\nFor example:\n\n```\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\nplugins=(git brew meteor node npm osx redis-cli sublime gh)\n\n```\n\nFinally reload the `~/.zshrc` file:\n\n    source ~/.zshrc\n\nThe zsh autocompletion supports loading a user's repositories from github. For that to work, you need to set the environment variable `GH_FETCH_REPOS` to true. You will also need to install [jsawk](https://github.com/micha/jsawk) for it to work.\n\nIf you now type `gh someusername` and then press `\u003cTab\u003e`, it will load that user's repositories from github and display them to you.\n\nNote that, if autocompletion isn't working, then you probably need to make zsh refresh the completions dumpfile. Just remove the `$HOME/.zcompdump-*` file:\n\n    rm $HOME/.zcompdump-*\n\nand reload the `~/.zshrc` again to regenerate it.\n\nFor the `bb` (bitbucket) equivalent, repeat the above instructions, but substitute `gh` with `bb`, i.e.:\n\n    ln -s ~/src/github.com/jdxcode/gh/zsh/bb ~/.oh-my-zsh/custom/plugins/bb\n    plugins=(gh bb)\n    source ~/.zshrc\n\nAs before for `GITHUB` environment variable, the environment variable `BITBUCKET` is optional:\n\n    typeset +gx -A BITBUCKET\n    BITBUCKET[user]=jdxcode\n\n\nInstallation for zsh\n==========================\nZsh supports bash autocomplete. You can add the following to your .zshrc but make sure you have `compinit` done first.\n```\ncompinit\n...\n# bash completion and gh\nautoload bashcompinit\nbashcompinit\nsource ~/src/github.com/jdxcode/gh/bash/gh.bash\nsource ~/src/github.com/jdxcode/gh/completions/gh.bash\n```\n\nGitHub Alternatives\n===================\n\n* bb - bitbucket (fish)\n* gl - gitlab (fish, bash)\n\nGo developers\n=============\n\nThis follows the standard convention for Go projects so long as you have your `GOPATH` set to `~`.\n","repository_updated":0},"ghcup":{"name":"ghcup","description":"","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"develop7","repository":"https://github.com/develop7/omf-ghcup","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1585997143,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### [ghcup](ghcup) integration\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install ghcup\n```\n\n# License\n\n[MIT][mit] © [Andrei Dziahel][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/develop7\n[contributors]:   https://github.com/develop7/plugin-ghcup/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[ghcup]:          https://www.haskell.org/ghcup/\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"gi":{"name":"gi","description":"gitignore.io CLI for fish.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-gi","license":"MIT","dependencies":[],"stars":10,"forks":13,"watchers":10,"issues":0,"updated":1650741243,"full_description":"gitignore (gi) plugin\n=====================\n\nThis plugin provides a simple command line interface to gitignore.io - a\nwebsite that generates .gitignore files based on your project requirements.\n\n## Completions\n\nThe first step is to download the latest language list from gitignore.io so\nthat the fish completions can be updated.  Run `gi update-completions` to\ndownload the completions, they will be stored in\n`~/.config/fish/completions/gi.fish`\n\nYou should repeat this occasionally to keep up to date.\n\n## Usage\n\nType `gi` followed by TAB to view the list of languages available.  To generate\na .gitignore file, specify the list of languages you are interested in and pipe\nthe output into the destination file.  Example for a go-lang project:\n\n    gi go tags vagrant \u003e .gitignore\n    git add .gitignore\n","repository_updated":0},"git-flow":{"name":"git-flow","description":"git-flow Completion support for git-flow.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-git-flow","license":"MIT","dependencies":[],"stars":15,"forks":2,"watchers":15,"issues":1,"updated":1643945770,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# git-flow\n\nPlugin for [Oh My Fish][omf-link].\n\nCompletion support for git-flow. Fork from [bobthecow/git-flow-completion](https://github.com/bobthecow/git-flow-completion/blob/master/git.fish)\n\nThe contained completion routines provide support for completing:\n\n- git-flow init and version\n\n- feature, hotfix and release branches\n\n- remote feature, hotfix and release branch names\n\n## Install\n\n```fish\n$ omf install git-flow\n```\n\n# License\n\nCopyright (c) 2011 [Justin Hileman](http://justinhileman.com)\n\nDistributed under the [MIT License](http://creativecommons.org/licenses/MIT/)\n\n[mit]:            http://opensource.org/licenses/MIT\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"git-refresh":{"name":"git-refresh","description":"git pull automatically wherever inside a git repository","image":"https://raw.githubusercontent.com/avimehenwal/git-refresh/master/git-refresh.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","oh-my-fish","oh-my-fish-plugin","omf"],"author":"avimehenwal","repository":"https://github.com/avimehenwal/git-refresh","license":"MIT","dependencies":[],"stars":2,"forks":1,"watchers":2,"issues":3,"updated":1643629870,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### git-refresh\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n# Introduction\n\n**git-refresh** automates pulling your git managed repositories\nas soon as you `cd` into them.\n\nNo command, no fuss required. Just plain old-fashioned simple automation.\n\nHope it saves you some time and hopefully some frustration overtime.\n\nProject aim is that you never see the following git error warning \n\n```\nTo https://github.com/USERNAME/REPOSITORY.git\n  ! [rejected]        master -\u003e master (non-fast-forward)\nerror: failed to push some refs to 'https://github.com/USERNAME/REPOSITORY.git'\nTo prevent you from losing history, non-fast-forward updates were rejected\nMerge the remote changes (e.g. 'git pull') before pushing again.  See the\n'Note about fast-forwards' section of 'git push --help' for details.\n```\n\nHail Automation! :)\n\n## Demo\n\n![git-refresh-demo](git-refresh.png)\n\n## Install\n\n```fish\n$ omf install git-refresh\n```\n\n\n## Usage\n\nUpon successfull installation, just relax and let the\nplugin take care of pulling git repo as soon as you\ncd to any *git managed* directory.\n\nIt executes automatically. :relaxed:\n\n\n# License\n\n[MIT][mit] © [avimehenwal][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/avimehenwal\n[contributors]:   https://github.com/avimehenwal/plugin-git-refresh/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"gityaw":{"name":"gityaw","description":"Replace Git HTTPS remote by SSH one","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-gityaw","license":"MIT","dependencies":[],"stars":2,"forks":4,"watchers":2,"issues":3,"updated":1666170330,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### gityaw\n\u003e Change Git HTTP remote to SSH.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install gityaw\n```\n\n\n## Usage\n\n```fish\n$ gityaw\n```\n\n\n# License\n\n[MIT][mit] © [Derek Stavis][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/plugin-gityaw/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"gls":{"name":"gls","description":"fish shell plugin : GNU ls support on macOS","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","fisherman","oh-my-fish","plugin"],"author":"usami-k","repository":"https://github.com/usami-k/gls","license":"Apache-2.0","dependencies":[],"stars":1,"forks":0,"watchers":1,"issues":0,"updated":1632916711,"full_description":"# gls\n\n[fish shell](https://fishshell.com) plugin : GNU ls support on macOS\n\nIf you use GNU coreutils that installed by [homebrew](https://brew.sh) on macOS, this plugin make your `gls` colorized.\n\nYou can use `~/.dircolors` file to use custom colors.\n\n## Install\n\nIf you use [fisher](https://github.com/jorgebucaran/fisher) :\n\n```\nfisher add usami-k/gls\n```\n\nIf you use [oh-my-fish](https://github.com/oh-my-fish/oh-my-fish) :\n\n```\nomf install gls\n```\n\n## License\n\nCopyright 2017 USAMI Kosuke\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n","repository_updated":0},"grc":{"name":"grc","description":"grc Colourizer for some commands.","image":"https://raw.githubusercontent.com/tannhuber/media/master/grc-plugin.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-grc","license":"MIT","dependencies":[],"stars":54,"forks":9,"watchers":54,"issues":8,"updated":1672446535,"full_description":"[![][travis-badge]][travis-link]\n![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# plugin-grc\n\nA [grc][grc] plugin plugin for [Oh My Fish][omf-link].\n\n\u003e Note: You need to have grc installed\n\n![screenshot][screenshot]\n\n## Install\n\n```fish\n$ omf install grc\n```\n\n## Built-in command colorizers\n\nEveryone supported by the original [grc](grc) tool. If there are tools that are\nmissing add them to the executables file and make a pull-request for it\n\nAmong others, it includes the following:\n\n- `cat`\n- `cvs`\n- `df`\n- `diff`\n- `dig`\n- `gcc`\n- `g++`\n- `ifconfig`\n- `ls`\n- `make`\n- `mount`\n- `mtr`\n- `netstat`\n- `ping`\n- `ps`\n- `tail`\n- `traceroute`\n- `wdiff`\n\n## Plugin options\n\nIt's possible to define additional command options via universal `grcplugin`\nvariables. For example:\n\n```fish\nset -U grcplugin_ls --color -l\n```\n\nMakes `grc` call `ls` with `--color` and `-l` options.\n\n### Override command colorizers\n\nIt's possible to override the commands that are colorized via `grc_plugin_execs`\nvariable. For example:\n\n```fish\nset -U grc_plugin_execs gcc g++ make\n```\n\nEnables `grc` colorizing for only `gcc`, `g++` \u0026 `make` and disables all others.\n\n### Ignore specific executables\n\nAlternatively, you can specify commands that the plugin *should not* override.\nYou can do that via the `grc_plugin_ignore_execs` variable:\n\n```fish\nset -U grc_plugin_ignore_execs ls\n```\n\n### Specify custom executables\n\nIf you have custom executables that should be wrapped with `grc` specify them in\n`grc_plugin_extras`:\n\n```fish\nset -U grc_plugin_extras my_custom_executable\n```\n\n# License\n\n[MIT][mit] © [oh-my-fish][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/oh-my-fish\n[contributors]:   https://github.com/oh-my-fish/pkg-plugin-grc/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/oh-my-fish/plugin-grc.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/oh-my-fish/plugin-grc\n[grc]: http://kassiopeia.juls.savba.sk/~garabik/software/grc.html\n[screenshot]: https://raw.githubusercontent.com/tannhuber/media/master/grc-plugin.png\n\n\n","repository_updated":0},"hash":{"name":"hash","description":"Computes string digests using various hashing algorithms","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-hash","license":"MIT","dependencies":[],"stars":6,"forks":0,"watchers":6,"issues":0,"updated":1666378197,"full_description":"![][license-badge]\n\n# hash\nPlugin for [Oh My Fish][omf].\n\nComputes string digests using various hashing algorithms.\n\n## Install\n```fish\n$ omf install hash\n```\n\n## Usage\nThe `hash` function does just one simple thing: it takes an algorithm and a string, computes the string's hash with the given algorithm, and prints out the result. The string to digest can be provided either as an argument, or piped in from standard input:\n\n```fish\n# command line argument...\n$ hash md5 \"Hello World!\"\n# ...or piped\n$ cat myfile.txt | hash md5\n```\n\nThe available algorithms depend on what utilities you have installed on your system. If you have GNU coreutils installed, any of the algorithms that have an `\u003calgorithm\u003esum` command will be available. On BSD, the core digest commands provide the `md5`, `sha1`, `sha256`, `sha512`, and `rmd160` algorithms. Finally, if OpenSSL is installed, any algorithm installed for OpenSSL will also be available. To see if a given algorithm is available, you can run\n\n```fish\n$ hash -q \u003calgorithm\u003e\n```\n\n## License\n[MIT][mit] © [coderstephen][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/coderstephen\n[contributors]:   https://github.com/oh-my-fish/plugin-hash/graphs/contributors\n[omf]:            https://www.github.com/oh-my-fish/oh-my-fish\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"home-binpath":{"name":"home-binpath","description":"Plugin for Oh My Fish, add ~/.bin to your path","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"iamruinous","repository":"https://github.com/iamruinous/plugin-home-binpath","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1500662887,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### envious\n\u003e A plugin for [Oh My Fish][omf-link]. Add ~/.bin to your path\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install home-binpath\n```\n\n\n## Usage\n\n```fish\n$ mkdir ~/.bin\n# \u003cplace executable in ~/.bin\n```\n\n# License\n\n[MIT][mit] © [iamruinous][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/iamruinous\n[contributors]:   https://github.com/iamruinous/plugin-home-binpath/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"homebrew-command-not-found":{"name":"homebrew-command-not-found","description":"Homebrew command not found plugin for the fish shell","image":"http://cl.ly/image/270k2s0u3n3e/Screen%20Shot%202015-12-08%20at%2012.10.59.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"lfiolhais","repository":"https://github.com/lfiolhais/plugin-homebrew-command-not-found","license":"MIT","dependencies":[],"stars":0,"forks":1,"watchers":0,"issues":0,"updated":1458815491,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### homebrew-command-not-found\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install homebrew-command-not-found\n```\n\n\n## Description\nPlugin to automatically load [homebrew-command-not-found][brew-cmd-not-found] into fish.\n\u003cimg src=\"http://cl.ly/image/270k2s0u3n3e/Screen%20Shot%202015-12-08%20at%2012.10.59.png\"/\u003e\n\n\n# License\n\n[MIT][mit] © [lfiolhais][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/lfiolhais\n[contributors]:   https://github.com/lfiolhais/plugin-homebrew-command-not-found/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[brew-cmd-not-found]: https://github.com/Homebrew/homebrew-command-not-found\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"hub":{"name":"hub","description":"Fish shell plugin that adds alias and completions for github hub","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","git","github","hub","omf"],"author":"rominf","repository":"https://github.com/rominf/omf-plugin-hub","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1488724587,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### hub\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nThis plugin makes alias `git` -\u003e `hub` and adds completions for [hub](https://github.com/github/hub).\n\nCompletions are taken from the [hub repository](https://github.com/github/hub/blob/master/etc/hub.fish_completion).\n\n## Install\n\n```fish\n$ omf install hub\n```\n\n# License\n\n[MIT][mit] © [Roman Inflianskas][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/plugin-hub/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"iex":{"name":"iex","description":"","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"belltoy","repository":"https://github.com/belltoy/plugin-iex","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1449680065,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# iex\n\nPlugin for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf install iex\n```\n\n\n## Usage\n\n```fish\n$ iex [tab][tab]\n```\n\n# License\n\n[MIT][mit] © [belltoy][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/belltoy\n[contributors]:   https://github.com/belltoy/omf-pkg-iex/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"insist":{"name":"insist","description":"Repeat the previous command line input, either until it is successful, or for a given amount of attempts.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":null,"tags":["fish","force","plugin","repeat","shell"],"author":"Lusiadas","repository":"https://gitlab.com/lusiadas/insist","license":"Unknown","dependencies":null,"stars":0,"forks":0,"watchers":0,"issues":0,"updated":0,"full_description":"","repository_updated":0},"jump":{"name":"jump","description":"A port of Jeroen Janssens’ “jump” utility.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-jump","license":"MIT","dependencies":[],"stars":28,"forks":10,"watchers":28,"issues":4,"updated":1669069696,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n#  jump\n\nA port of [Jeroen Janssens' \"jump\" utility] [1] to the fish shell (and [Oh My Fish!] [omf-link]).\n\n## Configuration\n\nIf you have a custom mark folder, you can add the following to your `~/.config/fish/before.init.fish`.\n\n```\nset -gx MARKPATH YOUR_CUSTOM_FOLDER_PATH_HERE\n```\n\n# License\n\n[MIT][mit] © [bpinto][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/bpinto\n[contributors]:   https://github.com/oh-my-fish/plugin-rbenv/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[1]: http://jeroenjanssens.com/2013/08/16/quickly-navigate-your-filesystem-from-the-command-line.html\n","repository_updated":0},"kill-on-port":{"name":"kill-on-port","description":"Kills a process that is using the given port","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"vincentjames501","repository":"https://github.com/vincentjames501/fish-kill-on-port","license":"MIT","dependencies":[],"stars":7,"forks":0,"watchers":7,"issues":0,"updated":1623859176,"full_description":"[![][travis-badge]][travis-link]\n![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# kill-on-port\n\nPlugin for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf install kill-on-port\n```\n\n\n## Usage\n\n```\nUsage: kill-on-port [OPTION]...\nKills one or more processes using the given port(s).\n\nOptions:\n  -l, --list    List processes using the specified ports (does not kill)\n\t-r, --root\t\tAttempts to kill the process as root\n\t-f, --force\t\tDoes not ask for confirmation\n  -p, --port    The port to to look at (one or more required)\n\t-h, --help\t\tPrints usage\n```\n\n## Example\n\n```fish\n# Start two Python HTTP servers on ports 8001 and 8002 respectfully\n$ python -m SimpleHTTPServer 8001 \u003e /dev/null \u0026       \n$ python -m SimpleHTTPServer 8002 \u003e /dev/null \u0026     \n\n# Let's kill em'!\n$ kill-on-port 8001 8002                                                 \nFound process named python2.7 with process id 66715 using port 8001\nContinue (y/n): y\nSuccessfully killed 66715\nFound process named python2.7 with process id 66748 using port 8002\nContinue (y/n): y\nSuccessfully killed 66748\n```\n\n# License\n\n[MIT][mit] © [Vincent Pizzo][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/vincentjames501\n[contributors]:   https://github.com/vincentjames501/fish-kill-on-port/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/vincentjames501/kill-on-port.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/vincentjames501/kill-on-port\n","repository_updated":0},"last-working-dir-pkg":{"name":"last-working-dir-pkg","description":"Always open new fish shells in your last working directory (i.e. the last directory you cd'd into)","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"kfkonrad","repository":"https://github.com/kfkonrad/last-working-dir-fish-pkg","license":"MIT","dependencies":[],"stars":3,"forks":2,"watchers":3,"issues":0,"updated":1671058080,"full_description":"# \u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### last-working-dir\n\u003e last-working-dir makes new [fish shell][fish-shell] start in the directory you last cd'd into.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n### With [Oh My Fish][omf-link]\n\n```fish\nomf install last-working-dir\n```\n\n### With [Fisher][fisher-link]\n\n```fish\nfisher install kfkonrad/last-working-dir-fish-pkg\n```\n\n# License\n\n[MIT][mit] © [Kevin Konrad][author] et [al][contributors]\n\n\n[fish-shell]:     https://github.com/fish-shell/fish-shell\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/plugin-last-working-dir/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[fisher-link]:    https://github.com/jorgebucaran/fisher\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"license":{"name":"license","description":"Summon LICENSE file in a flash","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-license","license":"MIT","dependencies":[],"stars":7,"forks":2,"watchers":7,"issues":1,"updated":1656164127,"full_description":"# plugin-license\n\nFish Shell plugin for generating github licenses\n\n## Install\n\n```fish\n$ omf install license\n```\n\n## Usage\n\n```fish\n$ license \u003clicense_name\u003e\n```\n\n## Example\n\nCreate a file LICENSE with MIT License\n\n```fish\n$ license mit \u003e\u003e LICENSE\n```\n\n## Contributing\n\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request :D\n\n## License\n\n[MIT](https://github.com/oh-my-fish/plugin-license/blob/master/LICENSE) \u0026copy; 2016\n\n","repository_updated":0},"linuxbrew":{"name":"linuxbrew","description":"Oh My Fish plugin to integrate Linuxbrew paths into shell.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-linuxbrew","license":"MIT","dependencies":[],"stars":9,"forks":9,"watchers":9,"issues":4,"updated":1653713271,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### linuxbrew\n[Oh My Fish][omf] plugin to integrate [Linuxbrew] paths into shell.\n\n[![MIT License][license-badge]](/LICENSE)\n\n\u003cbr/\u003e\n\n\n## Install\nInstallation with [Oh My Fish][omf]:\n\n    omf install linuxbrew\n\nNote that you need to have [Linuxbrew] installed first.\n\n\n## Usage\nSee the [Linuxbrew] documentation for full details.\n\n\n## License\n[MIT][mit] © [Stephen Coakley][author] et [al][contributors].\n\n\n[author]: https://github.com/coderstephen\n[contributors]: https://github.com/oh-my-fish/plugin-config/graphs/contributors\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[linuxbrew]: http://linuxbrew.sh\n[mit]: http://opensource.org/licenses/MIT\n[omf]: https://github.com/oh-my-fish/oh-my-fish\n","repository_updated":0},"local-config":{"name":"local-config","description":"Support per-user, per-host and per-platform custom config files.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-local-config","license":"MIT","dependencies":[],"stars":11,"forks":3,"watchers":11,"issues":0,"updated":1613331562,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\n# local-config\n\nLocal configuration plugin for [Oh My Fish][omf-link].\n\nSupport per-user, per-host and per-platform custom configuration files.\n\n\n## Install\n\n```fish\n$ omf install local-config\n```\n\n\n## Usage\n\nUpon installation or loading, local-config automatically loads custom configuration files for the current user, host and platform. It'll even generate them if they're missing!\n\nUse these for any custom configuration that should only run for a specific machine, operating system or user:\n\n```\n$OMF_CONFIG/users/strongbad.fish\n$OMF_CONFIG/hosts/lappy486.fish\n$OMF_CONFIG/platforms/Linux.fish\n```\n\nAdditionally, you can add per-user, per-host and per-platform functions and completions:\n\n```\n$OMF_CONFIG/users/strongbad/functions/beleted.fish\n$OMF_CONFIG/hosts/lappy486/completions/beleted.fish\n```\n\n\n# License\n\n[MIT][mit] © [Justin Hileman][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/bobthecow\n[contributors]:   https://github.com/oh-my-fish/plugin-local-config/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"lucky":{"name":"lucky","description":"Oh My Fish Google I'm feeling lucky package","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"RubieV","repository":"https://github.com/RubieV/plugin-lucky","license":"MIT","dependencies":[],"stars":1,"forks":0,"watchers":1,"issues":0,"updated":1491030219,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### lucky\nWhat if the power of google was just a few keystrokes away? Lucky opens the elinks terminal browser with an I'm feeling lucky query on just those few keystrokes.\n\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\u003cimg src=\"https://github.com/RubieV/plugin-lucky/blob/master/lucky.gif?raw=true\"/\u003e\n\n## Install\n\n```fish\n$ omf install lucky\n```\n\n\n## Usage\n\n```fish\n$ lucky\n```\n\n\n# License\n\n[MIT][mit] © [Ruben van Vreeland][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/rubeiv\n[contributors]:   https://github.com/rubiev/plugin-lucky/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"marlin":{"name":"marlin","description":"A silvery, fast learning and interactive directory navigator","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/marlin","license":"MIT","dependencies":[],"stars":18,"forks":5,"watchers":18,"issues":1,"updated":1658235921,"full_description":"# Marlin\nA silvery, fast learning and interactive directory navigator. Marlin provides quick access to your most frequently and recently used directories from right in your [Fish] shell.\n\nMarlin is similar in design to popular scripts like [fasd], [z], and [autojump], but is designed to take advantage of the unique features of Fish to provide an even more powerful tool. It is also designed to have a simpler implementation to provide the best performance and not lag your shell.\n\nHere is a list of key features:\n\n- **Lightweight on resources**: Marlin only runs when you change directories or try to complete a path; it does not have pre-exec or post-exec hooks.\n- **Path expansion for any command**: Paths can be searched and expanded in any command, not just `cd`.\n- **Frequent and recent paths**: Results are ordered based on both the frequency you visit a directory and how recently you visited it.\n- **Interactive searching**: If more than one result matches an expansion, you can interactively choose a directory using an interactive filter tool like [fzf], [selecta], or [peco].\n\n## Install\nInstall with [Oh My Fish][omf]:\n\n```fish\n$ omf install marlin\n```\n\nThat's it, Marlin is ready to go!\n\n## Usage\nMarlin learns the directories you frequent while you navigate the filesystem. After `cd`ing around a few times, you can recall those directories using _comma expansion_, Marlin's way of substituting queries with a path. A comma expansion has the following form:\n\n    ,query1,query2,query3,...\n\nEach query is a case-insensitive regular expression that is applied to your directory history and filter only matching directories. To execute the expansion, just press the \u003ckbd\u003eTAB\u003c/kbd\u003e key and the query will be replaced dynamically with the matching result. You can continue to press \u003ckbd\u003eTAB\u003c/kbd\u003e to switch through all of the matching results in order of relevancy.\n\nIf you have an interactive filter tool installed like [fzf], [selecta], or [peco], you can use one of those tools to page through multiple results instead. The popular tools will be used automatically if installed. To use a specific tool, set the `$FILTER` environment variable to the command desired. You can also disable interactive filtering by setting `$FILTER` to be empty:\n\n```fish\nset -g FILTER\n```\n\n## Importing history\nYou can import your history from fasd by running the `marlin:import-fasd` command.\n\n## License\n[MIT][mit] © [sagebind][author] et [al][contributors]\n\n\n[author]: http://github.com/sagebind\n[autojump]: https://github.com/wting/autojump\n[contributors]: https://github.com/oh-my-fish/plugin-fasd/graphs/contributors\n[fasd]: https://github.com/clvv/\n[fish]: http://fishshell.com\n[fzf]: https://github.com/junegunn/fzf\n[mit]: http://opensource.org/licenses/MIT\n[omf]: https://www.github.com/oh-my-fish/oh-my-fish\n[peco]: https://github.com/peco/peco\n[selecta]: https://github.com/garybernhardt/selecta\n[z]: https://github.com/rupa/z\n","repository_updated":0},"mix":{"name":"mix","description":"","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"belltoy","repository":"https://github.com/belltoy/plugin-mix","license":"MIT","dependencies":[],"stars":0,"forks":1,"watchers":0,"issues":0,"updated":1631699545,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# mix\n\nPlugin for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf install mix\n```\n\n\n## Usage\n\n```fish\n$ mix\n```\n\n# License\n\n[MIT][mit] © [belltoy][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/belltoy\n[contributors]:   https://github.com/belltoy/omf-pkg-mix/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"mou":{"name":"mou","description":"Use Mou.app from command line.","image":"http://25.io/mou/img/mou_512x512.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-mou","license":"MIT","dependencies":[],"stars":0,"forks":2,"watchers":0,"issues":1,"updated":1613331566,"full_description":"\u003cimg src=\"http://25.io/mou/img/mou_512x512.png\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### mou\n\u003e Use Mou.app from command line.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install mou\n```\n\n\n## Usage\n\n\nOpen Markdown files with Mou\n\n```fish\n$ mou README.md\n```\n\nOr just open Mou without opening files\n\n```fish\n$ mou\n```\n\n\n# License\n\n[MIT][mit] © [Derek W. Stavis][author]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/derekstavis\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"nav":{"name":"nav","description":"Navigational Assistance with Velocity","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":null,"tags":["bookmark","directory","find","history","mlocate","navigation"],"author":"Lusiadas","repository":"https://gitlab.com/lusiadas/nav","license":"Unknown","dependencies":null,"stars":0,"forks":0,"watchers":0,"issues":0,"updated":0,"full_description":"","repository_updated":0},"neovim":{"name":"neovim","description":"","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"derekstavis","repository":"https://github.com/derekstavis/fish-neovim","license":"MIT","dependencies":[],"stars":1,"forks":0,"watchers":1,"issues":0,"updated":1605005821,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### neovim\n\u003eSeamless fish integration when running inside neovim \n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Features\n\n- Clear neovim terminal scrollback with `clear`\n- Change neovim tab working directory with `cd`\n- Open a new split inside current instance with `nvim`\n\n## Requirements\n\nThis package requires [neovim remote][neovim-remote] to work.\n\n## Install\n\n```fish\n$ omf install neovim\n```\n\n# License\n\n[MIT][mit] © [Derek Stavis][author] et [al][contributors]\n\n[neovim-remote]:  https://github.com/mhinz/neovim-remote\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/plugin-neovim/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"node-binpath":{"name":"node-binpath","description":"Automatically add node_modules binaries to PATH","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-node-binpath","license":"MIT","dependencies":[],"stars":7,"forks":2,"watchers":7,"issues":1,"updated":1667118922,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### node-binpath\n\u003e Automatically add `node_modules/.bin` to `PATH` when present.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install node-binpath\n```\n\n## Usage\n\n```fish\n$ npm install http-server\n$ http-server\n```\n\n\n# License\n\n[MIT][mit] © [Derek W. Stavis][author].\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/derekstavis\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"nodenv":{"name":"nodenv","description":"","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-nodenv","license":"MIT","dependencies":[],"stars":3,"forks":4,"watchers":3,"issues":1,"updated":1667849073,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### nodenv\n\u003e [nodenv] integration for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install nodenv\n```\n\n\n## Usage\n\nSee [nodenv] documentation.\n\n\n# License\n\n[MIT][mit] © [Oh My Fish contributors][contributors]\n\n\n[nodenv]:         https://github.com/OiNutter/nodenv\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/oh-my-fish\n[contributors]:   https://github.com/oh-my-fish/plugin-nodenv/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"notify":{"name":"notify","description":"A plugin for Oh My Fish to print different types of messages to the console","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","fish-shell","oh-my-fish"],"author":"zzamboni","repository":"https://github.com/zzamboni/plugin-notify","license":"MIT","dependencies":[],"stars":1,"forks":0,"watchers":1,"issues":0,"updated":1647465139,"full_description":" \u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### notify\n\u003e A plugin for [Oh My Fish][omf-link] to print different types of messages to the console.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install notify\n```\n\n\n## Usage\n\n```fish\n$ fish_notify magenta This is a magenta message\n$ fish_info This is a blue message\n$ fish_ok This is a green message\n$ fish_warn This is a yellow message\n$ fish_error This is a red message\n```\n\n# License\n\n[MIT][mit] © [Diego Zamboni][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/zzamboni\n[contributors]:   https://github.com/zzamboni/plugin-notify/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"nvm":{"name":"nvm","description":"Node version manager wrapper for Fish shell","image":"https://travis-ci.org/derekstavis/plugin-nvm","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","fish-shell","node-js","nvm","version-manager"],"author":"derekstavis","repository":"https://github.com/derekstavis/plugin-nvm","license":"MIT","dependencies":[],"stars":210,"forks":15,"watchers":210,"issues":7,"updated":1671566182,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### plugin-nvm\n\u003e A nvm wrapper for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n[![Travis Status](https://img.shields.io/travis/derekstavis/plugin-nvm.svg?style=flat-square)](https://travis-ci.org/derekstavis/plugin-nvm)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install nvm\n```\n**NB** You have to install **nvm** itself separately (the [curl method](https://github.com/creationix/nvm/blob/master/README.md#install-script) works fine under Fish too).\n\n\n## Usage\n\n```fish\n$ nvm --help\n```\n\nIf you have a custom `$NVM_DIR`, please add the following line to your `~/.config/fish/config.fish`, replacing the path accordingly:\n\n```fish\nset -gx NVM_DIR /path/to/nvm\n```\n\nRefresh your shell and you are good to go!\n\n```fish\nrefresh\n```\n\n# License\n\n[MIT][mit] © [Derek Willian Stavis][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/derekstavis\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[contributors]:   https://github.com/derekstavis/pkg-nvm/graphs/contributors\n","repository_updated":0},"omf_pkg_enlarge_your_git_alias":{"name":"omf_pkg_enlarge_your_git_alias","description":"","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":null,"tags":["alias","aliases","cli","cli-tools","command line","command line tool","command-line","command-line-tool","command-line-tools","dynamic-alias","fish","fish shell","fish-shell","git","oh my fish","oh-my-fish","omf"],"author":"pinage404","repository":"https://gitlab.com/pinage404/omf_pkg_enlarge_your_git_alias","license":"Unknown","dependencies":null,"stars":0,"forks":0,"watchers":0,"issues":0,"updated":0,"full_description":"","repository_updated":0},"osx":{"name":"osx","description":"Integration with Finder and iTunes.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-osx","license":"MIT","dependencies":[],"stars":59,"forks":7,"watchers":59,"issues":1,"updated":1672323267,"full_description":"[![][travis-badge]][travis-link]\n![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\n# osx\n\nInspired by the [oh-my-zsh][original-plugin]’s plugin of same name by\n[sorin-ionescu][original-author], this plug-in brings a number of handy\nfunctions:\n\n- `cdf` - `cd` to the current Finder directory\n- `flushdns` - Flushes the DNS cache for Yosemite and El Capitan\n- `itunes` - Control iTunes: Play, pause, stop, resume, etc.\n- `manp` - Open a specified man page in Preview\n- `pfd` - Return the path of the frontmost Finder window\n- `pfs` - Return the current Finder selection\n- `pushdf` - `pushd` to the current Finder directory\n- `ql` - Quick Look a specified file or directory\n- `showhidden` - Shows hidden files and folders in Finder\n- `trash` - Move a specified file to the Trash\n- `unset` - Emulates the `unset` command to unset an environment variable\n- `updatedb` - Updates locate command database\n\n\u003e *Note*: the `tab` function was dropped in favor a more robust [plugin-tab].\n\n\n## Install\n\n```fish\n$ omf install osx\n```\n\n\n## Usage\n\n```fish\n$ itunes -h  # show usage and available options\n$ manp fish  # open Fish's manpage in Preview\n$ ql *jpg    # quick look all such pictures\n```\n\n\n# License\n\n[MIT][mit] © [bpinto][author] et [al][contributors]\n\n\n[original-plugin]: https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/osx/osx.plugin.zsh\n[original-author]: https://github.com/sorin-ionescu\n[plugin-tab]:      https://github.com/oh-my-fish/plugin-tab\n[cykeb]:           https://github.com/cykeb\n[scorphus]:        https://github.com/scorphus\n\n[mit]:             http://opensource.org/licenses/MIT\n[author]:          https://github.com/bpinto\n[contributors]:    https://github.com/oh-my-fish/plugin-osx/graphs/contributors\n[omf-link]:        https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:   https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:    http://img.shields.io/travis/oh-my-fish/plugin-osx.svg?style=flat-square\n[travis-link]:     https://travis-ci.org/oh-my-fish/plugin-osx\n","repository_updated":0},"package_list":{"name":"package_list","description":"Utility to list manually installed packages upon their installation or removal.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":null,"tags":["apt","backup","package manager"],"author":"Lusiadas","repository":"https://gitlab.com/lusiadas/package_list","license":"Unknown","dependencies":null,"stars":0,"forks":0,"watchers":0,"issues":0,"updated":0,"full_description":"","repository_updated":0},"pbcopy":{"name":"pbcopy","description":"OSX's pbcopy and pbpaste for Linux.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-pbcopy","license":"MIT","dependencies":[],"stars":12,"forks":3,"watchers":12,"issues":2,"updated":1652618192,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# pbcopy\n\nOSX's `pbcopy` and `pbpaste` support for Linux.\n\n## Install\n\n```fish\n$ omf install pbcopy\n```\n\n## Usage\n\nCopy a list of files in your home directory to the clipboard:\n```fish\n$ ls ~ | pbcopy\n```\n\nCopy the contents of a file to the clipboard:\n```fish\n$ pbcopy \u003c cookies.txt\n```\n\nCopy part of a file to the clipboard:\n```fish\n$ grep 'ip address' serverlist.txt | pbcopy\n```\n\nPaste from your clipboard to stdout:\n```fish\n$ pbpaste\n```\n\nPaste from your clipboard to a file:\n```fish\n$ pbpaste \u003e clipboard.txt\n```\n\nPaste from your clipboard to a file in a remote host:\n```fish\n$ pbpaste | ssh username@host 'cat \u003e ~/myclipboard.txt'\n```\n\n# License\n\n[MIT][mit] © [Oh My Fish!][author] [contributors][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/oh-my-fish\n[contributors]:   https://github.com/oh-my-fish/plugin-pbcopy/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"pcd":{"name":"pcd","description":"A Plugin for Oh-My-Fish","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"heraldofsolace","repository":"https://github.com/heraldofsolace/plugin-pcd","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1548872074,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### pcd\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nRun a setup script when you cd into or out of a directory.\n\nThis will run a file named .pcd-enter (if available) after cd'ing into a directory. You can put your setup script (e.g. starting a server) in it.\n\nThis will also run a file named .pcd-exit (if available) after cd'ing out of the current directory. You can put your cleanup script in it.\n\n## Install\n\n```fish\n$ omf install pcd\n```\n\n\n## Usage\n\n```fish\n$ pcd \u003cdirectory name\u003e\n```\n\n\n# License\n\n[MIT][mit] © [Aniket Bhattacharyea][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/AniketB669\n[contributors]:   https://github.com/AniketB669/plugin-pcd/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"peco":{"name":"peco","description":"Browse your fish history with peco.","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-peco","license":"MIT","dependencies":[],"stars":39,"forks":16,"watchers":39,"issues":1,"updated":1668941529,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n# peco\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0+-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nUse [peco][peco] with [fish shell][fish-shell] managed by [Oh my\nfish][omf-link] in a very simple way!\n\nBased directly on the percol plugin.\n\n## Installation\n\n```fish\nomf install peco\n```\n\n## Usage\n\nPlease bind `peco_select_history` to your favorite key.\n\nIf you'd like to bind Ctrl+r:\n\n```fish\nfunction fish_user_key_bindings\n  bind \\cr 'peco_select_history (commandline -b)'\nend\n```\n\n# License\n\n[MIT][mit] © [Oh My Fish! Authors][author] et [al][contributors]\n\n\n[mit]:           http://opensource.org/licenses/MIT\n[author]:        https://github.com/oh-my-fish/plugin-peco/blob/master/LICENSE\n[contributors]:  https://github.com/oh-my-fish/plugin-peco/graphs/contributors\n[omf-link]:      https://github.com/oh-my-fish/oh-my-fish\n[fish-shell]:    https://fishshell.com\n[peco]:          https://github.com/peco/peco\n\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"peco_utils":{"name":"peco_utils","description":"A wrapper script for peco, the simplistic interactive filtering tool, with additional options and completions","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":null,"tags":["filter","history","open","peco","processes"],"author":"Lusiadas","repository":"https://gitlab.com/lusiadas/peco_utils","license":"Unknown","dependencies":null,"stars":0,"forks":0,"watchers":0,"issues":2,"updated":0,"full_description":"","repository_updated":0},"pgen":{"name":"pgen","description":"Passphrase Generator. Generate a passphrase using either Wordnik's dictionary or a local text file as its wordlist.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":null,"tags":["dictionary","generate","passphrase","random","wordnik","words"],"author":"Lusiadas","repository":"https://gitlab.com/lusiadas/pgen","license":"Unknown","dependencies":null,"stars":0,"forks":0,"watchers":0,"issues":0,"updated":0,"full_description":"","repository_updated":0},"phpbrew":{"name":"phpbrew","description":"Fish integration for phpbrew","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-phpbrew","license":"MIT","dependencies":[],"stars":1,"forks":1,"watchers":1,"issues":0,"updated":1613331578,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### phpbrew\n[phpbrew] integration for [Oh My Fish][omf].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n\n\u003cbr/\u003e\n\nA lightweight [phpbrew] plugin that provides integration with Fish shell. This plugin is designed to be much more performant than the official phpbrew Fish integration, and not all phpbrew features are available.\n\n\n## Install\nInstallation with [Oh My Fish][omf]:\n\n    omf install phpbrew\n\n\n## Usage\nSee the [phpbrew] documentation for full details.\n\n\n## Unsupported features\nHere are the phpbrew features that are currently **not** supported by this plugin:\n\n- `.phpbrewrc` files\n- PHP-FPM integration\n- PHP version info prompt via `$PHPBREW_SET_PROMPT`\n- Quick directory commands (such as `phpbrew build-dir`)\n\n\n## License\n[MIT][mit] © [Stephen Coakley][author] et [al][contributors]. Includes some code from the official phpbrew scripts, which are © Yo-An Lin under the MIT license.\n\n\n[author]: http://github.com/coderstephen\n[contributors]: https://github.com/oh-my-fish/plugin-config/graphs/contributors\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[mit]: http://opensource.org/licenses/MIT\n[omf]: https://www.github.com/oh-my-fish/oh-my-fish\n[phpbrew]: http://phpbrew.github.io/phpbrew/\n","repository_updated":0},"pisces":{"name":"pisces","description":"♓️ Fish shell plugin that helps you to work with paired symbols in the command line","image":"https://gitter.im/laughedelic/pisces","latest_version":{"version":"v0.7.0","description":"Updated for Fisher 4 while still maintaining compatibility with oh-my-fish (see #26 by @nickeb96)","commit_hash":"master","release_date":1606703419},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"Updated for Fisher 4 while still maintaining compatibility with oh-my-fish (see #26 by @nickeb96)","release_date":1606703419,"version":"v0.7.0"},{"commit_hash":"1b882b683bed9fca42fb0ffb36ab3f7565da6f29","description":"New feature by @9999years (see #20):\r\n\r\n\u003e To disable completing pairs unless the cursor is at the end of the line, set\r\n\u003e the `$pisces_only_insert_at_eol` variable:\r\n\u003e\r\n\u003e ```fish\r\n\u003e set -U pisces_only_insert_at_eol 1\r\n\u003e ```","release_date":1593626076,"version":"v0.6.0"},{"commit_hash":"master","description":"Fixed delay some users observed on the backspace binding (see #13 by @nickeb96)","release_date":1545612775,"version":"v0.5.1"},{"commit_hash":"master","description":"This release doesn't add any new functionality, it just makes this plugin compatible with [**oh-my-fish**](https://github.com/oh-my-fish/oh-my-fish) ✨  (while keeping compatibility with [fisherman](https://github.com/fisherman/fisherman)). See installation instructions in the [readme](https://github.com/laughedelic/pisces#installation).\r\n","release_date":1502286953,"version":"v0.5.0"},{"commit_hash":"master","description":"Fixed support for vi-mode with hybrid keybindings (`fish_hybrid_key_bindings` [introduced in fish-shell v2.5.0](https://github.com/fish-shell/fish-shell/issues/3556))","release_date":1502285747,"version":"v0.4.1"},{"commit_hash":"d9d21d970eeaa48d9964dfb01dd245bbba90fcd2","description":"Added support for vi-mode (see #3 by @terlar):\n- when `$fish_key_bindings` is set to `fish_vi_key_bindings`, key bindings are made for the `insert` mode instead of `default` (normal)\n","release_date":1463500098,"version":"v0.4.0"},{"commit_hash":"5da3dd447b49bb7e1aa9d78aa6b49722aa18dc22","description":"- Fixed completion with dashes (see #4 by @terlar):\n  \n  \u003e As the input might be using dashes we need to use double dashes to tell\n  \u003e the command that there won't be any more options.\n","release_date":1463483625,"version":"v0.3.2"},{"commit_hash":"master","description":"- Fixed `_pisces_complete` function file name\n","release_date":1463242377,"version":"v0.3.1"},{"commit_hash":"master","description":"Added `_pisces_complete` function to override TAB completion for vars in autoclosed double quotes (see #1):\n\n[![pisces_tab_cropped_ann](https://cloud.githubusercontent.com/assets/766656/15253723/db75bde4-1933-11e6-81b3-52d437df1af8.gif)](https://asciinema.org/a/45506)\n(click to see it as an asciicast)\n","release_date":1463172254,"version":"v0.3.0"},{"commit_hash":"master","description":"- Removed `conf.d` initialization\n- Added uninstall\n- Fixed a bug with out of bounds `_pisces_lookup` (when hitting backspace on an empty command line)\n- Added backspace binding to `\\177` which is used in Terminal.app\n","release_date":1462924936,"version":"v0.2.0"},{"commit_hash":"master","description":"First public release. Features:\n- autocloses pair symbol:  \n  `... |` + \u003ckbd\u003e(\u003c/kbd\u003e ⇒  \n  `... (|)`\n- skips the closing symbol:  \n  `...|)` + \u003ckbd\u003e)\u003c/kbd\u003e ⇒  \n  `... )|`\n- removes empty pairs:  \n  `...(|)` + \u003ckbd\u003ebackspace\u003c/kbd\u003e ⇒  \n  `...`\n- the set of pairs is configurable\n","release_date":1462839753,"version":"v0.1.0"}],"tags":["fish","fish-packages","fish-plugin","fish-plugins","fish-shell","fisher","fishshell","keybindings","oh-my-fish","oh-my-fish-plugin","paired-symbols","plugin"],"author":"laughedelic","repository":"https://github.com/laughedelic/pisces","license":"NOASSERTION","dependencies":[],"stars":250,"forks":11,"watchers":250,"issues":6,"updated":1670698321,"full_description":"# [`pisces ☯ 双鱼`](https://en.wikipedia.org/wiki/Pisces_(astrology))\n\n[![](https://img.shields.io/github/v/release/laughedelic/pisces?color=brightgreen)](https://github.com/laughedelic/pisces/releases/latest)\n[![](https://img.shields.io/badge/fish--shell-2.3+-blue.svg)](https://github.com/fish-shell/fish-shell/releases)\n[![](https://img.shields.io/badge/license-LGPLv3-blue.svg)](https://www.tldrlegal.com/l/lgpl-3.0)\n[![](https://img.shields.io/badge/contact-gitter_chat-dd1054.svg)](https://gitter.im/laughedelic/pisces)\n\n_pisces_ `['paɪsiz]` is a plugin for [fish](https://fishshell.com/) that helps you to work with paired symbols like `()` and `''` in the command line. Similar to your favorite text editor!\n\n## Features\n\nHere `|` denotes the current cursor position. No manual cursor motion involved :sparkles:\n\n- autocloses pair symbol:\n  `... |` + \u003ckbd\u003e(\u003c/kbd\u003e ⇒\n  `... (|)`\n- skips the closing symbol:\n  `...|)` + \u003ckbd\u003e)\u003c/kbd\u003e ⇒\n  `... )|`\n- removes empty pairs:\n  `...([|])` + \u003ckbd\u003ebackspace\u003c/kbd\u003e ⇒\n  `...(|)` + \u003ckbd\u003ebackspace\u003c/kbd\u003e ⇒\n  `...|`\n- the set of pairs is configurable (see below)\n\n## Installation\n\n\u003cdetails\u003e\n\u003csummary\u003eNotes on fish 2.x compatibility\u003c/summary\u003e\n\n\u003e The _minimum recommended_ version of fish is v2.6, because\n\u003e - it has a feature called [_bracketed (a.k.a safe) paste_](https://github.com/fish-shell/fish-shell/pull/3871) which solves the problem with pasting strings containing paired symbols (they get autoclosed), see [#6](https://github.com/laughedelic/pisces/issues/6) for details.\n\u003e\n\u003e The _minimum required_ version of fish is v2.3, because\n\u003e - there was a bug [#2210](https://github.com/fish-shell/fish-shell/issues/2210) in v2.2 which would brake quotes handling\n\u003e - it uses `string` builtin which was introduced in v2.3\n\n\u003c/details\u003e\n\n- Using [Fisher](https://github.com/jorgebucaran/fisher):\n\n  ```fish\n  fisher install laughedelic/pisces\n  ```\n\n- Using [oh-my-fish](https://github.com/oh-my-fish/oh-my-fish):\n\n  ```fish\n  omf install pisces\n  ```\n\n  Notice that you will need to _restart_ fish to get this new installation working. This is specific to the way oh-my-fish handles installation.\n\n## Configuration\n\n### Only completing at the end of the line\n\nTo disable completing pairs unless the cursor is at the end of the line, set the `$pisces_only_insert_at_eol` variable:\n\n```fish\nset -U pisces_only_insert_at_eol 1\n```\n\n### Changing the set of pairs\n\nYou can set the `$pisces_pairs` universal variable and launch a new fish session to reload key bindings:\n\n```fish\nset -U pisces_pairs $pisces_pairs '\u003c,\u003e' '`,`' '«,»'\n```\n\nNote that at the moment _pisces_ works correctly only with single-symbol delimiters.\n\nThe default set of pairs:\n\n- `(,)` parenthesis\n- `[,]` brackets\n- `{,}` braces\n- `\",\"` double quotes\n- `','` single quotes\n","repository_updated":0},"pj":{"name":"pj","description":"The Project Jump plugin for the fish shell","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-pj","license":"MIT","dependencies":[],"stars":48,"forks":4,"watchers":48,"issues":2,"updated":1672314021,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### pj\nA port of [Jan De Poorter's pj][jdp-pj] for the fish shell. `pj` was originally\npopularized by the oh-my-zsh plugin with the same name, [pj][omz-pj].\n\n`pj` allows you to easily jump between your favourite directories in\na predictable manner. You tell `pj` where to look for your projects, and it will\nallow you to jump to them easily with tab completion. It even provides\na convenient ability to open an editor in that directory from anywhere!\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install pj\n```\n\n\n## Configuration\n\nIn order to tell `pj` where to look for your projects, you need to set an\nenvironment variable called `PROJECT_PATHS`. It is a list of directories which\ncontain your projects.\n\n```fish\n$ set -gx PROJECT_PATHS ~/workspace ~/src\n```\n\n\n## Usage\n\nTo jump to a project, simply run `pj` with the name of the directory you would\nlike to jump to.\n\n```fish\n$ pj foo-project\n```\n\nYou can also open it in your favourite editor with the `pj open` command. This\nwill open the project with the `$EDITOR` configured on your system.\n\n```fish\n$ pj open foo-project\n```\n\nProtip: You can set an abbrebiation in your shell for the above, like `pjo`.\n\n```fish\n$ abbr -a pjo pj open\n$ pjo\u003cspace\u003e\n# Becomes\n$ pj open\n```\n\n\n# License\n\n[MIT][mit] © [Espen Henriksen][author] et [al][contributors]\n\n\n[jdp-pj]:         https://gist.github.com/pjaspers/368394#gistcomment-1016\n[omz-pj]:         https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pj\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/esphen\n[contributors]:   https://github.com/esphen/plugin-pj/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"pkg-ansible":{"name":"pkg-ansible","description":":black_circle: Ansible development package for Wahoo","image":"https://img.shields.io/badge/License-MIT-707070.svg?style=flat-square","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"fishgretel","repository":"https://github.com/fishgretel/pkg-ansible","license":"","dependencies":[],"stars":5,"forks":0,"watchers":5,"issues":0,"updated":1554708069,"full_description":"[![](https://img.shields.io/badge/Wahoo-Package-00b0ff.svg?style=flat-square)][Wahoo]\n![](https://img.shields.io/badge/License-MIT-707070.svg?style=flat-square)\n\n# :black_circle: [_ansible_](https://github.com/ansible/ansible)\n\u003e Ansible is a powerful automation tool that you can learn quickly.\n\nAnsible development for [Wahoo][Wahoo] / [fish](fishshell.com).\n\n## Install\n\u003e _Note_: You need to have `ansible` source code handy and set `ANSIBLE_HOME` prior to loading Wahoo.\n\n```fish\nwa g ansible\n```\n\nIf not yet installed ansible source can be fetched easily:\n\n```fish\ncd; pwd\ngit clone --depth 1 --recursive https://github.com/ansible/ansible.git\n```\n\nIn your `config.fish` prior to sourcing `init.fish` set accordingly:\n\n```fish\nset -g ANSIBLE_HOME $HOME/ansible\n```\n\nFinally, you should be ready for development - `ansible --version`:\n\n```text\nansible 2.0.0 (devel f40b66d841) last updated 2015/07/13 01:18:43 (GMT +200)\n  lib/ansible/modules/core: (detached HEAD 9acf10face) last updated 2015/07/13 01:18:50 (GMT +200)\n  lib/ansible/modules/extras: (detached HEAD 8a89f4afe4) last updated 2015/07/13 01:18:54 (GMT +200)\n  v1/ansible/modules/core: (detached HEAD f8d8af17cd) last updated 2015/07/13 01:19:01 (GMT +200)\n  v1/ansible/modules/extras: (detached HEAD 495ad450e5) last updated 2015/07/13 01:19:05 (GMT +200)\n  configured module search path = /Users/tom/Sync/prjcts/ansible/library\n```\n\n# License\n\n[MIT](http://opensource.org/licenses/MIT) © [Tom Hensel][Author]\n\n[Author]: https://github.com/gretel\n[Wahoo]: https://github.com/bucaran/wahoo\n","repository_updated":0},"pkg-mvn":{"name":"pkg-mvn","description":"Maven plugin for Oh My Fish","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish"],"author":"benc","repository":"https://github.com/benc/pkg-mvn","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1507902530,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/fish-shell/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# mvn\n\nMaven plugin for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf install mvn\n```\n\n## Usage\n\nThis plugin will colorize maven output.\n\n```fish\n$ mvn\n```\n\n# License\n\n[MIT][mit] © [benc][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/benc\n[contributors]:   https://github.com/benc/pkg-mvn/graphs/contributors\n[omf-link]:       https://www.github.com/fish-shell/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"pkg-php-version":{"name":"pkg-php-version","description":"php-version - rewrite of Wil Moore's php-version bash and zsh script for fish","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"rzyns","repository":"https://github.com/rzyns/pkg-php-version","license":"MIT","dependencies":[],"stars":3,"forks":0,"watchers":3,"issues":0,"updated":1670543405,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# php-version\n\nProvides PHP version switching functionaility as an Oh My Fish plugin. It's pretty much a line-for-line port of Wil Moore's excellent php-version for bash and zsh, https://raw.githubusercontent.com/wilmoore/php-version\n\n## Install\n\n```fish\n$ omf install php-version\n```\n\n\n## Usage\n\n```fish\n Usage:\n    php-version --help     Show this message\n    php-version --version  Print the version\n    php-version \u003cversion\u003e  Modify PATH to use \u003cversion\u003e\n    php-version            Show all available versions and denote the currently activated version\n\n  Example:\n    php-version 5          Activate the latest available 5.x version\n    php-version 5.5        Activate the latest available 5.5.x version\n    php-version 5.5.13     Activate version 5.5.13 specifically\n\n```\n\n## Usage Examples\n\n### Switch to a specific PHP version\n\n    % php-version \u003cversion\u003e\n\n### List installed and active (*) PHP version(s)\n\n    % php-version\n      5.3.9\n      5.3.10\n      5.4.0RC8\n      5.4.0RC6\n      5.4.0\n    * 5.4.8\n\n\n\n# License\n\n[MIT][mit] © [rzyns][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/rzyns\n[contributors]:   https://github.com/rzyns/pkg-php-version/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"platformio":{"name":"platformio","description":"Platformio autocomplete for Oh-My-Fish!","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"Yuri-M-Dias","repository":"https://github.com/Yuri-M-Dias/omf-platformio","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1562177249,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### platformio\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nPlatformIO autocompletions for the fish shell\n\n\n## Install\n\n```fish\n$ omf install platformio\n```\n\nMake sure that you have platformio's CLI properly installed, see [here][platformioinstall] for instructions.\n\n## Usage\n\n```fish\n$ platformio\n```\n\nOr\n\n```fish\n$ pio\n```\n\n## Notes\n\nIf at first you get no completions, just run `platformio` once for it to load them.\n\n# License\n\n[MIT][mit] © [Yuri-M-Dias][author]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/Yuri-M-Dias\n[contributors]:   https://github.com/Yuri-M-Dias/omf-platformio/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[platformioinstall]: https://docs.platformio.org/en/latest/installation.html\n\n","repository_updated":0},"plug":{"name":"plug","description":"Oh My Fish plugin for vim-plug","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"willfish","repository":"https://github.com/willfish/plugin-plug","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":1,"updated":1618211383,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\n# plug\n\nPlugin for [Oh My Fish][omf-link] that integrates the [Plug] vim plugin manager.\n\n## Install\n\n```fish\n$ omf install plug\n```\n\n## Usage\n\nUpon installation or loading, plug checks for the existence of the Plug.vim plugin and will notify if it is missing.\n\n#### `plug`\n\nRuns PlugInstall to install missing plugins\n\n#### `plug-update`\n\nRuns PlugUpdate to install missing plugins and update out of date plugins\n\n#### `plug-clean`\n\nRuns PlugClean! to remove unused plugins\n\n# License\n\n[MIT][mit] © [willfish][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/willfish\n[contributors]:   https://github.com/willfish/plugin-plug/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[Plug]:           https://github.com/junegunn/vim-plug\n","repository_updated":0},"plugin-bak":{"name":"plugin-bak","description":"","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-bak","license":"MIT License","dependencies":[],"stars":4,"forks":3,"watchers":7,"issues":4,"updated":0,"full_description":"","repository_updated":0},"plugin-extract":{"name":"plugin-extract","description":"Plugin to expand or extract bundled \u0026 compressed files.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-extract","license":"MIT License","dependencies":[],"stars":15,"forks":6,"watchers":5,"issues":2,"updated":0,"full_description":"","repository_updated":0},"powerline":{"name":"powerline","description":"Add powerline support to fish using omf","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"iamruinous","repository":"https://github.com/iamruinous/plugin-powerline","license":"MIT","dependencies":[],"stars":0,"forks":2,"watchers":0,"issues":2,"updated":1643488758,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# powerline\n\nPlugin for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf install powerline\n```\n\n\n## Usage\n\nWill automagically transform your prompt using [powerline][powerline-link]\n\n# License\n\n[MIT][mit] © [iamruinous][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/iamruinous\n[contributors]:   https://github.com/iamruinous/pkg-powerline/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[powerline-link]: https://github.com/powerline/powerline\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"prj":{"name":"prj","description":"Gotta go fast to projects","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","oh-my-fish","project-jump","shell"],"author":"derekstavis","repository":"https://github.com/derekstavis/plugin-prj","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1486845031,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### prj\n\u003e Gotta go fast to projects.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## What is a project\n\nEveryone have a personal projects directory. It can be your `Documents`,\nit can be your home directory. Sometimes you have multiple directories,\nlike work, personal, college, etc.\n\nFinding a project is easy when you have a few projects and a central\ndirectory, but when any of projects or directories grows a lot, it gets\nreally difficult to find stuff you just wanted to work on.\n\nHere comes `prj`, a quick project jump tool based on a global path\nvariable: Project directories are present in `$project_path`.\n\nThis path variable can be enhanced the way you like with globbing tricks\nor even more complex setups that can be made on your init file.\n\n## So... How to?\n\n```fish\n$ omf install prj\n```\n\nUse `$OMF_CONFIG/before.init.fish` to setup your `$projects_path`:\n\n\u003e `$OMF_CONFIG/before.init.fish`\n```fish\nset -g $projects_path ~/workspace\n```\n\nYou can invoke `prj` to quickly jump to a best effort match:\n\n```fish\n/home/derek\u003e prj hello\n/home/derek/workspace/helloworld\u003e\n```\n\nCompletions are included, so you can always do a fish pager search.\n\nWhen multiple matches are found, `fzg` is invoked to choose the project.\n\n# License\n\n[MIT][mit] © [Derek Stavis][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/derekstavis\n[contributors]:   https://github.com/derekstavis/plugin-prj/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"proxy":{"name":"proxy","description":"Proxy settings plugin for Oh My Fish","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-proxy","license":"MIT","dependencies":[],"stars":34,"forks":13,"watchers":34,"issues":5,"updated":1655626781,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### proxy\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nThe proxy plugin provides a couple helper functions to those of us who are\nstuck behind HTTP/HTTPS/FTP proxies that require authentication.  The variables\nit exports are used by many command-line and GUI applications on Linux, as well\nas [MacPorts][macports] and [Homebrew][homebrew] on OS X.\n\nBoth uppercase and lowercase versions of the proxy environment variables are\nset, some applications are case sensitive.  If you'd like to learn more about\nthe use of these variables, this [Arch Wiki Article][archwiki-article] is a\ngood place to start.\n\n[macports]:         http://www.macports.org/\n[homebrew]:         http://brew.sh/\n[archwiki-article]: https://wiki.archlinux.org/index.php/proxy_settings\n\n\n## Install\n\n```fish\n$ omf install proxy\n```\n\n\n## Usage\n\n### No authentication\n\nIf you just want to have the proxy plugin configure all the environment\nvariables, you may set proxy_host and proxy_auth in\n`$OMF_CONFIG/before.init.fish`:\n\n```fish\nset proxy_host myproxy.example.com:8000\nset proxy_auth false\n```\n\nThe proxy plugin will prepend `http://` for you.  Here's the result:\n\n    ~\u003e set -x |grep proxy\n    ALL_PROXY http://myproxy.example.com:8000\n    FTP_PROXY http://myproxy.example.com:8000\n    HTTPS_PROXY http://myproxy.example.com:8000\n    HTTP_PROXY http://myproxy.example.com:8000\n    all_proxy http://myproxy.example.com:8000\n    ftp_proxy http://myproxy.example.com:8000\n    http_proxy http://myproxy.example.com:8000\n    https_proxy http://myproxy.example.com:8000\n\n### With authentication\n\nSet your proxy host and username in `$OMF_CONFIG/before.init.fish`:\n\n```fish\nset proxy_host myproxy.example.com:8000\nset proxy_auth true\nset proxy_user mylogin\n```\n\nWhen you need to make use of the proxy, just run `proxy`.  It will prompt you\nfor a password and setup your environment.\n\nIf you didn't setup a proxy_user variable, you will be prompted for a username.\n\nIf you wish to clear your proxy variables, run `noproxy`.\n\n\n# License\n\n[MIT][mit] © [oh-my-fish][author] et [al][contributors]\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/oh-my-fish\n[contributors]:   https://github.com/oh-my-fish/plugin-proxy/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"publish":{"name":"publish","description":"Publish the contents of the clipboard, or a file, or several, in its entirety or partially.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":null,"tags":["clipboard","fish","pastebin","plugin","shell"],"author":"Lusiadas","repository":"https://gitlab.com/lusiadas/publish","license":"Unknown","dependencies":null,"stars":0,"forks":0,"watchers":0,"issues":0,"updated":0,"full_description":"","repository_updated":0},"pyenv":{"name":"pyenv","description":"Simple Python Version Management integration.","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-pyenv","license":"MIT","dependencies":[],"stars":30,"forks":10,"watchers":30,"issues":3,"updated":1671281387,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n# Pyenv Plugin for Fish Shell\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nUse [Pyenv][pyenv] with [fish shell][fish-shell] managed by [Oh my\nfish][omf-link] in a very simple way!\n\n## Installation\n\n```fish\nomf update  # Just in case omf is outdated. Avoids missing the package.\nomf install pyenv\n```\n\n\u003e omf (Oh my fish) is a package manager for fish shell. Just like pip is for\n\u003e Python and gem is for Ruby\n\n## Usage\n\nJust use pyenv as you see fit:\n\n```fish\npyenv help\n```\n\nDon't forget to check the [docs][pyen-docs]!\n\n# License\n\n[MIT][mit] © [Oh My Fish! Authors][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         https://github.com/oh-my-fish/plugin-pyenv/blob/master/LICENSE\n[contributors]:   https://github.com/oh-my-fish/plugin-pyenv/graphs/contributors\n[omf-link]:       https://github.com/oh-my-fish/oh-my-fish\n[fish-shell]:     https://fishshell.com\n[pyenv]:          https://github.com/pyenv/pyenv\n[pyenv-docs]:     https://github.com/pyenv/pyenv/blob/master/COMMANDS.md#command-reference\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"python":{"name":"python","description":"Set of shortcuts to Python based utilities (pybeatifyjson – clean JSON files, pyclean – remove old .pyc, pyhttp \u0026 pysmtp – simple HTTP \u0026 SMTP servers)","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-python","license":"MIT","dependencies":[],"stars":9,"forks":5,"watchers":9,"issues":2,"updated":1545150692,"full_description":"[![][travis-badge]][travis-link]\n![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\n# python\n\nThis plug-in brings a number of handy functions:\n\n- `pybeautifyjson` - Beautify a JSON string\n- `pyclean` - Recursively clean directory from .pyc and .pyo files and python3 __pycache__ folders\n- `pyhttp` - Start SimpleHTTPServer, optional argument for port number\n- `pysmtp` - Start SMTP debugging server, option port argument. Default is 1025\n\n\n## Install\n\n```fish\n$ omf install python\n```\n\n\n## Usage\n\n```fish\n$ pyclean  # recursively clean .pyc and .pyo\n$ pybeautifyjson '{\"foo\": \"lorem\", \"bar\": \"ipsum\"}'    # beautify a JSON string\n$ pybeautifyjson (curl -s http://api.example.com/foo)  # beautify a JSON output\n$ curl -s http://api.example.com/foo | pybeautifyjson  # beautify a JSON output\n```\n\n\n# License\n\n[MIT][mit] © [bpinto][author] et [al][contributors]\n\n\n[mit]:             http://opensource.org/licenses/MIT\n[author]:          https://github.com/bpinto\n[contributors]:    https://github.com/oh-my-fish/plugin-python/graphs/contributors\n[omf-link]:        https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:   https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:    http://img.shields.io/travis/oh-my-fish/plugin-python.svg?style=flat-square\n[travis-link]:     https://travis-ci.org/oh-my-fish/plugin-python\n","repository_updated":0},"rails":{"name":"rails","description":"Alias for executing database migrations.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-rails","license":"MIT","dependencies":[],"stars":0,"forks":3,"watchers":0,"issues":0,"updated":1547653600,"full_description":"# plugin-rails\nAlias for executing database migrations.\n\n![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# osx\n\nThis plug-in brings a handy function:\n\n- `migrate` - Execute database migrations on development and test environments.\n\n## Install\n\n```fish\n$ omf install rails\n```\n\n## Usage\n\n```fish\n$ migrate\n```\n\n# License\n\n[MIT][mit] © [bpinto][author] et [al][contributors]\n\n[mit]:             http://opensource.org/licenses/MIT\n[author]:          http://github.com/bpinto\n[contributors]:    https://github.com/oh-my-fish/plugin-rails/graphs/contributors\n[omf-link]:        https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:   https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:    http://img.shields.io/travis/oh-my-fish/plugin-rails.svg?style=flat-square\n[travis-link]:     https://travis-ci.org/oh-my-fish/plugin-rails\n","repository_updated":0},"rbenv":{"name":"rbenv","description":"rbenv Ruby environment/version manager.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-rbenv","license":"MIT","dependencies":[],"stars":13,"forks":7,"watchers":13,"issues":2,"updated":1657886471,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n#  [_rbenv_](https://github.com/sstephenson/rbenv)\n\nRuby environment/version manager plugin for [Oh My Fish][omf-link].\n\n## Install\n\u003e _Note_: You need to have `rbenv` installed.\n\n```fish\n$ omf install rbenv\n```\n\n## Configuration\n\nIf you have a custom rbenv root, you can add the following to your `~/.config/fish/init.fish` file before sourcing Oh My Fish.\n\n```\nset -gx RBENV_ROOT #path\n```\n\n# License\n\n[MIT][mit] © [bpinto][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/bpinto\n[contributors]:   https://github.com/oh-my-fish/plugin-rbenv/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/oh-my-fish/plugin-rbenv.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/oh-my-fish/plugin-rbenv\n","repository_updated":0},"remove_host":{"name":"remove_host","description":"Plugin for Fish shell that removes host keys from known_hosts","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"johanmeiring","repository":"https://github.com/johanmeiring/fish-remove_host","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1571985589,"full_description":"# fish-remove_host\n\nA plugin for [Oh My Fish](https://www.github.com/oh-my-fish/oh-my-fish). It installs a function `remove_host`, which can be used to remove host keys from `~/.ssh/known_hosts` based on line number. This is particularly useful in cloud hosting when you might be rotating server instances often and the same IP addresses tend to be re-used, but obviously with different host SSH keys.\n\n[![Software License](https://img.shields.io/badge/License-MIT-orange.svg?style=flat-round)](https://github.com/johanmeiring/awesomeminer-go-sdk/blob/master/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-round)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-round)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n## Prerequisites\n\nUsage of this plugin and function depends on GNU sed being installed. This should usually already be the case on most Linux distros. On macOS you will need to install it via `brew install gnu-sed`, which installs the `gsed` binary.\n\n## Install\n\n```fish\n$ omf install https://github.com/johanmeiring/fish-remove_host\n...\n```\n\n## Usage\n\n```fish\n$ remove_host \u003cline number in known_hosts file\u003e\n$\n```\n\n## License\n\nMIT. See the LICENSE file for more details.\n\n## Donations\n\nDonations are very welcome, and can be made to the following addresses:\n\n- BTC: 1AWHJcUBha35FnuuWat9urRW2FNc4ftztv\n- ETH: 0xAF1Aac4c40446F4C46e55614F14d9b32d712ECBc\n","repository_updated":0},"rustup":{"name":"rustup","description":"","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-rustup","license":"MIT","dependencies":[],"stars":14,"forks":2,"watchers":14,"issues":0,"updated":1665635276,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### plugin-rustup\n\u003e A plugin for [Oh My Fish][omf-link] that adds `$HOME/.cargo/bin` to `$PATH` required by [Rustup].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install rustup\n```\n\n# License\n\n[MIT][mit] © [andrewynhard][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/andrewrynhard\n[contributors]:   https://github.com/andrewrynhard/plugin-rustup/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[Rustup]:         https://github.com/rust-lang-nursery/rustup.rs.git\n","repository_updated":0},"rvm":{"name":"rvm","description":"RVM Ruby version manager.","image":"https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-rvm","license":"MIT","dependencies":[],"stars":15,"forks":12,"watchers":15,"issues":3,"updated":1659680703,"full_description":"![](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)\n\n\u003cdiv align=\"center\"\u003e\n    \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n        \u003cimg width=\"90\" src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n    \u003c/a\u003e\n\u003c/div\u003e\u003cbr\u003e\n\nrvm\n===\n\n[RVM](http://rvm.io) Ruby version manager.\n\nInstall\n-------\n\n```fish\n$ omf install rvm\n```\n\nUsage\n-----\n\n```fish\n$ rvm help\n```\n\nLicense\n=======\n\n[MIT](http://opensource.org/licenses/MIT) © [bpinto](http://github.com/bpinto) et [al](https://github.com/bpinto/plugin-bundler/graphs/contributors)\n","repository_updated":0},"sdk":{"name":"sdk","description":"SDK man fish plugin","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"deather","repository":"https://github.com/deather/omf-sdk","license":"MIT","dependencies":[],"stars":25,"forks":3,"watchers":25,"issues":1,"updated":1660318908,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### sdk\n\u003e A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nThis plugin allows you to use the [sdkman][sdkman_link].\nPlugin inspired by the blog post from [Ted Wise][inspired_by].\n\n\n## Install\n\n```fish\n$ omf install sdk\n```\n\n\n## Usage\n\n```fish\n$ sdk\n```\n\n## FAQ\n\n**Q: I've not installed SDKMAN in the default directory. How can I specify to the plugin the new installation directory ?**\n\nA: If you installed SDKMAN in another directory, you need to create a file in the directory `~/.config/fish/conf.d/`. The files are executed in alphabetical order.\nFor example you can create a file `00_sdkman_path.fish`:\n\n```fish\nset -g SDKMAN_DIR \"/Users/username/.sdkman\"\n```\n\nThis file will be executed before the `omf.fish` and the `SDKMAN_DIR` variable will be set before.\n\n\n# License\n\n[MIT][mit] © [Charles Jourdan][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/deather\n[contributors]:   https://github.com/deather/plugin-sdk/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[inspired_by]:    http://tedwise.com/2016/02/26/using-sdkman-with-the-fish-shell\n[sdkman_link]:    http://sdkman.io\n","repository_updated":0},"spark":{"name":"spark","description":"▁▂▃▅▂▇ in your shell","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-spark","license":"MIT","dependencies":[],"stars":7,"forks":0,"watchers":7,"issues":0,"updated":1552111759,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" height=\"160px\"/\u003e\n\n### spark\n[Oh My Fish!][omf] package for [spark].\n\n[![MIT License][license-badge]](/LICENSE)\n\n\u003cbr/\u003e\n\n\nSpark is a simple and awesome utility for printing sparklines in your shell. See the [spark] page for an overview and guide on how to use it.\n\n\n## Install\n```fish\n$ omf install spark\n```\n\n\n## License\nThis plugin is © Oh My Fish! under the [MIT][mit] license. Includes [spark] as a submodule, which is © [Zach Holman](http://zachholman.com). See the [spark license][spark-license] for details.\n\n\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[mit]: http://opensource.org/licenses/MIT\n[omf]: https://github.com/oh-my-fish/oh-my-fish\n[spark]: https://github.com/holman/spark\n[spark-license]: https://github.com/holman/spark/blob/master/LICENSE.md\n","repository_updated":0},"ssh-term-helper":{"name":"ssh-term-helper","description":"Fish function that overloads the ssh command to set a conservative $TERM value","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"wk","repository":"https://github.com/wk/plugin-ssh-term-helper","license":"MIT","dependencies":[],"stars":0,"forks":2,"watchers":0,"issues":0,"updated":1671172546,"full_description":"![][license-badge]\n\n# ssh-term-helper\n\n[Fish][fish-link] function that overloads the ssh command\nto set a conservative $TERM value\n\nDue to inconsistency of 256 color terminal support across\nterminal applications, it may be desirable to force the\n$TERM value to its -256color variant.\n\nFor example, this is often accomplished in tmux by means\nof adding the following to a tmux.conf file:\n\n    set -g default-terminal \"screen-256color\"\n\nUnfortunately, remote hosts accessed via ssh may not have\nthe requisite terminfo files, and may not even allow the\nuser to supply them, as is often the case with network\nequipment and other appliances accessible via ssh.\n\nThis helper strips the -256color suffix and exports a\nregular 'screen' or 'xterm' $TERM value when setting up\na ssh connection.\n\n## Install\n\n### With [oh-my-fish][omf-link]\n```fish\n$ omf install ssh-term-helper\n```\n\n### With [fisherman][fisherman-link]\n```fish\n$ fisher install wk/plugin-ssh-term-helper\n```\n\n## Usage\n\n```fish\n$ ssh [arguments]\n```\n\nssh-term-helper overloads the 'ssh' command and changes the\nvalue of $TERM to a conservative setting present in most\ntermcap files. Any arguments are passed directly to the ssh\ncommand.\n\n# License\n\n[MIT][mit] © [wk][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/wk\n[contributors]:   https://github.com/wk/pkg-ssh-term-helper/graphs/contributors\n[fish-link]:      https://fishshell.com/\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[fisherman-link]: https://www.github.com/fisherman/fisherman\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"sublime":{"name":"sublime","description":"Creates `subl` command line shortcut to launch Sublime Text editor.","image":"https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-sublime","license":"MIT","dependencies":[],"stars":7,"forks":9,"watchers":7,"issues":2,"updated":1629621088,"full_description":"![](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)\n\n\u003cdiv align=\"center\"\u003e \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e \u003c/a\u003e\u003c/div\u003e\u003cbr\u003e\n\nsublime\n=======\n\nCreates `subl` command line shortcut to launch Sublime Text editor for [Oh My Fish](https://www.github.com/oh-my-fish/oh-my-fish).\n\nInstall\n-------\n\n\u003e *Note*: You need to have `Sublime Text` installed.\n\n```fish\n$ omf install sublime\n```\n\nIf your Sublime Text app is in a non-standard location, you can add specify the path to `subl` in your `config.fish`:\n\n```fish\nset -g SUBL_PATH \"/Applications/Desarrollo/Sublime Text.app/Contents/SharedSupport/bin/subl\"\n```\n\nUsage\n-----\n\n```fish\n$ subl [options] [file ...]        edit the given files\n$ subl [options] [directory ...]   open the given directories\n$ subl [options] -                 edit stdin\n$ subl --help                      get help :)\n```\n\nLicense\n=======\n\n[MIT](http://opensource.org/licenses/MIT) © [bpinto](http://github.com/bpinto) et [al](https://github.com/bpinto/plugin-sublime/graphs/contributors)\n","repository_updated":0},"sudope":{"name":"sudope","description":"sudope plugin for Oh-My-Fish. Quickly put 'sudo' in your command","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-sudope","license":"ISC","dependencies":[],"stars":27,"forks":9,"watchers":27,"issues":5,"updated":1669911328,"full_description":"## sudope Plugin for Fish Shell\n\n### About\n\nA fish shell port of oh-my-zsh's [sudo plugin]\n\n### Install\n\nWith [Oh-My-Fish]:\n```fish\nomf install sudope\n```\n\n### Usage\n\nFish 2.3 and later: Press \u003ckbd\u003eEsc\u003c/kbd\u003e+\u003ckbd\u003eEsc\u003c/kbd\u003e or \u003ckbd\u003eAlt\u003c/kbd\u003e+\u003ckbd\u003eEsc\u003c/kbd\u003e to activate.\n(See the \"Escape in Fish\" appendix if you're having trouble activating sudope)\n\nFish 2.2 and earlier: Press \u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003es\u003c/kbd\u003e to activate.\n(See Customization below if you want to change the binding.)\n\nIt will add `sudo ` to the beginning of the line if missing, or remove it if it is present - while preserving the cursor position.\nIf the current line is empty, it will do the same thing to the most recent history item.\n\n### Customization\n\nThe default binding sequence can be overriden by setting `sudope_sequence` to the desired sequence.\n\nFor example, to set the sequence to \u003ckbd\u003eAlt\u003c/kbd\u003e+\u003ckbd\u003eu\u003c/kbd\u003e you can add:\n```fish\nset -gx sudope_sequence \\eu\n```\nTo `~/.config/omf/init.fish`.\n\n**Escape in Fish**\n\n\u003ckbd\u003eEsc\u003c/kbd\u003e is treated specially in fish:\n\n\u003e The escape key can be used standalone, for example, to switch from insertion mode to normal mode when using Vi keybindings.\n\u003e Escape can also be used as a \"meta\" key, to indicate the start of an escape sequence, like for function or arrow keys. Custom bindings can also be defined that begin with an escape character.\n\u003e\n\u003e Holding alt and something else also typically sends escape, for example holding alt+a will send an escape character and then an \"a\".\n\u003e\n\u003e fish waits for a period after receiving the escape character, to determine whether it is standalone or part of an escape sequence. While waiting, additional key presses make the escape key behave as a meta key.\n\u003e If no other key presses come in, it is handled as a standalone escape. The waiting period is set to 30 milliseconds (0.03 seconds).\n\u003e It can be configured by setting the `fish_escape_delay_ms` variable to a value between 10 and 5000 ms.\n\u003e This can be a universal variable that you set once from an interactive session.\n\u003e\n\u003e Note: fish 2.2.0 and earlier used a default of 10 milliseconds, and provided no way to configure it. That effectively made it impossible to use escape as a meta key.\n\n(from https://fishshell.com/docs/3.1/cmds/bind.html#special-case-the-escape-character)\n\nIn other words, using \u003ckbd\u003eEsc\u003c/kbd\u003e+\u003ckbd\u003eEsc\u003c/kbd\u003e is possible with fish 2.3+, but you might need to tweak `fish_escape_delay_ms` to more than 30ms if you're using fish 3.1+ and having trouble activating sudope reliably.\n\n#### License\n\n2015-2020 [ISC] @ [Itzik Ephraim]\nCommits e45d168 and 0928ab2: 2017 [ISC] @ [Chloe Kudryavtsev]\n\n[sudo plugin]: https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/sudo\n[Oh-My-Fish]: https://github.com/oh-my-fish/oh-my-fish\n[ISC]: http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/share/misc/license.template?rev=HEAD\n[Itzik Ephraim]: https://github.com/oranja\n[Chloe Kudryavtsev]: https://github.com/5paceToast\n","repository_updated":0},"tab":{"name":"tab","description":"Open the current directory (or any other directory) in a new tab.","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-tab","license":"MIT","dependencies":[],"stars":31,"forks":11,"watchers":31,"issues":5,"updated":1666974704,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### tab\n\u003e A super-rad plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nOpen new iTerm, Apple Terminal, Konsole, Gnome Terminal and Guake tabs from the command line.\n\n\n## Install\n\n```fish\n$ omf install tab\n```\n\nIf you use iTerm and your default session profile isn't \"Default Session\" you can override it in your omf `init.fish`:\n\n```fish\nset -g tab_iterm_profile \"MyProfile\"\n```\n\n\n## Usage\n\n```fish\n$ tab                     Opens the current directory in a new tab\n$ tab [path]              Open PATH in a new tab\n$ tab [cmd]               Open a new tab and execute CMD\n$ tab [path] [cmd] ...    You can prolly guess\n$ tab [-s|--split]        Split the current tab instead of opening a new tab\n$ tab [-S|--split-horiz]  Split the current tab horizontally.\n                          (Splits are only supported in iTerm at this time)\n```\n\n\n# License\n\n[MIT][mit] © [Justin Hileman][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/bobthecow\n[contributors]:   https://github.com/oh-my-fish/plugin-tab/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"technicolor":{"name":"technicolor","description":"Easy colorisation for Fish shell ","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-technicolor","license":"MIT","dependencies":[],"stars":20,"forks":2,"watchers":20,"issues":1,"updated":1666974750,"full_description":"\u003cimg src=\"https://dl.dropboxusercontent.com/u/56336/omf/omf-logo-optimised.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Technicolor\n\u003e A composable way to format and colorize text. For [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nTechnicolor is a declarative DSL which provides a DRY approach to shell text colorization.\n\n## Function DSL\n\nEach function does one, and only one thing, and is named accordingly to its duty, with a reduced character count whenever possible. All public DSL functions are ended by `:`.\n\n### Colorisation\n\nYou can make text coloured using `tint:`.\n\n```fish\ntint: red 'The London bridge is falling down!'\ntint: 555 'The London bridge is falling down!'\necho (tint: red 'Error!') 'Something went wrong!'\n```\n\nSet a background color using `bg:`\n\n```fish\nbg: blue 'Violets are blue'\nbg: 400 'Want some wine, sir?'\n```\n\nUse both via command substitution!\n\n```fish\nbg: red (tint: white 'You better read this text!')\ntint: white (bg: red 'You better read this text!')\n```\n\n### Stylization\n\nMake text `bold:`\n\n```fish\nbold: 'The quick brown fox jumps over the lazy dog'\n```\n\nOutput text verbatim, without _adding_ newlines or trailing spaces using `inline:`\n\n```fish\nfunction oompa\n  inline: 'Oompa Loompa '\n  inline: 'doom-pa-dee-do '\n  inline: 'I have another '\n  inline: 'puzzle for you'\nend\n```\n\nSometimes you want to wrap text in a specific column. Use `wrap:`\n\n```fish\nfunction lorem\n  wrap: 80 'Lorem ipsum dolor sit amet, consectetur' \\\n           'adipiscing elit. Nulla in purus quis erat' \\\n           'aliquet tristique eget et risus. Pellentesque' \\\n           'eget leo id urna dignissim elementum quis ut' \\\n           'libero. Vivamus interdum at nunc sagittis cursus.'\nend\n```\n\n## What Technicolor fixes\n\nFish shell provides the builtin function `set_color`, which abstracts terminal text colorization in a _orthogonal_ function.\n\nNote that even using this abstraction, shell colors still continue to be __stateful__, so once you switch to a color you need to reset the changes manually. This fact makes producing beautiful CLIs a true nightmare:\n\n```fish\nfunction explode\n  set_color --bold red\n  printf \"Error: \"\n  set_color normal\n  set_color red\n  echo \"You can't explode\"\n  set_color normal\nend\n```\n\nUsing Technicolor it's possible to transform the above function into the one below:\n\n```fish\nfunction explode\n  echo (tint: red (bold: 'Error:')) (tint: red 'You can\\'t explode')\nend\n```\n\n# License\n\n[MIT][mit] © [Derek Stavis][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/derekstavis\n[contributors]:   https://github.com/derekstavis/plugin-technicolor/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/derekstavis/technicolor.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/derekstavis/technicolor\n","repository_updated":0},"thefuck":{"name":"thefuck","description":"⚡️ Provide fast and painless support to TheFuck ","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","oh-my-fish","thefuck"],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-thefuck","license":"MIT","dependencies":[],"stars":61,"forks":5,"watchers":61,"issues":6,"updated":1671313951,"full_description":"[![][travis-badge]][travis-link]\n![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\n# thefuck\n\nThis plug-in creates the necessary function to be used with [The Fuck][thefuck].\nIt brings:\n\n* Fast initialization (benchmark: diff is 10ms, median)\n* Lazy auto-update (only when The Fuck gets updated)\n* Key binding for command line replacement\n\n\n## Install\n\nAfter [installing The Fuck][thefuck-install], proceed:\n\n```fish\n$ omf install thefuck\n```\n\n\n## Optional key binding\n\nTo use a key bind just add it to your `fish_user_key_bindings` function:\n\n```fish\nfunction fish_user_key_bindings\n  # ...\n  bind \\e\\e 'thefuck-command-line'  # Bind EscEsc to thefuck\n  # ...\nend\n```\n\n\n## Usage\n\n```fish\n$ git brch\n$ fuck\n```\n\n\n# License\n\n[MIT][mit] © [scorphus][author] et [al][contributors]\n\n[thefuck]:         https://github.com/nvbn/thefuck\n[thefuck-install]: https://github.com/nvbn/thefuck/#requirements\n\n[mit]:             http://opensource.org/licenses/MIT\n[author]:          https://github.com/scorphus\n[contributors]:    https://github.com/oh-my-fish/plugin-thefuck/graphs/contributors\n[omf-link]:        https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:   https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:    http://img.shields.io/travis/oh-my-fish/plugin-thefuck.svg?style=flat-square\n[travis-link]:     https://travis-ci.org/oh-my-fish/plugin-thefuck\n","repository_updated":0},"tiny":{"name":"tiny","description":"tap into github's git.io URL shortener.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-tiny","license":"MIT","dependencies":[],"stars":2,"forks":1,"watchers":2,"issues":0,"updated":1666974753,"full_description":"# _tiny_\n\u003e git.io for the lazy\n\n## Synopsis\n\n```\ntiny [-u --user \u003cusername\u003e]\n     [-r --repo \u003crepository\u003e]\n     [-c --code \u003cvanity code\u003e]\n     [-o --open]\n     [-h --help]\n\ntiny [-c --code] [-o --open] owned-repo/url\n```\n\n## Description\nTap into [git.io](http://git.io), github's URL shortener service, to easily _shorten_ any github URL. The generated URL is printed to `stdout` and copied to the clipboard. You can optionally specify the `-o` flag to open it up on your browser too.\n\n## Options\n\n#### `-u --user`  \nUsername. If omitted, the git global config is queried.\n\n#### `-r --repo`  \nRepository name.\n\n#### `-c --code`  \nOwn code to setup a personal `vanity` URL. A regular short URL is generated if the specified code is not available.\n\n#### `-o --open`  \nOpen the short URL in the browser.\n\n#### `-h --help`\nDisplay usage help.\n\n## Default Options\n\nIt's possible to omit the `-u` option and just specify the `url` to shorten.\n\n```fish\ntiny my-awesome-repo\n```\n\nIn this case, the username will be retrieved from your git configuration file. You can add your github username to git's configuration like this:\n\n```fish\ngit config github.user \u003cyour username\u003e\n```\n\nAnother common use case is to simply copy paste an existing URL into the terminal:\n\n```fish\ntiny [-o --open] http://github.com/facebook/react\n```\n\n## Diagnostics\n\n  The following error codes are generated:\n\n+ _1_  git.io failed to shorten the URL\n\n+ _2_  invalid input or no input.\n\n\n## Links\n\n  + [git.io](http://git.io)\n  + [Github's URL shortener](https://github.com/blog/985-git-io-github-url-shortener)\n\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT) © [Jorge Bucaran](https://bucaran.me)\n","repository_updated":0},"title":{"name":"title","description":"Change your terminal title!","image":"https://dl.dropboxusercontent.com/u/56336/terminal-title.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-title","license":"MIT","dependencies":[],"stars":15,"forks":1,"watchers":15,"issues":0,"updated":1647840878,"full_description":"# Fish Terminal Title\n\nThis plugin allows you to change your terminal title.\n\nThe title can be handled differently depending on your terminal application/multiplexer. On common graphical terminal emulators like GNOME's and OS X's the behavior of this plugin is to change the tab and/or titlebar title:\n\n![Terminal Title Screenshot](https://dl.dropboxusercontent.com/u/56336/terminal-title.png)\n\n# Usage examples\n\nChange the title using `title` command\n\n    title Server\n    \nThe title is updated on the fly!\n\n## Installation\n\nAdd the following line to your __Oh My Fish!__ config file:\n\n    Plugin \"title\"\n\nReload your shell, issue a `omf install` and reload again.\n\n## License\n\n```\nThe MIT License (MIT)\n\nCopyright (c) 2015 Derek Willian Stavis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n","repository_updated":0},"tmux-zen":{"name":"tmux-zen","description":"Achieve true terminal zen with tmux and Oh My Fish.","image":"","latest_version":{"version":"v1.0.0","description":"Works on most systems (probably) and has a short introduction in the README.\n","commit_hash":"master","release_date":1443392256},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"Works on most systems (probably) and has a short introduction in the README.\n","release_date":1443392256,"version":"v1.0.0"}],"tags":[],"author":"sagebind","repository":"https://github.com/sagebind/tmux-zen","license":"MIT","dependencies":[],"stars":37,"forks":9,"watchers":37,"issues":4,"updated":1636486412,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# tmux zen\nPlugin for [Oh My Fish][omf] to tap into the zen power of [tmux].\n\n\n## Install\nYou will first need to install tmux. The best way is usually with your operating system's package manager. Otherwise, you can download and compile tmux yourself:\n\n```fish\n$ wget https://github.com/tmux/tmux/releases/download/2.0/tmux-2.0.tar.gz\n$ tar xcf tmux-2.0.tar.gz; and cd tmux-2.0\n$ ./configure; and make\n$ sudo make install\n```\n\nNow you can install tmux zen using [Oh My Fish][omf]:\n\n```fish\n$ omf install tmux-zen\n```\n\nThat's it! Prepare yourself for an epic journey to ultimate terminal zen.\n\n\n## The path to zen\nTmux is a terminal multiplexer geared toward developers and admins who regulary make use of the terminal. Fish (and the Oh My Fish framework) is a friendly interactive shell that is an intuitive alternative to the old and confusing syntax of bash-like shells.\n\nIn tmux zen, tmux allows us to break the concept of terminal sessions out of desktop windows and into a central location. This location is the *session*, which will contain all of our terminal windows that will ever exist. Any time you open a terminal app, you will be presented with a *portal* that allows you to view and access the session. When you desire to create a new shell prompt, you do so by creating a new *window*. A window is similar to a window in a graphical deskop, except that it lives in our zen session.\n\nThis journey assumes basic knowledge on both tmux and fish.\n\n### Managing windows\nFirst, we need to open a portal in order to access our session. We can do this by simply opening a terminal and running `fish`. A portal will be opened, and the terminal will now be connected to the session. By default, the session will be created if it did not already exist. Opening a portal will also create us a new empty window in the session with a fish shell prompt waiting for you. You can use this window like any other terminal window.\n\nWhen we are using an open portal, we can interact with our session windows just like normal tmux windows and panes. To create a new window, you can use `Prefix+c`. The view will switch to a new window, while keeping our old window still open. If we run `exit`, only the current window will be closed.\n\n### More on portals\nIn tmux zen, portals are cheap. If you close your terminal app, you might normally expect your shell session to be forcefully closed. When you close a portal however, all of your windows in the session remain in existence. To access them again, simply open up another portal.\n\nThe workflow becomes even closer to zen when using multiple portals. Go ahead and try to open two, three, or more portals. You will notice that all of the portals provide a view into our same session each time, but each can view a different window or the same window. This allows us to select whatever windows we need to access simultaneously by using multiple portals and switching to the desired window in each.\n\n### Preparing our workspace\nIt can be very helpful to run some commands each time the session is created for the first time. This could be startup scripts, or scripts that open certain programs in certain windows. We can set these commands by creating a fish function that listens for the `zen.init` [event]. Tmux zen will trigger this event once, when the session is first created. For example, here's a script that will open Vim in its own window:\n\n```fish\nfunction my-zen-init --on-event zen.init\n    zen tmux new-window vim\nend\n```\n\nAdd this to your `config.fish` (or in some other setup script) and next time we start our session, a Vim window will be created for us.\n\n\n## Configuration\nTmux zen has a few configuration options that you can customize:\n\n- `session-name`: The name to use for the shared tmux session.\n- `tmux-bin`: Specify a specific tmux binary to execute tmux commands with.\n- `events.init`: A Fish script to also run on the `zen.init` event.\n\nSee `zen config --help` for help on how to modify these settings.\n\n\n## Need some guidance?\nThis journey isn't meant to be a solo experience. Feel free to ask me [@sagebind](http://twitter.com/sagebind) or any other tmux guru for guidance.\n\n\n## License\n[MIT][mit] © [Stephen Coakley][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/sagebind\n[contributors]:   https://github.com/sagebind/tmux-zen/graphs/contributors\n[omf]:            https://github.com/oh-my-fish/oh-my-fish\n[event]:          http://fishshell.com/docs/current/index.html#event\n[tmux]:           https://tmux.github.io\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"touchrunner":{"name":"touchrunner","description":"Run npm scripts from the MacBook Pro Touch Bar","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fishshell","npm","ohmyfish","scripts","touchbar"],"author":"derekstavis","repository":"https://github.com/derekstavis/touchrunner","license":"MIT","dependencies":[],"stars":47,"forks":2,"watchers":47,"issues":1,"updated":1654979107,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### touchrunner\n\u003e Run tasks from the touchbar\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Installing\n\n```fish\n$ omf install touchrunner\n```\n\n## What will you get\n\n![Touchrunner demo](touchrunner.gif \"Touchrunner demo\")\n\n## Requirements\n\n1. Have **Oh My Fish** installed. For more information, check [here](https://github.com/oh-my-fish/oh-my-fish#installation).\n1. Be using **iTerm2**, for Touch Bar support.\n\n## Usage\n\n1. Edit the Touch Bar (View -\u003e Customize Touch Bar) to have only \"Function keys\" block.\n1. Enter a directory with a `package.json` and the tasks will appear at the touch bar.\n1. Exitting the directory makes the Touch Bar be restored to function keys.\n\n## Configuration\n\nBy default touchrunner will use `npm run`. If you want to switch the task\nrunner, you can override via `touchrunner_command` global variable, eg.:\n\n```fish\nset -g touchrunner_command yarn\n```\n\n# License\n\n[MIT][mit] © [Derek Stavis][author]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/derekstavis\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"uid-gid":{"name":"uid-gid","description":"A plugin for Oh My Fish to expose the user and group IDs as environment variables","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"enerdgumen","repository":"https://github.com/enerdgumen/omf-plugin-uid-gid","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1582659766,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### uid\n\u003e A plugin for [Oh My Fish][omf-link] to expose the user and group IDs as environment variables (`UID` and `GID`).\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install uid-gid\n```\n\n## Usage\n\n```fish\n$ echo $UID\n$ echo $GID\n```\n\n# License\n\n[MIT][mit] © [Mauro Rocchi][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/maurocchi\n[contributors]:   https://github.com/maurocchi/omf-plugin-uid-gid/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"vcs":{"name":"vcs","description":"A version control system abstraction layer for Fishshell","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-vcs","license":"MIT","dependencies":[],"stars":10,"forks":9,"watchers":10,"issues":3,"updated":1668481372,"full_description":"[![][travis-badge]][travis-link]\n![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# VCS\n\nProvides a uniform contextual API for interfacing with version control systems.\n\n## Install\n\n```fish\n$ omf install vcs\n```\n\n## API\n\nTBD\n\n# License\n\n[MIT][mit] © [Derek Willian Stavis][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/derekstavis\n[contributors]:   https://github.com/derekstavis/pkg-vcs/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/derekstavis/vcs.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/derekstavis/vcs\n","repository_updated":0},"vi-mode":{"name":"vi-mode","description":"Basic vi key bindings emulation for fish.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-vi-mode","license":"MIT","dependencies":[],"stars":17,"forks":3,"watchers":17,"issues":6,"updated":1669859704,"full_description":"# vi-mode\nBasic vi key bindings emulation for fish.\n\n## Install\nAdd `vi-mode` to your list of fish plugins in your `config.fish`.\n\nExample:\n\n    set fish_plugins autojump vi-mode\n\n## Configuration\n### Default mode\nThe default vi mode can be set by defining the variable `vi_mode_default` in\nyour `config.fish`.\nIf used, this variable must be set before loading `oh-my-fish`.\nIts default value is `vi_mode_insert`.\n\nTo set normal mode as default:\n\n    set vi_mode_default vi_mode_normal\n\n### Mode indicator\nThe mode indicator is stored in the variable `vi_mode`.\n\nSee the oh-my-fish theme `simplevi` for an example of integration of the\nindicator into the prompt.\n\n### User key bindings\nUser additional key bindings can be defined with the function\n`vi_mode_user_key_bindings`. If used, this function must be defined before\nloading `oh-my-fish`.\n\nExample:\n\n    function vi_mode_user_key_bindings\n        bind \\el  suppress-autosuggestion\n    end\n\n## Not implemented\n- bind 2 vi-arg-digit\n- bind y yank-direction\n- bind g magic :-P\n- bind ^a increment next number\n- bind ^x decrement next number\n- bind /?nN search (jk kind of does this)\n- registers (maybe try to make sensible integration into X, like an\n  explicit yank with y goes to an X selection, while an implicit\n  delete with x etc. doesn't. \"\\* and \"+ should natually go to the\n  appropriate X selection if possible)\n- etc.\n\n## Author\nThis mode has been created by [Ian Munsie][ian_github], the original file can\nbe found [here][original].\nIt has been adapted for oh-my-fish by [Sylvain Benner][syl_github].\n\n[ian_github]: https://github.com/DarkStarSword\n[original]: https://github.com/DarkStarSword/junk/blob/master/vi-mode.fish\n[syl_github]: https://github.com/syl20bnr\n\n\n\n","repository_updated":0},"virtualfish":{"name":"virtualfish","description":"A simple wrapper for virtualfish","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-virtualfish","license":"MIT","dependencies":[],"stars":9,"forks":5,"watchers":9,"issues":0,"updated":1666891829,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### virtualfish\n\u003e A simple wrapper for [virtualfish][vf-link]\n\n[![MIT License][license-badge]](/LICENSE)\n[![Fish Shell Version][fish-badge]][fish-link]\n[![Oh My Fish Framework][omf-badge]][omf-link]\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ pip install virtualfish\n$ omf install virtualfish\n```\n\n### Customise\n\nYou can customise the virtualfish behaviour by setting variables in the `before.init.fish` file. Currently supported:\n\n* `VIRTUALFISH_PYTHON`, if you're using a python interpreter other than `python`:\n```fish\nset -g VIRTUALFISH_PYTHON \"/usr/local/bin/python3\"\n```\n* `VIRTUALFISH_PLUGINS` to load virtualfish [plugins][vf-plugins-link]:\n```fish\nset -g VIRTUALFISH_PLUGINS \"auto_activation compat_aliases\"\n```\n\n## Usage\n\nSee [virtualfish documentation][vf-usage-link]\n\n\n# License\n\n[MIT][mit] © [Sergey Timanin][author] et [al][contributors]\n\n\n[mit]:              https://opensource.org/licenses/MIT\n[author]:           https://github.com/timanin\n[contributors]:     https://github.com/oh-my-fish/plugin-virtualfish/graphs/contributors\n\n[fish-link]:        https://fishshell.com\n[omf-link]:         https://www.github.com/oh-my-fish/oh-my-fish\n[vf-link]:          http://virtualfish.readthedocs.io\n[vf-usage-link]:    http://virtualfish.readthedocs.io/en/latest/usage.html\n[vf-plugins-link]:  http://virtualfish.readthedocs.io/en/latest/plugins.html\n\n[license-badge]:    https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[fish-badge]:       https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square\n[omf-badge]:        https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square\n","repository_updated":0},"vish":{"name":"vish","description":"A bunch of vim-style shortcuts for fish shell","image":"https://raw.githubusercontent.com/Wesmania/vish/master//readme/demo.gif?raw=true","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"Wesmania","repository":"https://github.com/Wesmania/vish","license":"MIT","dependencies":[],"stars":3,"forks":1,"watchers":3,"issues":0,"updated":1657310901,"full_description":"# vish\nA handful of conveniences for anyone using Fish extensively, with some vim-like syntax.\n- `\u003cLeader\u003e` - `\u003cregister\u003e` - `\u003caction\u003e` vim-like mnemonics.\n- Register sets for common bits like working directories and commandline snippets,\n- Statusline toggles, clipboard registers, assorted features.\n- Extensible - define your own registers and bindings.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n\n## Installation\n\nVish is available as a package in [oh-my-fish](https://github.com/oh-my-fish/oh-my-fish). Once you have oh-my-fish set up, just run:\n\n```\nomf install vish\n```\n\n## Demo\n\n![Demo Animation](../readme/demo.gif?raw=true)\n\n## Configuration\n\n* Set the following variables in your config.fish, before omf hooks:\n  * `_VISH_ESCAPE` to the terminal sequence you want to be your \"leader\" key. By default it's set to `\\e'`.\n  * `VISH_FEATURES` (array) to the set of features you want. Default is `dirs prefices prompt misc`, add `tmux` if you use it.\n  * If you use tmux, set `_VISH_PROMPT_MAGIC_CHAR` to a character that only appears in your prompt. This helps some keybindings identify your prompt in tmux panes.\n\n## Usage\n\nVish uses modal key sequences, kind of like vim does. All sequences start with the leader key `\u003cL\u003e`, then use some sequence of register names and commands, usually `\u003cregister\u003e\u003ccommand\u003e`. For example, `\u003cL\u003e\u003cL\u003eh` calls `history --merge`, while `\u003cL\u003eam` saves current directory to register a. Here's a few sequences I commonly use:\n\n* `\u003cL\u003eam` saves current directory to register a. `\u003cL\u003eag` goes to directory under register a. `\u003cL\u003e=m` lists all saved directories.\n* `\u003cL\u003e*p` saves current commandline contents to selection buffer.\n* `\u003cL\u003e*a` appends selection buffer to commandline.\n* With tmux, `\u003cL\u003e-1la` appends last line of command output to commandline.\n\nTo list all configured bindings with brief descriptions, run `vish_help`.\n\n### Registers\n\nVish defines registers from a to z, plus some special registers. Unlike vim, there can be multiple sets of registers a-z, e.g. one for directories, one for commands etc, with each keybinding implicitly using one of them. Registers are **UNIVERSAL** and are shared between all shells. Special registers are shared by all keybindings, and by default are as follows:\n\n* `0` is the \"implicit\" register.\n* `*` and `+` are equivalents of vim clipboard registers. For convenience they're also mapped under `,` and `.`, respectively.\n* Additionally, `\u003cL\u003ea*` and `\u003cL\u003ea+` bindings copy register 'a' to the clipboard register.\n\nEach register set is bound to a letter. For a set bound to a letter `\u003cx\u003e`, `\u003cL\u003ea\u003cx\u003e` sets register a, `\u003cL\u003ea-\u003cx\u003e` clears it and `\u003cL\u003e=\u003cx\u003e` lists all letters in a set.\n\n### Feature: directories\n\nEnabled by `dirs` in `VISH_FEATURES`. Defines a \"dirs\" register set under letter m.\n\n- `\u003cL\u003eam` saves current directory to register a.\n- `\u003cL\u003eag` goes to directory under register a. Try `\u003cL\u003e*g` for going to directory saved to clipboard.\n\n### Feature: commands\n\nEnabled by `prefices` in `VISH_FEATURES`. Defines a \"prefices\" register set under letter p.\n\n- `\u003cL\u003eap` to save current commandline to register a.\n- `\u003cL\u003eaa` to append contents of register a to commandline.\n- `\u003cL\u003eax` to execute contents of register a.\n- `\u003cL\u003eaz` to prepend contents of register a at every prompt, `\u003cL\u003eaz` again to turn it off.\n\n### Feature: misc bindings\n\nEnabled by `misc` in `VISH_FEATURES`.\n\n- `\u003cL\u003e\u003cL\u003eh` calls `history --merge`.\n\n### Feature: prompt\n\nEnabled by `prompt` in `VISH_FEATURES`.\n\nFor `fish_prompt`:\n- `_vish_prompt_path` prints current directory in short or long format. `\u003cL\u003e\u003cL\u003es` toggles the format.\n\nFor `fish_right_prompt`:\n- `_vish_right_prompt_git_branch` prints current git branch. `\u003cL\u003e\u003cL\u003eg` toogles it on or off.\n- `_vish_right_prompt_status` prints return code of last command.\n- `_vish_right_prompt_states` prints useful status info. At the moments it prints `j` if there are background jobs and `I` if ping mode is enabled.\n\nEach right prompt function can be toggled by calling `_vish_prompt_toggle GIT_BRANCH/PING/SHORT_PATH`, e.g. in your config.fish.\n\n`\u003cL\u003e\u003cL\u003ei` toogles ping mode on and off.\n- When ping mode is on, fish will run a `_vish_ping` function, if defined, after long-running commands. It's up to you to define `_vish_ping`.\n- Any command that matches a regex in `$VISH_INTERACTIVE_CMDS` array will be considered interactive and `_vish_ping` won't be called.\n- By default any command that runs 10 seconds or longer is long-running. You can change that nubmer by defining `$VISH_COMMAND_PING_MIN_TIME`.\n\n### Feature: tmux\n\nEnabled by `tmux` in `VISH_FEATURES`.\n\n- `\u003cL\u003et\u003cx\u003e` for various tmux shortcuts, see `vish_help`. In particular `\u003cL\u003ett` autocompletes word under cursor, searching in current window's panes.\n- `\u003cL\u003e\u003cN\u003el` to copy lines from last command's output to register 0, then wait for another keybinding. For example:\n  - `\u003cL\u003e-1la` to copy first line from the bottom to prompt.\n  - `\u003cL\u003e3l+` to copy third line from the top to clipboard.\n- `\u003cL\u003e\u003cN\u003eg` to copy current directory from pane N to register 0, then wait for another keybinding. For pane 0, use -1.\n\n### Functions\n\n- `vish_help` - list all bindings.\n\n## Custom bindings and scripting\n\nIt's possible to define your own registers and bindings and do some limited scripting. For details, see `custom.md`.\n","repository_updated":0},"vundle":{"name":"vundle","description":"","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-vundle","license":"MIT","dependencies":[],"stars":3,"forks":5,"watchers":3,"issues":4,"updated":1613331596,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\n# vundle\n\nPlugin for [Oh My Fish][omf-link] that integrates the [Vundle] vim plugin manager.\n\n## Install\n\n```fish\n$ omf install vundle\n```\n\n## Usage\n\nUpon installation or loading, vundle checks for the existence of the Vundle.vim plugin and will notify if it is missing.\n\n#### `vundle`\n\nRuns PluginInstall to install missing plugins\n\n#### `vundle-update`\n\nRuns PluginUpdate to install missing plugins and update out of date plugins\n\n#### `vundle-clean`\n\nRuns PluginClean! to remove unused plugins\n\n# License\n\n[MIT][mit] © [nwykes][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/nwykes\n[contributors]:   https://github.com/nwykes/plugin-vundle/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[Vundle]:         http://github.com/VundleVim/Vundle.vim\n","repository_updated":0},"wacom-screen":{"name":"wacom-screen","description":" Quickly map all Wacom tablets to given screen. OMF plugin","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","fish-shell","graphics-tablet","oh-my-fish","plugin","shell","shell-script","wacom"],"author":"TeddyDD","repository":"https://github.com/TeddyDD/plugin-wacom-screen","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1499815622,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### wacom-screen\n\u003e Wacom tablet utilities. A plugin for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.6.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install wacom-screen\n```\n\n\n## Usage\n\n### Map tablet to given display\n\nUse \u003ckbd\u003eTAB\u003c/kbd\u003e to cycle through all connected screens. You can find names of\nscreens using `xrandr` command.\n\n```fish\n$ wacom-screen screen\n```\n\n### Toggle touch input\n\n```fish\n$ wacom-finger on\n$ wacom-finger off\n$ wacom-finger # toogle\n```\n\n# License\n\n[MIT][mit] © [Daniel Lewan][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/TeddyDD\n[contributors]:   https://github.com/TeddyDD/plugin-wacom-screen/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"wd":{"name":"wd","description":"Directory navigation plugin for oh-my-fish","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"fischerling","repository":"https://github.com/fischerling/plugin-wd","license":"MIT","dependencies":[],"stars":4,"forks":1,"watchers":4,"issues":0,"updated":1670927349,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# wd\n\nFast directory navigation plugin for [fish shell][fish].\n\nwd (warp directory) lets you quickly navigate through your filesystem \nwith custom directory shortcuts so called warp points.\nWarping to a path pushes the path on the directory stack.\nNavigation back can be achieved with either \"popd\" or \"wd ..\".\n\n## Requirements\n\n+ fish v2.3\n+ cat\n+ sed\n\n## Install\n\nWith [Oh My Fish][omf-link]:\n\n```fish\n$ omf install wd\n```\n\nWith [fisherman][fisherman]:\n\n```fish\n$ fisher add fischerling/plugin-wd\n```\n\n## Usage\n```fish\n$ wd [option] \u003cwarp point\u003e\n$ wd [option] \u003cwarp point\u003e/some/path/\n$ wd [option] [command] [warp point]\n```\n\n### Example\n```fish\n# remember the path to your cool project\ncd path/to/your/cool/project\nwd add cool-project\n\n# warp to your cool project from anywhere\nwd cool-project\n```\n\n## Commands\n\n```fish\n..              Pop the last directory from the directory stack\nadd \u003cpoint\u003e     Adds the current working directory to your warp points\nadd! \u003cpoint\u003e    Overwrites existing warp point\nrm \u003cpoint\u003e      Removes the given warp point\nshow            Print warp points to current directory\nshow \u003cpoint\u003e    Print path to given warp point\nlist            Print all stored warp points\nwarppoints      Print names of all stored warp points\nwarppoints-file Print path where the warppoints are stored\nls \u003cpoint\u003e      Show files from given warp point\npath \u003cpoint\u003e    Show the path to given warp point\nclean           Remove warp points to nonexistent directories\nclean!          Same as clean without confirmation\n\n-v | --version  Print version\n-c | --config   Specify and set config file\n-q | --quiet    Suppress all output\n-f | --force    Equivalent to '!' with add and clean\n\nhelp Shows the help text\n```\n\n## Default warpfile location\n\nIf wd hasn't already found a warpfile and stored its path in the universal fish variable `__wd_warprc` it will\nsearch at those locations in the following order:\n\n1. $WARP_FILE (environment variable)\n2. $xdg_data_dir/wd/warppoints (for xdg_data_dir in $XDG_DATA_DIRS)\n3. $XDG_DATA_HOME/wd/warppoints\n4. $HOME/.local/share/wd/warppoints\n5. $HOME/.warprc (deprecated)\n\nIf it can find a warppoint file it will silently create a new one in 3. or 4. according to the XDG Base Directory standard.\n\n# License\n\n[MIT][mit] © [fischerling][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/fischerling\n[contributors]:   https://github.com/fischerling/plugin-wd/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[fisherman]:      https://github.com/fisherman/fisherman\n[fish]:           http://fishshell.com/\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"weather":{"name":"weather","description":"A simple, location-aware weather command for Fish","image":"","latest_version":{"version":"2.0.1","description":"A patch release containing some bugfixes with the cache on OS X and better error messages when insufficient versions of `jq` are not available to parse API responses.\n","commit_hash":"master","release_date":1451751213},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"A patch release containing some bugfixes with the cache on OS X and better error messages when insufficient versions of `jq` are not available to parse API responses.\n","release_date":1451751213,"version":"2.0.1"},{"commit_hash":"master","description":"Version 2 (ornery-ocelot) is here! Plugin structure has been revamped and improved, and now weather can show pretty graphs for 5-day forecasts!\n\n### New commands:\n- You can now show weather for an arbitrary location with `weather \u003cquery\u003e`.\n- You can view an ever-more-detailed help page with `weather --help`.\n\n### New options:\n- `weather_api_key`: This option sets the OpenWeatherMap API key to use when fetching weather data. This replaces `__weather_api_key`. Defaults to a provided open-source key.\n- `weather_cache_age`: Sets the maximum age of the (**new**!) weather data cache. Defaults to 30 minutes.\n\nRun `omf update` to get the new version. Enjoy!\n","release_date":1448906434,"version":"2.0.0"},{"commit_hash":"master","description":"Three new configuration options are now available:\n- `temperature_units`: Configure the units the temperature is displayed in\n- `__weather_system_dns`: Enables using the default system DNS resolver\n- `__weather_api_key`: Set a custom API key to use for [OpenWeatherMap.org](http://openweathermap.org/api)\n","release_date":1445312434,"version":"v1.1.0"},{"commit_hash":"master","description":"","release_date":1444235522,"version":"v1.0.1"},{"commit_hash":"master","description":"","release_date":1443820154,"version":"v1.0.0"}],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-weather","license":"MIT","dependencies":[],"stars":30,"forks":14,"watchers":30,"issues":11,"updated":1672181485,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n# weather\n\nPlugin for [Oh My Fish][omf-link].\n\nUses your IP address to determine your location and find relevant weather data anywhere in the world.\n\n## Prerequisites\n\nThis plugin depends on [jq](https://stedolan.github.io/jq/). Version **1.5+**\n\n## Install\n\n```fish\n$ omf install weather\n```\n\n\n## Usage\n\nTo view a detailed usage guide, run `weather --help`.\n\n```fish\n$ weather\nWeather for Madison, United States\n\nTemperature: 14.37 °C (57.86 °F)\n   Humidity: 58%\n Cloudiness: sky is clear\n   Pressure: 1029 hpa\n       Wind: from NE (60°) at 7.2 m/s gusting to 10.8 m/s\n\n5-day forecast\nTemperature:   ▃▂▃▆▆▃▂▁▁▁▂▅▆▃▂▂▃▄▆██▇██▇▆▅▅▅▅▄▄▄▅▆▇█▅\n               28/11  29/11  30/11  01/12  02/12  03/12\n\nPrecipitation: ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅█▃▁▁▁▁▁▁▁▁▁▁▁▁▁\n               28/11  29/11  30/11  01/12  02/12  03/12\n```\n\n\n## Configuring\nYou can customize the display of weather data using global variables. By default, both Celsius and Fahrenheit is displayed for the temperature. You can override this by specifying a particular unit to use in `$temperature_units`. Valid options are:\n\n- `celsius`\n- `fahrenheit`\n- `kelvin`\n\nYou can see the results by changing the value and running `weather` again:\n\n```fish\n$ config weather -s temperature-units celsius\n$ weather\nTemperature: 14.37 °C\n   Humidity: 58%\n Cloudiness: sky is clear\n   Pressure: 1029 hpa\n       Wind: from NE (60°) at 7.2 m/s gusting to 10.8 m/s\n```\n\nYou can set this permanently by adding the `config weather -s temperature-units` command in your `.config/omf/init.fish` file:\n```fish\nconfig weather -s temperature-units \u003c celsius | fahrenheit | kelvin \u003e\n```\n\n\nYou can also configure the weather command to use the system default DNS resolver to fetch your IP address if one is configured.\n\n```fish\n$ set -g __weather_system_dns 1\n```\n\n\n# License\n\n[MIT][mit] © [coderstephen][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/coderstephen\n[contributors]:   https://github.com/oh-my-fish/plugin-weather/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"wifi-password":{"name":"wifi-password","description":"","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-wifi-password","license":"MIT","dependencies":[],"stars":5,"forks":2,"watchers":5,"issues":1,"updated":1653377571,"full_description":"# wifi-password\n\nGet your wifi's password in Fish Shell\n\n## Install\n\n```fish\n$ omf install wifi-password\n```\n\n## Usage\n\n```fish\n$ wifi-password\n```\n\n## Contributing\n\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request :D\n\n## License\n\n[MIT](https://github.com/grvcoelho/wifi-password/blob/master/LICENSE) \u0026copy; 2016\n\n","repository_updated":0},"wttr":{"name":"wttr","description":"","image":"https://asciinema.org/a/3199k7ohg0fp7aohjsc5jgxn1.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-wttr","license":"MIT","dependencies":[],"stars":4,"forks":1,"watchers":4,"issues":1,"updated":1642787104,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### wttr\n\u003e A plugin that tells the shows the weather info accessing wttr.in for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n[![asciicast](https://asciinema.org/a/3199k7ohg0fp7aohjsc5jgxn1.png)](https://asciinema.org/a/3199k7ohg0fp7aohjsc5jgxn1)\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install wttr\n```\n\n## Usage\n\n### wttr\n\n```fish\n# shows weather based on your location (IP)\n$ wttr\n\n# query a city to show the weather for the best match\n$ wttr Rio de Janeiro\n$ wttr New York\n$ wttr Montreal\n```\n\n### moon\n\n```fish\n# show current phase of the Moon\n$ moon\n\n# show phase of the Moon on a very special day\n$ moon 1969-Jul-20\n```\n![moon 1969-07-20](https://cloud.githubusercontent.com/assets/2112697/15380766/9a9a743e-1d4f-11e6-9131-595c10b575f9.png)\n\n\n# License\n\n[MIT][mit] © [pedrosnk][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/pedrosnk\n[contributors]:   https://github.com/pedrosnk/omf-wttr/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"xcode-omf":{"name":"xcode-omf","description":"Plugin for Oh My Fish providing utility functions for working with Xcode","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"aaronsky","repository":"https://github.com/aaronsky/xcode-omf","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1580577078,"full_description":"![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\n# xcode-omf\n\nA plugin for Oh My Fish that provides some handy Xcode utilities. Ports some helpers from the [Oh My Zsh][oh-my-zsh] [xcode plugin][omz-xcode-plugin], and provides some new ones of its own.\n\n## Install\n\n```fish\n$ omf install xcode\n```\n\n## Usage\n\n### xc\n\nOpens the first xcworkspace/xcodeproj matched in the specified directory. You can pass a directory if you'd like, otherwise it defaults to the current working directory. Returns 1 if it fails to find anything.\n\n```fish\n$ xc\n```\n\n# License\n\n[MIT][mit] © [aaronsky][author] et [al][contributors]\n\n[oh-my-zsh]:         https://github.com/robbyrussell/oh-my-zsh\n[omz-xcode-plugin]: https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/xcode/xcode.plugin.zsh\n\n[mit]:             http://opensource.org/licenses/MIT\n[author]:          https://github.com/aaronsky\n[contributors]:    https://github.com/aaronsky/xcode-omf/graphs/contributors\n[omf-link]:        https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:   https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square","repository_updated":0},"yarn-binpath":{"name":"yarn-binpath","description":"Set yarn global bin in your path","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"iamruinous","repository":"https://github.com/iamruinous/plugin-yarn-binpath","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1500662585,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### envious\n\u003e A plugin for [Oh My Fish][omf-link]. Add Yarn global bin to your path\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install yarn-binpath\n```\n\n\n## Usage\n\n```fish\n$ yarn global add yo\n$ yo\n# \u003coutput of yo\u003e\n```\n\n# License\n\n[MIT][mit] © [iamruinous][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/iamruinous\n[contributors]:   https://github.com/iamruinous/plugin-yarn-binpath/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"z":{"name":"z","description":"Integration with z (autojump alternative).","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/plugin-z","license":"MIT","dependencies":[],"stars":61,"forks":11,"watchers":61,"issues":3,"updated":1666383694,"full_description":"[![][travis-badge]][travis-link]\n![][license-badge]\n\n\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n#  [_z_][z]\n\nPlugin for [Oh My Fish][omf-link] that brings [z], the jump around utility, to Fish.\n\n## Install\n\n```fish\n$ omf install z\n```\n\nThe upstream script will be installed and updated automatically with the Oh My Fish plugin. No additional configuration is needed.\n\nBash must be installed, as z is written using Bash.\n\n## Usage\n\n```fish\n$ z\n```\n\n# License\n\n[MIT][mit] © [bpinto][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/bpinto\n[contributors]:   https://github.com/oh-my-fish/plugin-z/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[z]:              https://github.com/rupa/z\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/oh-my-fish/plugin-z.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/oh-my-fish/plugin-z\n","repository_updated":0},"z.lua":{"name":"z.lua","description":":zap: A new cd command that helps you navigate faster by learning your habits.","image":"https://raw.githubusercontent.com/skywind3000/z.lua/master/images/fzf.png","latest_version":{"version":"1.8.16","description":"- Update fzf --inline-info option to --info=inline","commit_hash":"master","release_date":1658412924},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"- Update fzf --inline-info option to --info=inline","release_date":1658412924,"version":"1.8.16"},{"commit_hash":"master","description":"- fixed macOS Monterey initialization issues.","release_date":1648390122,"version":"1.8.15"},{"commit_hash":"master","description":"recognize `%_ZL_CD%` in cmd.exe","release_date":1643564983,"version":"1.8.14"},{"commit_hash":"master","description":"- merge: https://github.com/skywind3000/z.lua/commit/a3d4f5db684ed6dfd3041e73d1d761f5fe944179","release_date":1620204129,"version":"1.8.13"},{"commit_hash":"master","description":"- Improve PowerShell-7 compatibility, init z.lua like this in PowerShell-7:\r\n\r\n      Invoke-Expression (\u0026 { (lua /path/to/z.lua --init powershell) -join \"`n\" })\r\n\r\n- Update docs about powershell and wsl-1.\r\n\r\n- Close https://github.com/skywind3000/z.lua/issues/115 .\r\n","release_date":1613319036,"version":"1.8.12"},{"commit_hash":"master","description":"- windows: fix pushd leaking in cmd.exe","release_date":1609351934,"version":"1.8.11"},{"commit_hash":"master","description":"- improve clink 1.11 completion and compatibility.","release_date":1608795036,"version":"1.8.10"},{"commit_hash":"master","description":"- clink: introduce environment variable `$_ZL_CLINK_PROMPT_PRIORITY ` to control z.lua's register priority in clink.\r\n- powershell: support powershell on linux.\r\n- fish: improve fisher compatibility in `init.fish`.\r\n- zsh: use `command -v` to reduce startup time in `z.lua.plugin.zsh`.\r\n- cmd: expose `--add` in cmd on windows.\r\n- ranger: fixed `-I` problem in `ranger_zlua.py` .\r\n","release_date":1608713146,"version":"1.8.9"},{"commit_hash":"master","description":"- better path name handling with luajit.\r\n- record correct character case in path name on windows (with luajit's ffi module).\r\n- use `lfs` module for path detection if possible (work-around for https://github.com/skywind3000/z.lua/issues/104 in WSL-1).\r\n","release_date":1593441187,"version":"1.8.7"},{"commit_hash":"master","description":"fish shell: set `$_ZL_ECHO` to global scope.","release_date":1581334026,"version":"1.8.4"},{"commit_hash":"master","description":"new: interactive mode in backward jumping: `z -b -i` and `z -b -I`:\r\n\r\n`z -b -i`:\r\n\r\n![图片](https://user-images.githubusercontent.com/3035071/74105226-f07b2000-4b96-11ea-8cc8-9f2c00f61108.png)\r\n\r\n`z -b -I`:\r\n\r\n![图片](https://user-images.githubusercontent.com/3035071/74105206-b27dfc00-4b96-11ea-84f3-bb57ad2856ab.png)\r\n","release_date":1581263459,"version":"1.8.3"},{"commit_hash":"master","description":"New `$_ZL_HYPHEN` option can used to tread hyphen (-) as a normal character, see [here](https://github.com/skywind3000/z.lua/wiki/FAQ#how-to-input-a-hyphen---in-the-keyword-).\r\n\r\nusage:\r\n\r\n    export _ZL_HYPHEN=1\r\n\r\nthen z.lua will stop parsing `-` as a lua regexp reserved word. and match the directories like:\r\n\r\n    my-vue-work\r\n\r\nexactly by \"z my-vue-work\" .\r\n","release_date":1577566901,"version":"v1.7.4"},{"commit_hash":"master","description":"use [lua-filesystem](http://keplerproject.github.io/luafilesystem/) package (if possible) when `$_ZL_USE_LFS` is `1`.","release_date":1567789546,"version":"v1.7.3"},{"commit_hash":"master","description":"Improve bash/zsh compatibility by [@barlik](https://github.com/barlik).","release_date":1564660640,"version":"v1.7.2"},{"commit_hash":"master","description":"Fixed: `$_ZL_DATA` may fail on Linux sometimes and closes: https://github.com/skywind3000/z.lua/pull/68","release_date":1559917199,"version":"v1.7.1"},{"commit_hash":"master","description":"Supports ranger now, see [ranger integration](https://github.com/skywind3000/z.lua/wiki/FAQ#how-to-integrate-zlua-to-ranger-).\r\nFixed: ReplaceFile failed if dst file absent in luajit (Windows), try rename first.","release_date":1552122708,"version":"v1.7.0"},{"commit_hash":"master","description":"optimize with `ffi` (luajit module)","release_date":1551705989,"version":"v1.6.0"},{"commit_hash":"master","description":"fixed: `os.path.isdir` doesn't work for symbol link directories.","release_date":1551500242,"version":"v1.5.11"},{"commit_hash":"master","description":"Prevent writing file racing.","release_date":1551422755,"version":"v1.5.10"},{"commit_hash":"master","description":"'z -b' should not match current directory","release_date":1551108100,"version":"v1.5.9"},{"commit_hash":"master","description":"New option `$_ZL_FZF_HEIGHT` to control `--height` parameter in fzf:\r\n\r\n```bash\r\n# fzf: full screen\r\nexport _ZL_FZF_HEIGHT=0\r\n\r\n# fzf: 30 lines\r\nexport _ZL_FZF_HEIGHT=30\r\n\r\n# fzf: 35% of screen height\r\nexport _ZL_FZF_HEIGHT=\"35%\"\r\n```\r\n","release_date":1550722498,"version":"v1.5.8"},{"commit_hash":"master","description":"rename `$_ZL_FZF_SORT` to `$_ZL_INT_SORT`. it will affect both `-i` and `-I`.","release_date":1550719066,"version":"v1.5.7"},{"commit_hash":"master","description":"New: set `$_ZL_FZF_SORT` to 1 to sort the directories by alphabet in fzf.\r\nUpdate: better handle fzf parameters in bash completion.","release_date":1550676746,"version":"v1.5.6"},{"commit_hash":"master","description":"System environment variable `$_ZL_FZF_FLAG` (default to \"+s -e\") can be used to override fzf parameter. \r\neg: enable fzf sorting by remove the \"+s\" option:\r\n\r\n```bash\r\nexport _ZL_FZF_FLAG=\"-e\"\r\n```\r\n\r\n","release_date":1550636859,"version":"v1.5.5"},{"commit_hash":"master","description":"1. fixed false detection of `os.path.exists` on read-only fs.\r\n2. better compatible with fz.sh.","release_date":1550548228,"version":"v1.5.4"},{"commit_hash":"master","description":"- fixed: system environment variable parsing is flaky.\r\n- new: _ZL_FZF_FLAG for passing additional arguments to fzf.\r\n- change: add a `-e` argument to fzf in interactive selection mode for better matching.\r\n","release_date":1550397359,"version":"v1.5.3"},{"commit_hash":"master","description":"1. Be aware of all arguments in fzf completion.\r\n2. Update doc.","release_date":1550299962,"version":"v1.5.2"},{"commit_hash":"master","description":"1. (Fish Shell): Don't echo $PWD if cd failed.\r\n2. New dir stack by: z -, z -- and z -{num}.\r\n3. (Windows cmd): output a newline after finish\r\n\r\n","release_date":1550204346,"version":"v1.5.1"},{"commit_hash":"master","description":"This is a classic stable release.","release_date":1550156448,"version":"v1.5.0"}],"tags":["autojump","bash","cd","fasd","fish","fishshell","fuzzy","fzf","j","jump","plugin","powershell","shell","z","zsh","zsh-plugin"],"author":"skywind3000","repository":"https://github.com/skywind3000/z.lua","license":"MIT","dependencies":[],"stars":2567,"forks":133,"watchers":2567,"issues":50,"updated":1672825819,"full_description":"# z.lua\r\n\r\nA command line tool which helps you navigate faster by learning your habits :zap:\r\n\r\nAn alternative to [z.sh](https://github.com/rupa/z) with windows and posix shells support and various improvements.\r\n\r\n【[README in Chinese | 中文文档](README.cn.md)】\r\n\r\n\r\n## Description\r\n\r\nz.lua is a faster way to navigate your filesystem. It tracks your most used directories, based on 'frecency'.  After  a  short  learning  phase, z will take you to the most 'frecent' directory that matches ALL of the regexes given on the command line, in order.\r\n\r\nFor example, `z foo bar` would match `/foo/bar` but not `/bar/foo`.\r\n\r\n## Reputation\r\n\r\nFrom people using z.lua:\r\n\r\n- I like this in principal. I’m pretty damn predictable at the command line and far too lazy to make shortcuts\r\n- It feels far more intuitive and it's so incredibly convenient to be able to jump between folders I'm working in without having to traverse an entire tree. The shell used to feel so constraining for me, but tools like this are making me enjoy it so much more. \r\n- I can finally have autojump-like functionality on my Raspberry Pi 1 without waiting 30 seconds every time I open a new shell. Thanks z.lua devs.\r\n- Anyway, z.lua is a promising project. If you only need directory jumping, it may be the best choice.\r\n\r\n\r\n## Features\r\n\r\n- **10x** times faster than **fasd** and **autojump**, **3x** times faster than **z.sh**.\r\n- Gain the ultimate speed with an optional [native module](https://github.com/skywind3000/czmod) written in C.\r\n- Available for **posix shells**: bash, zsh, dash, sh, ash, ksh, busybox and etc.\r\n- Available for Fish Shell, Power Shell and Windows cmd.\r\n- [Enhanced matching algorithm](#enhanced-matching) takes you to where ever you want precisely.\r\n- Allow updating database only if `$PWD` changed with \"$_ZL_ADD_ONCE\" set to 1.\r\n- Interactive selection enables you to choose where to go before cd.\r\n- Integrated with FZF (optional) for interactive selection and completion.\r\n- Quickly go back to a parent directory instead of typing \"cd ../../..\".\r\n- Corresponding experience in different shells and operating systems. \r\n- Compatible with Lua (5.1, 5.2, 5.3+) and luajit.\r\n- Self contained, distributed as a single `z.lua` script, no other dependence.\r\n\r\n\r\n## Examples\r\n\r\n```bash\r\nz foo        # cd to most frecent dir matching foo\r\nz foo bar    # cd to most frecent dir matching foo and bar\r\nz -r foo     # cd to the highest ranked dir matching foo\r\nz -t foo     # cd to most recently accessed dir matching foo\r\nz -l foo     # list matches instead of cd\r\nz -c foo     # restrict matches to subdirs of $PWD\r\nz -e foo     # echo the best match, don't cd\r\nz -i foo     # cd with interactive selection\r\nz -I foo     # cd with interactive selection using fzf\r\nz -b foo     # cd to the parent directory starting with foo\r\nz -b foo bar # replace foo with bar in cwd and cd there\r\n```\r\n\r\n\r\n## Install\r\n\r\n- Bash:\r\n\r\n  put something like this in your `.bashrc`:\r\n\r\n      eval \"$(lua /path/to/z.lua --init bash)\"\r\n\r\n  the default matching algorithm is similar to z.sh to keep compatible, you may like the enhanced matching algorithm for productivity:\r\n\r\n      eval \"$(lua /path/to/z.lua --init bash enhanced once)\"\r\n\r\n  and perhaps this:\r\n\r\n      eval \"$(lua /path/to/z.lua --init bash enhanced once echo)\"\r\n\r\n  if you want `z.lua` print the new directory after cd. \r\n\r\n  For `fzf` tab completion use:\r\n\r\n      eval \"$(lua /path/to/z.lua --init bash enhanced once fzf)\"\r\n  \r\n  **NOTE**: For wsl-1 users, `lua-filesystem` must be installed:\r\n\r\n      sudo apt-get install lua-filesystem\r\n\r\n  To avoid a wsl-1 [defect](https://github.com/microsoft/WSL/issues/5505).\r\n\r\n- Zsh:\r\n\r\n  put something like this in your `.zshrc`:\r\n\r\n      eval \"$(lua /path/to/z.lua --init zsh)\"\r\n\r\n  Options like \"enhanced\" and \"once\" can be used after `--init` too. It can also be initialized from \"skywind3000/z.lua\" with your zsh plugin managers (antigen / oh-my-zsh).\r\n\r\n  **NOTE**: for wsl-1 users, `lua-filesystem` must be installed.\r\n\r\n- Posix Shells:\r\n\r\n  put something like this in your `.profile`:\r\n\r\n      eval \"$(lua /path/to/z.lua --init posix)\"\r\n\r\n  For old shells like ksh (Korn Shell), some features are missing, you can try:\r\n\r\n      eval \"$(lua /path/to/z.lua --init posix legacy)\"\r\n\r\n  To generate old posix compatible script.\r\n\r\n- Fish Shell (version `2.4.0` or above):\r\n\r\n  Create `~/.config/fish/conf.d/z.fish` with following code\r\n\r\n      lua /path/to/z.lua --init fish | source\r\n\r\n  If you'd like `z.lua` to cooperate with fish's own [directory history](https://fishshell.com/docs/3.2/index.html#id34), you can put\r\n\r\n      set -gx _ZL_CD cd\r\n\r\n  into the same file.\r\n\r\n- Power Shell:\r\n\r\n  \u003e ⚠️ **WARNING**: users of [Starship Prompt](https://starship.rs/) should add the following command *after* `starship init`.\r\n  \r\n  put something like this in your `profile.ps1`:\r\n\r\n      Invoke-Expression (\u0026 { (lua /path/to/z.lua --init powershell) -join \"`n\" })\r\n\r\n- Windows cmd (with clink):\r\n\r\n  - Copy z.lua and z.cmd to clink's home directory\r\n  - Add clink's home to `%PATH%` (z.cmd can be called anywhere)\r\n  - Ensure that \"lua\" can be called in `%PATH%`\r\n\r\n- Windows cmder:\r\n\r\n  - Copy z.lua and z.cmd to cmder/vendor\r\n  - Add cmder/vendor to `%PATH%`\r\n  - Ensure that \"lua\" can be called in `%PATH%`\r\n\r\n- Windows WSL-1:\r\n\r\n  Install `lua-filesystem` module before init z.lua:\r\n        \r\n        sudo apt-get install lua-filesystem\r\n\r\n  This module is required due to a wsl-1 [defect](https://github.com/microsoft/WSL/issues/5505).\r\n\r\n\r\n\r\n## Options\r\n\r\n- set `$_ZL_CMD` in .bashrc/.zshrc to change the command (default z).\r\n- set `$_ZL_DATA` in .bashrc/.zshrc to change the datafile (default ~/.zlua).\r\n- set `$_ZL_NO_PROMPT_COMMAND` if you're handling PROMPT_COMMAND yourself.\r\n- set `$_ZL_EXCLUDE_DIRS` to a comma separated list of dirs to exclude.\r\n- set `$_ZL_ADD_ONCE` to '1' to update database only if `$PWD` changed.\r\n- set `$_ZL_MAXAGE` to define a aging threshold (default is 5000).\r\n- set `$_ZL_CD` to specify your own cd command (default is `builtin cd` in Unix shells).\r\n- set `$_ZL_ECHO` to 1 to display new directory name after cd.\r\n- set `$_ZL_MATCH_MODE` to 1 to enable enhanced matching.\r\n- set `$_ZL_NO_CHECK` to 1 to disable path validation, use `z --purge` to clean\r\n- set `$_ZL_HYPHEN` to 1 to treat hyphon (-) as a normal character not a lua regexp keyword.\r\n- set `$_ZL_CLINK_PROMPT_PRIORITY` change clink prompt register priority (default 99).\r\n\r\n## Aging\r\n\r\nThe rank of directories maintained by z.lua undergoes aging based on a simple formula. The rank of each entry is incremented  every  time  it  is accessed.  When the sum of ranks is over 5000 (`$_ZL_MAXAGE`), all ranks are multiplied by 0.9. Entries with a rank lower than 1 are forgotten.\r\n\r\n\r\n## Frecency\r\n\r\nFrecency is a portmanteau of 'recent' and 'frequency'. It is a weighted rank that depends on how often and how recently something occurred. As far as I know, Mozilla came up with the term.\r\n\r\nTo z.lua, a directory that has low ranking but has been accessed recently will quickly  have higher rank than a directory accessed frequently a long time ago. Frecency is determined at runtime.\r\n\r\n\r\n## Default Matching\r\n\r\nBy default, `z.lua` uses default matching algorithm similar to the original `z.sh`. Paths must be match all of the regexes in order.\r\n\r\n- cd to a directory contains foo:\r\n\r\n      z foo\r\n\r\n- use multiple arguments:\r\n\r\n  Assuming the following database:\r\n\r\n      10   /home/user/work/inbox\r\n      30   /home/user/mail/inbox\r\n\r\n  `\"z in\"` would cd into `/home/user/mail/inbox` as the higher weighted entry. However you can pass multiple arguments to z.lua to prefer a different entry. In the above example, `\"z w in\"` would then change directory to `/home/user/work/inbox`.\r\n\r\n- use regexes:\r\n\r\n  ```bash\r\n  z foo$   # cd to a directory ends with foo\r\n  z %d     # cd to a directory that contains a digit\r\n  ```\r\n\r\n  Unlike `z.sh`, `z.lua` uses the [Lua regular expression syntax](https://www.lua.org/pil/20.2.html).\r\n\r\n## Enhanced Matching\r\n\r\nEnhanced matching can be enabled by exporting the environment:\r\n\r\n```bash\r\nexport _ZL_MATCH_MODE=1\r\n```\r\n\r\nOr, append a `enhanced` after `--init xxx`:\r\n\r\n```bash\r\neval \"$(lua /path/to/z.lua --init bash enhanced)\"\r\n```\r\n\r\nFor a given set of queries (the set of command-line arguments passed to z.lua), a path is a match if and only if:\r\n\r\n1. Queries match the path in order (same as default method).\r\n2. The last query matches the last segment of the path.\r\n\r\nIf no match is found, it will fall back to default matching method.\r\n\r\n- match the last segment of the path:\r\n\r\n  Assuming the following database:\r\n\r\n      10   /home/user/workspace\r\n      20   /home/user/workspace/project1\r\n      30   /home/user/workspace/project2\r\n      40   /home/user/workspace/project3\r\n\r\n  If you use `\"z wo\"` in enhanced matching mode, only the `/home/user/workspace` will be matched, because according to rule No.2 it is the only path whose last segment matches `\"wo\"`.\r\n\r\n  Since the last segment of a path is always easier to be recalled, it is sane to give it higher priority. You can also achieve this by typing `\"z space$\"` in both methods, but `\"z wo\"` is easier to type.\r\n\r\n  Tips for rule No.2: \r\n\r\n  - If you want your last query **not only** to match the last segment of the path, append '$' as the last query. eg. `\"z wo $\"`. \r\n  - If you want your last query **not** to match the last segment of the path, append '/' as the last query. eg. `\"z wo /\"`.\r\n \r\n\r\n- cd to the existent path if there is no match:\r\n\r\n  Sometimes if you use:\r\n\r\n      z foo\r\n\r\n  And there is no matching result in the database, but there is an existent directory which can be accessed with the name \"foo\" from current directory, \"`z foo`\" will just work as:\r\n\r\n      cd foo\r\n\r\n  So, in the enhanced matching method, you can always use `z` like `cd` to change directory even if the new directory is untracked (hasn't been accessed).\r\n\r\n- Skip the current directory:\r\n\r\n  When you are calling `z xxx` but the best match is the current directory, z.lua will choose the 2nd best match result for you. Assuming the database:\r\n\r\n      10   /Users/Great_Wall/.rbenv/versions/2.4.1/lib/ruby/gems\r\n      20   /Library/Ruby/Gems/2.0.0/gems\r\n\r\n  When I use `z gems` by default, it will take me to `/Library/Ruby/Gems/2.0.0/gems`, but it's not what I want, so I press up arrow and execute `z gems` again, it will take me to `/Users/Great_Wall/.rbenv/versions/2.4.1/lib/ruby/gems` and this what I want.\r\n\r\n  Of course, I can always use `z env gems` to indicate what I want precisely. Skip the current directory means when you use `z xxx` you always want to change directory instead of stay in the same directory and do nothing if current directory is the best match.\r\n\r\nThe default matching method is designed to be compatible with original z.sh, but the enhanced matching method is much more handy and exclusive to z.lua.\r\n\r\n\r\n## Add Once\r\n\r\nBy default, z.lua will add current directory to database each time before display command prompt (correspond with z.sh). But there is an option to allow z.lua add path only if current working directory changed.\r\n\r\nTo enable this, you can set `$_ZL_ADD_ONCE` to `1` before init z.lua. Or you can initialize z.lua on linux like this:\r\n\r\n````bash\r\neval \"$(lua /path/to/z.lua --init bash once)\"\r\neval \"$(lua /path/to/z.lua --init zsh once)\"\r\nlua /path/to/z.lua --init fish once | source\r\n````\r\n\r\nWith `add once` mode off (default), z.lua will consider the time you spent in the directory (like z.sh). When this mode is on, consider the times you accessed the directory (like autojump), and that could be much faster on slow hardware. \r\n\r\n\r\n## Interactive Selection\r\n\r\nWhen there are multiple matches found, using `z -i` will display a list:\r\n\r\n```bash\r\n$ z -i soft\r\n3:  0.25        /home/data/software\r\n2:  3.75        /home/skywind/tmp/comma/software\r\n1:  21          /home/skywind/software\r\n\u003e {CURSOR}\r\n```\r\n\r\nAnd then you can input the number and choose where to go before actual cd. eg. input 3 to cd to `/home/data/software`. And if you just press ENTER and input nothing, it will just quit and stay where you were.\r\n\r\nNOTE: for fish shell, this feature requires fish 2.7.0 or above.\r\n\r\n\r\n## FZF Supports\r\n\r\nFrom version 1.1.0, a new option `\"-I\"` will allow you to use fzf to select when there are multiple matches. \r\n\r\n![](images/fzf.png)\r\n\r\nWhen we use `\"z -I vim\"`，12 paths contains keyword \"vim\" has been matched and ordered by their frecent value, the higher frecent comes with the higher rank. Then without cd to the highest ranked path, z.lua passes all the candidates to fzf. \r\n\r\nNow you can input some space separated keywords (no order required) or use `CTRL+J`/`CTRL+K` (same as `UP`/`DOWN`) to select where you want to go, or `ESC` / `CTRL`+`D`/`G` to give up. \r\n\r\nOf course, you can always give more keywords to `z` command to match your destination precisely. `\"z -I\"` is similar to `\"z -i\"`, but use fzf. Both `\"-i\"` and `\"-I\"` provide you another way for path navigation.\r\n\r\nUsually, `z -I` can be aliased to `zf` (z + fuzzy finder) for convenience. If there are only one path matched, `z -I` will jump to it directly, fzf will only be invoked for multiple matches. `\"z -I .\"` or `\"zf .\"` can be used to use fzf select from entire database. \r\n\r\nFor more information about this, please visit [wiki - effective with fzf](https://github.com/skywind3000/z.lua/wiki/Effective-with-fzf).\r\n\r\nNOTE: For fish shell, this feature requires fish 2.7.0 or above. You can specify fzf executable in `$_ZL_FZF` environment variable, `\"fzf\"` will be called by default.\r\n\r\n\r\n## Jump Backwards\r\n\r\nNew option `\"-b\"` can quickly go back to a specific parent directory in bash instead of typing \"cd ../../..\" redundantly.\r\n\r\n- **(No argument)**: `cd` into the project root, the project root the nearest parent directory with `.git`/`.hg`/`.svn` in it.\r\n- **(One argument)**: `cd` into the closest parent starting with keyword, if not find, go to the parent containing keyword.\r\n- **(Two arguments)**: replace the first value with the second one (in the current path).\r\n  If simple substitution does not work, falls back to fuzzily replacing path components.\r\n\r\nLet's start by aliasing `z -b` to `zb`:\r\n\r\n```bash\r\n# go all the way up to the project root (in this case, the one that has .git in it)\r\n~/github/lorem/src/public$ zb\r\n  =\u003e cd ~/github/lorem\r\n\r\n# cd into to the first parent directory named g*\r\n~/github/vimium/src/public$ zb g\r\n  =\u003e cd ~/github\r\n\r\n# goto the site directory quickly\r\n~/github/demo/src/org/main/site/utils/file/reader/whatever$ zb si\r\n  =\u003e cd ~/github/demo/src/org/main/site\r\n\r\n# substitute jekyll with ghost\r\n~/github/jekyll/test$ zb jekyll ghost\r\n  =\u003e cd ~/github/ghost/test\r\n\r\n# same as above, but fuzzy\r\n~/github/jekyll/test$ zb jek gh\r\n  =\u003e z ~/github/ gh /test\r\n    =\u003e cd ~/github/ghost/test  # Assuming that's the most frecent match\r\n```\r\n\r\nBackward jumping can also be used with `$_ZL_ECHO` option (echo $PWD after cd), which makes it possible to combine them with other tools without actually changing the working directory (eg. ``ls `zb git` ``). \r\n\r\nEnvironment variable `$_ZL_ROOT_MARKERS` is a comma separated list for project root locating, and can be redefined as:\r\n\r\n```bash\r\nexport _ZL_ROOT_MARKERS=\".git,.svn,.hg,.root,package.json\"\r\n```\r\n\r\nIf you want `zb` jump back to a parent directory contains a `.root` or `package.json` in it.\r\n\r\n**Bonus**: `zb ..` equals to `cd ..`, `zb ...` equals to `cd ../..` and `zb ....` equals to `cd ../../..`, and so on. Finally, `zb ..20` equals to `cd (..)x20`.\r\n\r\n**Bonus**: try `z -b -i` and `z -b -I` and you can alias them to `zbi` and `zbf`.\r\n\r\n## Completion\r\n\r\nFor zsh/fish, completion can be triggered by `z foo\u003ctab\u003e`. and a list of candidates will display in zsh / fish:\r\n\r\n![](images/complete-1.png)\r\n\r\nPress `\u003ctab\u003e` again, you can select your destination in a visualized way.\r\n\r\nBash is not as powerful as zsh/fish, so we introduced fzf-completion for bash, initialize your z.lua and append `fzf` keyword after `--init`:\r\n\r\n```bash\r\neval \"$(lua /path/to/z.lua --init bash enhanced once echo fzf)\"\r\n```\r\n\r\nThen press `\u003ctab\u003e` after `z xxx`:\r\n\r\n![](images/complete-2.png)\r\n\r\nWith the help of fzf, completion in bash is much easier now. \r\n\r\n`z.lua` can cooperate with [fz](https://github.com/changyuheng/fz) for **better completion** result in both bash and zsh, for more information see [FAQ](https://github.com/skywind3000/z.lua/wiki/FAQ#fzsh-for-better-completion).\r\n\r\nNOTE: To enable this, command `fzf` must be found in `$PATH` before initialization.\r\n\r\n\r\n## Most Recently Accessed Path\r\n\r\n`z.lua` provides a fast way to visit MRU directories without typing any keyword. That is `dirstack`, which records recently visited paths and can be manipulated by `z -`, `z --` and `z -{num}`:\r\n\r\n```bash\r\n# display current dir stack\r\n$ z --    \r\n 0  /home/skywind/work/match/memory-match\r\n 1  /home/skywind/.local/etc\r\n 2  /home/skywind/software/vifm-0.9.1\r\n 3  /home/skywind/work\r\n 4  /home/skywind/work/match\r\n\r\n# cd to the 2nd directory in the stack\r\n$ z -2\r\n  =\u003e cd /home/skywind/software/vifm-0.9.1\r\n\r\n# popup stacktop (cd to previous directory), same as \"z -0\"\r\n$ z -\r\n  =\u003e cd -\r\n```\r\n\r\nThe `dirstack` is calculated from z.lua's database, and has no dependency on shells or systems. You will not lost records after re-login, and history can be shared across shells and sessions.\r\n\r\nThere is another way to access MRU directories interactively by utilizing parameter `-I` (fzf) and `-t` (sort by time):\r\n\r\n```bash\r\nalias zh='z -I -t .'\r\n```\r\n\r\nThe new alias `zh` (jump to history) is very easy to input:\r\n\r\n![](images/mru.png)\r\n\r\nThe first column indicates how many seconds ago you have visited, and the second column is the path name. With `zh`, you can type some character to use string matching in fzf, or use `\u003cUp\u003e`/`\u003cDown\u003e` (as well as `CTRL+j/k`) to move the selector (red `\u003e`) up and down. \r\n\r\nAt last, press `\u003center\u003e` to accept or `\u003cESC\u003e` to give up. \r\n\r\nRemember to enable the [enhanced matching](#enhanced-matching) algorithm, the current working directory can be skipped with it.\r\n\r\n\r\n## Ranger integration\r\nTo add a `:z` command to the [`ranger` file manager], copy the `ranger_zlua.py` file to `~/.config/ranger/plugins/`.\r\nYou can then use `:z foo`, `:z -b foo`, etc. from ranger. Use `:z -h` for help.\r\n\r\n[`ranger` file manager]: https://github.com/ranger/ranger\r\n\r\nTo define additional commands (`:zb` for example) in ranger, you can put `alias zb z -b` into `~/.config/ranger/rc.conf`.\r\n\r\n\r\n## Tips\r\n\r\nRecommended aliases you may find useful:\r\n\r\n```bash\r\nalias zz='z -c'      # restrict matches to subdirs of $PWD\r\nalias zi='z -i'      # cd with interactive selection\r\nalias zf='z -I'      # use fzf to select in multiple matches\r\nalias zb='z -b'      # quickly cd to the parent directory\r\n```\r\n\r\nImport data from z.sh：\r\n\r\n\r\n```bash\r\ncat ~/.z \u003e\u003e ~/.zlua\r\n```\r\n\r\nImport data from autojump：\r\n\r\n```bash\r\nFN=\"$HOME/.local/share/autojump/autojump.txt\"\r\nawk -F '\\t' '{print $2 \"|\" $1 \"|\" 0}' $FN \u003e\u003e ~/.zlua\r\n```\r\n\r\nDon't forget to read the [Frequently Asked Questions](https://github.com/skywind3000/z.lua/wiki/FAQ).\r\n\r\n\r\n## Benchmark\r\n\r\nThe slowest part is adding path to history data file. It will run every time when you press enter (installed in $PROMPT_COMMAND). So I profile it on my NAS:\r\n\r\n```bash\r\n$ time autojump --add /tmp\r\nreal    0m0.352s\r\nuser    0m0.077s\r\nsys     0m0.185s\r\n\r\n$ time fasd -A /tmp\r\nreal    0m0.618s\r\nuser    0m0.076s\r\nsys     0m0.242s\r\n\r\n$ time _z --add /tmp\r\nreal    0m0.194s\r\nuser    0m0.046s\r\nsys     0m0.154s\r\n\r\n$ time _zlua --add /tmp\r\nreal    0m0.052s\r\nuser    0m0.015s\r\nsys     0m0.030s\r\n```\r\n\r\nAs you see, z.lua is the fastest one and requires less resource.\r\n\r\n## Native Module\r\n\r\nz.lua is fast enough for most case, the path tracking action will be triggered each time when you change your current directory.\r\n\r\nSo I still recommend the pure lua script for portability and flexibility, but for someone who really care about `10ms` or `1ms` things, this module can help them to gain the ultimate speed.\r\n\r\n- [czmod](https://github.com/skywind3000/czmod): native module to boost `z.lua`.\r\n\r\nAverage performance:\r\n\r\n| Name | czmod |  z.lua |\r\n|-|-|-|\r\n| **Update Time** | 1.6ms | 13.2ms |\r\n| **Query Time** | 1.5ms | 9.8ms |\r\n\r\n\r\n\r\n## History\r\n\r\n- 1.8.7 (2020-06-29): use lfs or luajit's cffi if possible.\r\n- 1.8.4 (2020-02-10): fish shell: set `$_ZL_ECHO` to global scope.\r\n- 1.8.3 (2020-02-09): new: `z -b -i` and `z -b -I` to jump backwards in interactive mode.\r\n- 1.7.4 (2019-12-29): new: `$_ZL_HYPHEN` to treat hyphen as a normal character, see [here](https://github.com/skywind3000/z.lua/wiki/FAQ#how-to-input-a-hyphen---in-the-keyword-).\r\n- 1.7.3 (2019-09-07): use [lua-filesystem](http://keplerproject.github.io/luafilesystem/) package if possible when `$_ZL_USE_LFS` is `1`.\r\n- 1.7.2 (2019-08-01): Improve bash/zsh shell compatibility by [@barlik](https://github.com/barlik).\r\n- 1.7.1 (2019-06-07): Fixed: `$_ZL_DATA` failure on Linux sometimes.\r\n- 1.7.0 (2019-03-09): Support [ranger](https://github.com/skywind3000/z.lua/wiki/FAQ#how-to-integrate-zlua-to-ranger-), fix ReplaceFile issue in luajit (windows).\r\n- 1.6.0 (2019-03-04): optimize with ffi module (luajit builtin module).\r\n- 1.5.11 (2019-03-02): fixed: os.path.isdir doesn't work for symbol link folders.\r\n- 1.5.10 (2019-03-01): Prevent writing file racing.\r\n- 1.5.9 (2019-02-25): `z -b` should not match current directory (close #56).\r\n- 1.5.8 (2019-02-21): new `$_ZL_FZF_HEIGHT` to control `--height` parameter in fzf.\r\n- 1.5.7 (2019-02-21): rename `$_ZL_FZF_SORT` to `$_ZL_INT_SORT` it will affect both `-i` and `-I`.\r\n- 1.5.6 (2019-02-20): set `$_ZL_FZF_SORT` to 1 to sort directories by alphabet in fzf.\r\n- 1.5.5 (2019-02-20): `$_ZL_FZF_FLAG` can be used to override fzf flags, default to \"+s -e\".\r\n- 1.5.4 (2019-02-19): fixed: file/path existence detection fails on read-only fs (closed [#49](https://github.com/skywind3000/z.lua/issues/49) by [@contrun](https://github.com/contrun)).\r\n- 1.5.3 (2019-02-17): new `$_ZL_FZF_FLAG` for passing additional flags to fzf, add `-e` argument to fzf.\r\n- 1.5.2 (2019-02-16): be aware of all arguments in fzf completion.\r\n- 1.5.1 (2019-02-15): new: simulated dir stack by `z -`, `z --` and `z -{num}`.\r\n- 1.5.0 (2019-02-14): fixed minor issues in backward jumping.\r\n- 1.4.7 (2019-02-13): Don't use regex in backward jumping (use plain text instead).\r\n- 1.4.6 (2019-02-12): change: `_ZL_EXCLUDE_DIRS` to a comma separated list of dirs to exclude.\r\n- 1.4.5 (2019-02-10): improve bash fzf completion and posix compatibility.\r\n- 1.4.4 (2019-02-10): supports legacy posix shells like ksh, init with `z.lua --init posix legacy`.\r\n- 1.4.3 (2019-02-08): fixed minor issues.\r\n- 1.4.2 (2019-02-06): you can disabled path validation by `$_ZL_NO_CHECK`, and use `z --purge` to clear bad paths manually.\r\n- 1.4.1 (2019-02-06): fzf tab-completion in bash ([@BarbUk](https://github.com/BarbUk)), fixed hang in fish shell (close [#29](https://github.com/skywind3000/z.lua/issues/29)).\r\n- 1.4.0 (2019-02-04): Ported to Power Shell ([@manhong2112](https://github.com/manhong2112))\r\n- 1.3.0 (2019-02-04): Backward jumping, prevent \"cd ../../..\" repeatly.\r\n- 1.2.0 (2019-02-03): Upgrade string lib and path lib.\r\n- 1.1.0 (2019-02-02): New option '-I' to use fzf to select from multiple matches.\r\n- 1.0.0 (2019-02-01): Fixed minor issues and make it stable.\r\n- 0.5.0 (2019-01-21): Ported to Fish Shell ([@TeddyDD](https://github.com/TeddyDD)).\r\n- 0.4.1 (2019-01-20): Don't return failed exit code when $_ZL_ECHO is unbind (Mario Rodas).\r\n- 0.4.0 (2019-01-17): new enhanced matching algorithm，can be enabled by appending `enhanced` keyword after `--init`.\r\n- 0.3.0 (2018-12-26): new option `-i` to enable interactive selection.\r\n- 0.2.0 (2018-11-25): new option `$_ZL_ADD_ONCE` to enable updating datafile only if `$PWD` changed.\r\n- 0.1.0 (2018-04-30): supports windows cmd, cmder and conemu.\r\n- 0.0.0 (2018-03-21): initial commit, compatible with original z.sh.\r\n\r\n## Help\r\n\r\nThis project needs help for the tasks below:\r\n\r\n- [ ] Support csh/tcsh.\r\n- [ ] Completion: Actually I got little knowledge in completion, and need help to improve it.\r\n- [ ] Completion: Implement completion for Power Shell.\r\n- [ ] Completion: Implement completion for different arguments.\r\n- [ ] Packaging: make it possible to be installed easily in different systems or popular plugin managers.\r\n\r\n\r\n## Thanks\r\n\r\n- Thanks to [@rupa](https://github.com/rupa) for inspiring me to start this project.\r\n- Thanks to [@vigneshwaranr](https://github.com/vigneshwaranr) and [@shyiko](https://github.com/shyiko) for inspiring me the backward jumping.\r\n- Thanks to [@TeddyDD](https://github.com/TeddyDD) for Fish Shell porting.\r\n- Thanks to [@manhong2112](https://github.com/manhong2112) for Power Shell porting.\r\n- Thanks to [@BarbUk](https://github.com/BarbUk) for fzf completion in Bash.\r\n- Thanks to [@barlik](https://github.com/barlik) for many improvements.\r\n\r\nAnd many others.\r\n\r\n\r\n\r\n## License\r\n\r\nLicensed under MIT license.\r\n\r\n","repository_updated":0},"zypper":{"name":"zypper","description":"zypper plugin for oh-my-fish","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"somebody1234","repository":"https://github.com/somebody1234/plugin-zypper","license":"MIT","dependencies":[],"stars":2,"forks":1,"watchers":2,"issues":3,"updated":1587397208,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### zypper\n\u003e A zypper aliases plugin for [Oh My Fish][omf-link] based on the\n[Oh My Zsh SUSE Plugin][omz-suse-plugin].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install https://github.com/somebody1234/plugin-zypper\n```\n\n\n## Usage\n\n| Abbreviation     | Command                       |\n| ---------------- | ----------------------------- |\n| z                | `sudo zypper`                 |\n| zh               | `sudo zypper -h`              |\n| zhse             | `sudo zypper -h se`           |\n| zlicenses        | `sudo zypper licenses`        |\n| zps              | `sudo zypper ps`              |\n| zshell           | `sudo zypper shell`           |\n| zsource-download | `sudo zypper source-download` |\n| ztos             | `sudo zypper tos`             |\n| zvcmp            | `sudo zypper vcmp`            |\n| zin              | `sudo zypper in`              |\n| zinr             | `sudo zypper inr`             |\n| zrm              | `sudo zypper rm`              |\n| zsi              | `sudo zypper si`              |\n| zve              | `sudo zypper ve`              |\n| zdup             | `sudo zypper dup`             |\n| zlp              | `sudo zypper lp`              |\n| zlu              | `sudo zypper lu`              |\n| zpchk            | `sudo zypper pchk`            |\n| zup              | `sudo zypper up`              |\n| zpatch           | `sudo zypper patch`           |\n| zif              | `sudo zypper if`              |\n| zpa              | `sudo zypper pa`              |\n| zpatch-info      | `sudo zypper patch-info`      |\n| zpattern-info    | `sudo zypper pattern-info`    |\n| zproduct-info    | `sudo zypper product-info`    |\n| zpch             | `sudo zypper pch`             |\n| zpd              | `sudo zypper pd`              |\n| zpt              | `sudo zypper pt`              |\n| zse              | `sudo zypper se`              |\n| zwp              | `sudo zypper wp`              |\n| zar              | `sudo zypper ar`              |\n| zcl              | `sudo zypper clean`           |\n| zlr              | `sudo zypper lr`              |\n| zmr              | `sudo zypper mr`              |\n| znr              | `sudo zypper nr`              |\n| zref             | `sudo zypper ref`             |\n| zrr              | `sudo zypper rr`              |\n| zas              | `sudo zypper as`              |\n| zms              | `sudo zypper ms`              |\n| zrefs            | `sudo zypper refs`            |\n| zrs              | `sudo zypper rs`              |\n| zls              | `sudo zypper ls`              |\n| zal              | `sudo zypper al`              |\n| zcl              | `sudo zypper cl`              |\n| zll              | `sudo zypper ll`              |\n| zrl              | `sudo zypper rl`              |\n\n\n# License\n\n[MIT][mit] © [E-Hern Lee][author] et [al][contributors]\n\n\n[mit]:             http://opensource.org/licenses/MIT\n[author]:          http://github.com/somebody1234\n[contributors]:    https://github.com/somebody1234/plugin-zypper/graphs/contributors\n[omf-link]:        https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:   https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[omz-suse-plugin]: https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins#suse\n","repository_updated":0}},"themes":{"PastFish":{"name":"PastFish","description":"My fish shell theme","image":"http://i.imgur.com/YVM1Xo2.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"pastleo","repository":"https://github.com/pastleo/theme-PastFish","license":"MIT","dependencies":[],"stars":3,"forks":2,"watchers":3,"issues":0,"updated":1628561128,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\u003e pastfish theme for [Oh My Fish][omf-link].\n\n## Install\n\n\n```fish\n$ omf u pastfish\n```\n\n## Features\n\n* Random greeting message\n* Command prompts colored based on time (morning is blue, afternoon is green, midnight is red ...)\n* The `\u003e` at the end of each prompt will turn yellow if the git repo is dirty, red if current location is not writable\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"http://i.imgur.com/YVM1Xo2.png\"\u003e\n\u003c/p\u003e\n\n# License\n\n[MIT][mit] © [chgu82837][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/chgu82837\n[contributors]:   https://github.com/chgu82837/pastfish/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/chgu82837/pastfish.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/chgu82837/pastfish\n","repository_updated":0},"agnoster":{"name":"agnoster","description":"","image":"https://f.cloud.github.com/assets/1765209/255379/452c668e-8c0b-11e2-8a8e-d1d13e57d15f.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-agnoster","license":"MIT","dependencies":[],"stars":77,"forks":55,"watchers":77,"issues":5,"updated":1667653951,"full_description":"## agnoster\n\nA fish theme optimized for people who use:\n\n* Solarized\n* Git\n* Mercurial (requires 'hg prompt')\n* SVN\n* Unicode-compatible fonts and terminals (Use a Powerline patched font, e.g., from here: https://github.com/powerline/fonts)\n* Fish Vi-mode\n\nFor Mac users, I highly recommend iTerm 2 + Solarized Dark\n\n![agnoster theme](https://f.cloud.github.com/assets/1765209/255379/452c668e-8c0b-11e2-8a8e-d1d13e57d15f.png)\n\n\n#### Characteristics\n\n* If the previous command failed (✘)\n- If private mode is enabled (🔒)\n* User @ Hostname (if user is not DEFAULT_USER, which can be set in your profile)\n* Git/HG status\n* Subversion status enabled by adding `set -g theme_svn_prompt_enabled yes` to your `config.fish`.\n* Branch () or detached head (➦)\n* Current branch / SHA1 in detached head state\n* Dirty working directory (±, color change)\n  * By default, git repos will show as dirty if there are untracked files. This can be changed by adding `set -g fish_git_prompt_untracked_files no` to your `config.fish`. This value is passed into `git status --untracked-files`, so any value git supports is valid for this command\n* Current working directory\n* Elevated (root) privileges (⚡)\n* Current virtual environment (Python virtualenv and Nix Shell)\nYou will probably want to disable the default virtualenv prompt. Add to your [`init.fish`](https://github.com/oh-my-fish/oh-my-fish#dotfiles):\n`set -gx VIRTUAL_ENV_DISABLE_PROMPT 1`\n* Indicate vi mode.\n* Source control blacklist. To disable source control prompts in certain directories, you can add the following to your `init.fish` or `config.fish`: `set -g scm_prompt_blacklist \"/path/to/blacklist\"`.\n\nPorted from https://gist.github.com/agnoster/3712874.\n","repository_updated":0},"aight":{"name":"aight","description":"A theme for fish.","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"abingham","repository":"https://github.com/abingham/aight-fish-theme","license":"MIT","dependencies":[],"stars":1,"forks":2,"watchers":1,"issues":0,"updated":1651513689,"full_description":"# Aight\n\nA theme for fish that puts most stuff on the right.\n\n## Installation\n\n```fish\nomf update\nomf install aight\n```\n\n## Features\n\n* Stuff goes on the right, out of your way.\n\n## Contributing\n\nJust fork and make PRs.\n\n# License\n\n[MIT](https://opensource.org/licenses/MIT) © Austin Bingham 2017\n","repository_updated":0},"anchor":{"name":"anchor","description":"⚓ An elegant and minimalist theme for the Fish Shell","image":"https://raw.githubusercontent.com/n1c00o/fish-anchor/master/.github/example.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"n1c00o","repository":"https://github.com/n1c00o/fish-anchor","license":"MIT","dependencies":[],"stars":2,"forks":0,"watchers":2,"issues":0,"updated":1652089522,"full_description":"# fish-anchor\n\nAn elegant and minimalist theme for the [Fish Shell](https://fishshell.com).\n\n## Features\n\n- Displays the directory.\n- Support for `git` *(branch name and repository status)*.\n- Shows the name of a Docker container if one.\n- Displays information of an SSH connection.\n\n### Git\n\nThe little symbol displayed next to the branch name has a meaning:\n\n| Symbol | Meaning |\n|---|---|\n| ⥄ | Branch diverged |\n| ↑ | Commits to push |\n| ↓ | Changes to pull |\n| ⨯ | Not staged changes |\n| ◦ | Branch up-to-date |\n|  | Nothing |\n\n## Screenshot\n\n![Screenshot of the theme!](.github/example.png)\n\n- *White:* Current working directory.\n- *Magenta:* Repository branch name with repository status.\n- *Cyan:* Docker container's name.\n- *Yellow:* Username and hostname of an SSH connection.\n\n## Installation\n\n### Requirements\n\nYou need [Fish Shell](https://fishshell.com) and [Oh My Fish!](https://github.com/oh-my-fish/oh-my-fish/).\n\n### Installing\n\nUsing **Oh-My-Fish**:\n\n`omf install anchor`,\n\n`omf theme anchor`.\n\n## License\n\nThe theme is licensed under the MIT License,\nplease read the [LICENSE](LICENSE) file to get more information.\n","repository_updated":0},"ays":{"name":"ays","description":"Theme imported from oh-my-zsh ys-theme","image":"https://raw.githubusercontent.com/aollio/ays-fish-theme/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","fish-theme"],"author":"yeseni-today","repository":"https://github.com/yeseni-today/ays-fish-theme","license":"MIT","dependencies":[],"stars":3,"forks":5,"watchers":3,"issues":1,"updated":1654223359,"full_description":"### Ays\n\nTheme imported from oh-my-zsh [ys-theme](http://blog.ysmood.org/my-ys-terminal-theme/)\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n\n\u003cbr/\u003e\n\n#### Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/aollio/ays-fish-theme/master/screenshot.png\"\u003e\n\u003c/p\u003e\n\n\n#### Install\n\n##### [Oh-My-Fish]\n\n```fish\nomf install ays\n```\n\n[Oh-My-Fish]: https://github.com/oh-my-fish/oh-my-fish\n","repository_updated":0},"batman":{"name":"batman","description":"Batman theme for Oh My Fish","image":"https://cloud.githubusercontent.com/assets/8317250/7788702/8ae84014-0281-11e5-9082-f528002e45ed.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-batman","license":"MIT","dependencies":[],"stars":18,"forks":15,"watchers":18,"issues":5,"updated":1668088791,"full_description":"\u003cimg src=\"https://dl.dropboxusercontent.com/u/56336/omf/omf-logo-optimised.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Batman\n\u003e A [Oh My Fish][omf-link] theme inspired by Batman.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Features\n\n_From left to right:_\n\n+ `$HOME` directory abbreviated to `^^`\n+ Path to current working directory is abbreviated.\n+ Arrow symbol `\u003e\u003e\u003e` becomes red if last `$status` was `!= 0`\n+ Display exit status for non zero codes (Not shown in the picture)\n+ `^` character denotes the current repository has [_stashed_](https://git-scm.com/book/no-nb/v1/Git-Tools-Stashing) changes.\n+ `*` character denotes the current repository is dirty.\n+ Display current branch.\n+ Display number of commits in relation to the current branch.\n+ Display current time.\n+ _Batman_ inspired colors.\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://cloud.githubusercontent.com/assets/8317250/7788702/8ae84014-0281-11e5-9082-f528002e45ed.png\"\u003e\n\u003c/p\u003e\n\n# License\n\n[MIT][mit] © [Jorge Bucaran][author] et [al][contributors]\n\n\u003e __Disclaimer:__ This work is not intended to infringe on any rights by and of the companies and/or individuals involved in the production of any series mentioned here. I don't own Batman.\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://about.bucaran.me\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[contributors]:   https://github.com/oh-my-fish/oh-my-fish/graphs/contributors\n","repository_updated":0},"beloglazov":{"name":"beloglazov","description":"","image":"https://raw.github.com/beloglazov/oh-my-fish/master/themes/beloglazov/beloglazov-fish-theme.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-beloglazov","license":"MIT","dependencies":[],"stars":4,"forks":5,"watchers":4,"issues":3,"updated":1641904010,"full_description":"##  beloglazov\n\nA theme based on the default robbyrussell theme. This theme adds time, the\nnumber of non-pushed commits, and whether the previous command has failed.\n\n![beloglazov-fish-theme](https://raw.github.com/beloglazov/oh-my-fish/master/themes/beloglazov/beloglazov-fish-theme.png)\n\n\n#### Characteristics\n\n* Displays git information in the command prompt when available\n* Displays the number of non-pushed git commits\n* Displays the current time\n* Displays ✘ if the previous command failed\n","repository_updated":0},"bira":{"name":"bira","description":"","image":"https://cloud.githubusercontent.com/assets/1214238/5441541/8bd494dc-8491-11e4-9dbe-256b7e558eac.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-bira","license":"MIT","dependencies":[],"stars":9,"forks":18,"watchers":9,"issues":5,"updated":1666661406,"full_description":"## bira\n\nTheme imported from Oh my ZSH: https://github.com/robbyrussell/oh-my-zsh/blob/master/themes/bira.zsh-theme\nContains traces of nuts and code from other Oh my fish themes.\n\nDisplay username, hostname, current path, ruby version and git status. Display the latest error status in the right prompt.\n\n![bira theme](https://cloud.githubusercontent.com/assets/1214238/5441541/8bd494dc-8491-11e4-9dbe-256b7e558eac.png)\n\nTODO:\n - display Python version\n","repository_updated":0},"bobthefish":{"name":"bobthefish","description":"A Powerline-style, Git-aware fish theme optimized for awesome.","image":"https://cloud.githubusercontent.com/assets/53660/18028510/f16f6b2c-6c35-11e6-8eb9-9f23ea3cce2e.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-bobthefish","license":"MIT","dependencies":[],"stars":1329,"forks":208,"watchers":1329,"issues":75,"updated":1672735488,"full_description":"# bobthefish\n\n`bobthefish` is a Powerline-style, Git-aware [fish][btf-fish] theme optimized for awesome.\n\n[![Oh My Fish](https://img.shields.io/badge/Framework-Oh_My_Fish-blue.svg?style=flat)](https://github.com/oh-my-fish/oh-my-fish) [![MIT License](https://img.shields.io/github/license/oh-my-fish/theme-bobthefish.svg?style=flat)](/LICENSE.md)\n\n![bobthefish][btf-screencast]\n\n\n### Installation\n\nBe sure to have Oh My Fish installed. Then just:\n\n    omf install bobthefish\n\nYou will need a [Powerline-patched font][btf-patching] for this to work, unless you enable the compatibility fallback option:\n\n    set -g theme_powerline_fonts no\n\n[I recommend picking one of these][btf-fonts]. For more advanced awesome, install a [nerd fonts patched font][btf-nerd-fonts], and enable nerd fonts support:\n\n    set -g theme_nerd_fonts yes\n\nThis theme is based loosely on [agnoster][btf-agnoster].\n\n\n### Features\n\n * A helpful, but not too distracting, greeting.\n * A subtle timestamp hanging out off to the right.\n * Powerline-style visual hotness.\n * More colors than you know what to do with.\n * An abbreviated path which doesn't abbreviate the name of the current project.\n * All the things you need to know about Git in a glance.\n * Visual indication that you can't write to the current directory.\n\n\n### The Prompt\n\n * Status flags:\n     * Previous command failed (**`!`**)\n     * Private mode (**🔒** or **`⦸`**)\n     * You currently have superpowers (**`$`**)\n     * Background jobs (**`%`**)\n * Current vi mode\n * `User@Host` (unless you're the default user)\n * Current RVM, rbenv or chruby (Ruby) version\n * Current virtualenv (Python) version\n     * _If you use virtualenv, you will probably need to disable the default virtualenv prompt, since it doesn't play nice with fish: `set -x VIRTUAL_ENV_DISABLE_PROMPT 1`_\n * Current NVM/FNM version (Nodejs) (inactive by default; see configurations in the next paragraph)\n * Abbreviated parent directory\n * Current directory, or Git or Mercurial project name\n * Current project's repo branch (\u003cimg width=\"16\" alt=\"branch-glyph\" src=\"https://cloud.githubusercontent.com/assets/53660/8768360/53ee9b58-2e32-11e5-9977-cee0063936fa.png\"\u003e master) or detached head (`➦` d0dfd9b)\n * Git or Mercurial status, via colors and flags:\n     * Dirty working directory (**`*`**)\n     * Untracked files (**`…`**)\n     * Staged changes (**`~`**)\n     * Stashed changes (**`$`**)\n     * Unpulled commits (**`-`**)\n     * Unpushed commits (**`+`**)\n     * Unpulled _and_ unpushed commits (**`±`**)\n     * _Note that not all of these have been implemented for hg yet :)_\n * Abbreviated project-relative path\n\n\n### Configuration\n\nYou can override some of the following default options in your `config.fish`:\n\n```fish\nset -g theme_display_git no\nset -g theme_display_git_dirty no\nset -g theme_display_git_untracked no\nset -g theme_display_git_ahead_verbose yes\nset -g theme_display_git_dirty_verbose yes\nset -g theme_display_git_stashed_verbose yes\nset -g theme_display_git_default_branch yes\nset -g theme_git_default_branches master main\nset -g theme_git_worktree_support yes\nset -g theme_use_abbreviated_branch_name yes\nset -g theme_display_vagrant yes\nset -g theme_display_docker_machine no\nset -g theme_display_k8s_context yes\nset -g theme_display_hg yes\nset -g theme_display_virtualenv no\nset -g theme_display_nix no\nset -g theme_display_ruby no\nset -g theme_display_node yes\nset -g theme_display_user ssh\nset -g theme_display_hostname ssh\nset -g theme_display_vi no\nset -g theme_display_date no\nset -g theme_display_cmd_duration yes\nset -g theme_title_display_process yes\nset -g theme_title_display_path no\nset -g theme_title_display_user yes\nset -g theme_title_use_abbreviated_path no\nset -g theme_date_format \"+%a %H:%M\"\nset -g theme_date_timezone America/Los_Angeles\nset -g theme_avoid_ambiguous_glyphs yes\nset -g theme_powerline_fonts no\nset -g theme_nerd_fonts yes\nset -g theme_show_exit_status yes\nset -g theme_display_jobs_verbose yes\nset -g default_user your_normal_user\nset -g theme_color_scheme dark\nset -g fish_prompt_pwd_dir_length 0\nset -g theme_project_dir_length 1\nset -g theme_newline_cursor yes\nset -g theme_newline_prompt '$ '\n```\n**Git options**\n\n- `theme_display_git_default_branch`. By default theme will hide/collapse the branch name in your prompt when you are using a Git _default branch_ i.e. historically `master` and often `main` now. Set to `yes` to stop these branches from being hidden/collapsed.\n- `theme_git_default_branches`. The big cloud repos (GitHub, Bitbucket, GitLab et al.) are moving away from using `master` as the default branch name, and allow you to choose your own. As of version **2.28**, Git also supports custom default branch names via the `init.defaultBranch` config option. If our defaults of `master main` don't suit you, you can add/remove names in thist list i.e. `main trunk`. This ensures correct hiding/collapsing behaviour with custom default branch names (unless option above is activated).\n\n**Title options**\n\n- `theme_title_display_process`. By default theme doesn't show current process name in terminal title. If you want to show it, just set to `yes`.\n- `theme_title_display_path`. Use `no` to hide current working directory from title.\n- `theme_title_display_user`. Set to `yes` to show the current user in the tab title (unless you're the default user).\n- `theme_title_use_abbreviated_path`. Default is `yes`. This means your home directory will be displayed as `~` and `/usr/local` as `/u/local`. Set it to `no` if you prefer full paths in title.\n\n**Prompt options**\n\n- `theme_display_ruby`. Use `no` to completely hide all information about Ruby version. By default Ruby version displayed if there is the difference from default settings.\n- `theme_display_node`. If set to `always`, will display current NPM, NVM or FNM node version. If set to `yes`, will display the version if an `.nvmrc`, `.node-version` or `package.json` file is found in the parent directories.\n- `theme_display_vagrant`. This feature is disabled by default, use `yes` to display Vagrant status in your prompt. Please note that only the VirtualBox and VMWare providers are supported.\n- `theme_display_vi`. By default the vi mode indicator will be shown if vi or hybrid key bindings are enabled. Use `no` to hide the indicator, or `yes` to show the indicator.\n- `theme_display_k8s_context`. This feature is disabled by default. Use `yes` to show the current kubernetes context (`\u003e kubectl config current-context`).\n- `theme_display_k8s_namespace`. This feature is disabled by default. Use `yes` to show the current kubernetes namespace.\n- `theme_display_aws_vault_profile`. This feature is disabled by default. Use `yes` to show the currently executing [AWS Vault](https://github.com/99designs/aws-vault) profile.\n- `theme_display_user`. If set to `yes`, display username always, if set to `ssh`, only when an SSH-Session is detected, if set to no, never.\n- `theme_display_hostname`. Same behaviour as `theme_display_user`.\n- `theme_display_sudo_user`. If set to `yes`, displays the sudo-username in a root shell. For example, when calling `sudo -s` and having this option set to `yes`, the username of the user, who called `sudo -s`, will be displayed.\n- `theme_show_exit_status`. Set this option to `yes` to have the prompt show the last exit code if it was non_zero instead of just the exclamation mark.\n- `theme_display_jobs_verbose`. If set to `yes` this option displays the number of currently running background jobs next to the percent sign.\n- `theme_git_worktree_support`. If you do any git worktree shenanigans, setting this to `yes` will fix incorrect project-relative path display. If you don't do any git worktree shenanigans, leave it disabled. It's faster this way :)\n- `theme_use_abbreviated_branch_name`. Set to `yes` to truncate git branch names in the prompt.\n- `fish_prompt_pwd_dir_length`. bobthefish respects the Fish `$fish_prompt_pwd_dir_length` setting to abbreviate the prompt path. Set to `0` to show the full path, `1` (default) to show only the first character of each parent directory name, or any other number to show up to that many characters.\n- `theme_project_dir_length`. The same as `$fish_prompt_pwd_dir_length`, but for the path relative to the current project root. Defaults to `0`; set to any other number to show an abbreviated path.\n- `theme_newline_cursor`. Use `yes` to have cursor start on a new line. By default the prompt is only one line. When working with long directories it may be preferrend to have cursor on the next line. Setting this to `clean` instead of `yes` suppresses the caret on the new line.\n- `theme_newline_prompt`. Use a custom prompt with newline cursor. By default this is the chevron right glyph or `\u003e` when powerline fonts are disabled.\n\n**Color scheme options**\n\n| ![dark][btf-dark]           | ![light][btf-light]                     |\n| --------------------------- | --------------------------------------- |\n| ![solarized][btf-solarized] | ![solarized-light][btf-solarized-light] |\n| ![base16][btf-base16]       | ![base16-light][btf-base16-light]       |\n| ![zenburn][btf-zenburn]     | ![terminal-dark][btf-terminal-dark]     |\n| ![nord][btf-nord]           |                                         |\n\nYou can use the function `bobthefish_display_colors` to preview the prompts in\nany color scheme.\n\nSet `theme_color_scheme` in a terminal session or in your fish startup files to\none of the following options to change the prompt colors.\n\n- `dark`. The default bobthefish theme.\n- `light`. A lighter version of the default theme.\n- `solarized` (or `solarized-dark`), `solarized-light`. Dark and light variants\n  of Solarized.\n- `base16` (or `base16-dark`), `base16-light`. Dark and light variants of the\n  default Base16 theme.\n- `zenburn`. An adaptation of Zenburn.\n- `gruvbox`. An adaptation of gruvbox.\n- `dracula`. An adaptation of dracula.\n- `nord`. An adaptation of nord.\n\nSome of these may not look right if your terminal does not support 24 bit color,\nin which case you can try one of the `terminal` schemes (below). However, if\nyou're using Solarized, Base16 (default), or Zenburn in your terminal and the\nterminal *does* support 24 bit color, the built in schemes will look nicer.\n\nThere are several scheme that use whichever colors you currently have loaded\ninto your terminal. The advantage of using the schemes that fall through to the\nterminal colors is that they automatically adapt to something acceptable\nwhenever you change the 16 colors in your terminal profile.\n- `terminal` (or `terminal-dark` or `terminal-dark-black`)\n- `terminal-dark-white`. Same as `terminal`, but use white as the foreground\n  color on top of colored segments (in case your colors are very dark).\n- `terminal-light` (or `terminal-light-white`)\n- `terminal-light-black`. Same as `terminal-light`, but use black as the\n  foreground color on top of colored segments (in case your colors are very\n  bright).\n\nFor some terminal themes, like dark base16 themes, the path segments in the\nprompt will be indistinguishable from the background. In those cases, try one of\nthe following variations; they are identical to the `terminal` schemes except\nfor using bright black (`brgrey`) and dull white (`grey`) in the place of black\nand bright white.\n- `terminal2` (or `terminal2-dark` or `terminal2-dark-black`)\n- `terminal2-dark-white`\n- `terminal2-light` (or `terminal2-light-white`)\n- `terminal2-light-black`\n\nFinally, you can specify your very own color scheme by setting\n`theme_color_scheme` to `user`. In that case, you also need to define some\nvariables to set the colors of the prompt. See the \"Colors\" section of\n`fish_prompt.fish` for details.\n\n\n**VCS options**\n- `set -g theme_vcs_ignore_paths /some/path /some/other/path{foo,bar}`. Ignore project paths for Git or Mercurial. Supports glob patterns.\n\n### Overrides\n\nYou can disable the theme default greeting, vi mode prompt, right prompt, or title entirely — or override with your own — by adding custom functions to `~/.config/fish/functions`:\n\n- `~/.config/fish/functions/fish_greeting.fish`\n- `~/.config/fish/functions/fish_mode_prompt.fish`\n- `~/.config/fish/functions/fish_right_prompt.fish`\n- `~/.config/fish/functions/fish_title.fish`\n\nTo disable them completely, use an empty function:\n\n```fish\nfunction fish_right_prompt; end\n```\n\n… Or copy one from your favorite theme, make up something of your own, or copy/paste a bobthefish default function and modify it to your taste!\n\n```fish\nfunction fish_greeting\n  set_color $fish_color_autosuggestion\n  echo \"I'm completely operational, and all my circuits are functioning perfectly.\"\n  set_color normal\nend\n```\n\n\n[btf-fish]:       https://github.com/fish-shell/fish-shell\n[btf-screencast]: https://cloud.githubusercontent.com/assets/53660/18028510/f16f6b2c-6c35-11e6-8eb9-9f23ea3cce2e.gif\n[btf-patching]:   https://powerline.readthedocs.org/en/master/installation.html#patched-fonts\n[btf-fonts]:      https://github.com/Lokaltog/powerline-fonts\n[btf-nerd-fonts]: https://github.com/ryanoasis/nerd-fonts\n[btf-agnoster]:   https://gist.github.com/agnoster/3712874\n\n[btf-dark]:            https://cloud.githubusercontent.com/assets/53660/16141569/ee2bbe4a-3411-11e6-85dc-3d9b0226e833.png \"dark\"\n[btf-light]:           https://cloud.githubusercontent.com/assets/53660/16141570/f106afc6-3411-11e6-877d-fc2a8f6d3175.png \"light\"\n[btf-solarized]:       https://cloud.githubusercontent.com/assets/53660/16141572/f7724032-3411-11e6-8771-b43769e7afec.png \"solarized\"\n[btf-solarized-light]: https://cloud.githubusercontent.com/assets/53660/16141575/fbed8036-3411-11e6-92e9-90da6d45f94b.png \"solarized-light\"\n[btf-base16]:          https://cloud.githubusercontent.com/assets/53660/16141577/0134763a-3412-11e6-9cca-6040d39c8fd4.png \"base16\"\n[btf-base16-light]:    https://cloud.githubusercontent.com/assets/53660/16141579/02f7245e-3412-11e6-97c6-5f3cecffb73c.png \"base16-light\"\n[btf-zenburn]:         https://cloud.githubusercontent.com/assets/53660/16141580/06229dd4-3412-11e6-84aa-a48de127b6da.png \"zenburn\"\n[btf-terminal-dark]:   https://cloud.githubusercontent.com/assets/53660/16141583/0b3e8eea-3412-11e6-8068-617c5371f6ea.png \"terminal-dark\"\n[btf-nord]:            https://user-images.githubusercontent.com/39213657/72811435-f64ca800-3c5f-11ea-8711-dcce8cfc50fb.png \"nord\"\n","repository_updated":0},"boxfish":{"name":"boxfish","description":"An simple and elegant fish theme with compact vi mode support","image":"https://raw.githubusercontent.com/joelwanner/theme-boxfish/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"joelwanner","repository":"https://github.com/joelwanner/theme-boxfish","license":"MIT","dependencies":[],"stars":14,"forks":6,"watchers":14,"issues":0,"updated":1672138025,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### boxfish\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install boxfish\n```\n\n## Features\n\n* Minimalist ASCII-only prompt\n* The most compact vi mode support possible (only 1 character!)\n* Error indicator on return code != 0\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/joelwanner/theme-boxfish/master/screenshot.png\"\u003e\n\u003c/p\u003e\n\n# License\n\n[MIT][mit] © [joelwanner][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/joelwanner\n[contributors]:   https://github.com/joelwanner/theme-boxfish/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"budspencer":{"name":"budspencer","description":"A theme for nerds, makes fish even more powerful. It's equipped with a hell of a lot of nice functions and key bindings to speed up your workflow.","image":"https://raw.githubusercontent.com/tannhuber/media/master/budspencer.jpg","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-budspencer","license":"MIT","dependencies":[],"stars":103,"forks":39,"watchers":103,"issues":5,"updated":1668163734,"full_description":"# Budspencer theme\r\n\r\nA theme for nerds, makes fish even more powerful. It's equipped with a hell of a\r\nlot of nice functions and key bindings to speed up your workflow.\r\n\r\nThe philosophy behind budspencer theme:\r\n\r\n* Delimit the prompt lines clearly to the output.\r\n* Produce output only if it contains relevant information.\r\n* Show useful notifications within the prompt.\r\n* Equip the prompt with toggle commands in order to change its style\r\n  interactively.\r\n* Store sessions in order to make frequently used commands quickly accessible.\r\n* Make navigation within the directory tree as easy as possible using\r\n  bookmarks and a directory history without duplicates.\r\n* Make histories quickly accessible with menus.\r\n* Don't stress your eyes. Use different colors in dark and bright environments.\r\n\r\n## Demonstration video\r\n\r\n[![video][screenshot]](http://vimeo.com/105546618)\r\n\r\n## Requirements\r\n\r\nYou need an up-to-date fish shell version from [github][fish-git] or a\r\n[nightly build][fish-nightly].\r\n\r\nNon standard tools:\r\n\r\n* xsel\r\n* wmctrl\r\n* git\r\n* svn\r\n* [taskwarrior][taskwarrior] (optional)\r\n* [remind][remind] (optional)\r\n\r\n### Note for OS X users\r\n\r\nThe theme uses advanced `sed` and `expr` features. The OS X tools have\r\nrestricted functionality.\r\n\r\nTry `expr` from `coreutils` package if you see `expr: syntax error` in\r\nbudspencer prompt.\r\n\r\nInstall advanced `sed` and `expr` versions:\r\n\r\n```\r\n$ brew install coreutils gnu-sed\r\n```\r\n\r\nAdd this to your `~/.config/fish/config.fish`:\r\n\r\n```\r\nif test (uname -s) = \"Darwin\"\r\n  set -gx PATH /usr/local/opt/coreutils/libexec/gnubin $PATH\r\n  set -gx PATH /usr/local/opt/gnu-sed/libexec/gnubin $PATH\r\nend\r\n```\r\n\r\n## Configuration\r\n\r\n### General configuration\r\n\r\nThe theme behaves similar to vim's airline/powerline plugins. Thus, it needs a\r\n[powerline font][font].\r\nIt's also crucial to have vi mode enabled. Thus, execute\r\n```\r\nset -U fish_key_bindings fish_vi_key_bindings\r\n```\r\nbefore enabling the theme.\r\n\r\n### Colors\r\n\r\nRedefine `$budspencer_colors` with the `set` command in order to change the\r\ncolors of the prompt.\r\n\r\nExample:\r\n```\r\nset budspencer_colors 000000 333333 666666 ffffff ffff00 ff6600 ff0000 ff0033 3300ff 0000ff 00ffff\r\n00ff00\r\n```\r\nwill result in a prompt like this:\r\n![color replace example][colors]\r\n\r\nTwo color schemes for bright and dark environments are predefined. You can\r\nenable them with `day` and `night`, respectively.\r\n\r\n### Command history\r\nCommands that shouldn't appear in the command history are defined by a universal\r\nlist `$budspencer_nocmdhist`. Default:\r\n```\r\nset -U budspencer_nocmdhist c d ll ls m s\r\n```\r\n\r\n### Disable/reenable greeting\r\n\r\nDisable:\r\n```\r\nset -U budspencer_nogreeting\r\n```\r\n\r\nReenable:\r\n```\r\nset -e budspencer_nogreeting\r\n```\r\n\r\n### Show Node version\r\n\r\nTo show your current node version, do following in your Fish configs\r\n```\r\nset -g budspencer_alt_environment \"node -v\"\r\n```\r\n\r\n## Ring the bell in order to set the urgency hint flag\r\n\r\nIf you have configured your terminal application to use the visual bell, your\r\nwindow manager will tell you when a job running in your shell has finished. You\r\ndon't need to check manually whether it's done.\r\n\r\n### Disable the acoustic bell\r\n\r\nIf you have still activated the acoustic bell, you probably hate that feature.\r\nSwitch it off in that case:\r\n```\r\nset -U budspencer_nobell\r\n```\r\n\r\n## Outer prompt segments\r\n\r\n- Vi mode is indicated by color of outer segments, cursor color also changes\r\n  if terminal supports it:\r\n    * blue: NORMAL mode\r\n    * yellow: INSERT mode\r\n    * magenta: VISUAL mode\r\n\r\n## Left prompt segments\r\n\r\n- Prompt line number\r\n- Repository information\r\n- Status symbols\r\n    * ✻: keep track of this shell session, can be toggled with `#` to show the number of\r\n       the session within the sessions list\r\n    * ⌘: present working directory is in bookmark list, can be toggled with `#` to\r\n        show the number of the bookmark\r\n    * V: vi is parent process\r\n    * R: [ranger][ranger] is parent process\r\n    * ⚙: there are background jobs, can be toggled with `#` to show the amount of\r\n        background jobs\r\n    * : no write permissions in present working directory\r\n    * ⚔: there are tasks scheduled for this week, can be toggled with `#` to\r\n        show the amount of weekly tasks\r\n    * ⚑: there are appointments for today, can be toggled with `#` to\r\n        show the amount of appointments\r\n    * ✔: last command succeeded, can be toggled with `#` to show the status value\r\n    * ✘: last command failed, can be toggled with `#` to show the status value\r\n    * ⚡: superuser indicator\r\n- Present working directory\r\n- Active Python [virtual environment](https://virtualenv.pypa.io/en/latest/). Requires [Virtual Fish](https://github.com/adambrenecki/virtualfish/)\r\n\r\n## Right prompt segments\r\n\r\n- Last command's duration time\r\n- Repo status symbols:\r\n    * ↑: git repository is ahead origin\r\n    * ↓: git repository is behind origin\r\n    * +: changes have been added to git index\r\n    * –: files have been deleted in work tree\r\n    * ✱: files have been modified in work tree\r\n    * →: files have been renamed in git index\r\n    * ═: there are unmerged commits\r\n    * ●: there are untracked (new) files\r\n    * ✭: there are stashed commits\r\n\r\n## Toggle prompt segments\r\n\r\nThe following shortcuts need vi-mode:\r\n- Style of \"present working directory\"-segment can be toggled in NORMAL and in\r\n  VISUAL mode with space bar\r\n    * styles implemented:\r\n        - `short` (shows username, short hostname and truncated path; recommended in\r\n          most cases)\r\n        - `long` (shows username, full hostname and full path; useful for copy-paste\r\n          in ssh connections)\r\n        - `none` (shows nothing except small delimiter; useful for small terminals)\r\n        - If prompt is toggled with `#`, the IP address is shown instead of the\r\n          hostname.\r\n    * configurable by universal list `$budspencer_pwdstyle` (if not set, defaults to\r\n      `short long none`); note that changes to `$budspencer_pwdstyle` keep persistant as it's\r\n      a universal variable.\r\n\r\n![pwd style][pwdstyle]\r\n\r\n- Style of symbols can be toggled in NORMAL and in VISUAL mode with `#`\r\n    * styles implemented:\r\n        - `symbols` (shows status symbols)\r\n        - `numbers` (shows numbers instead of symbols in left prompt as well as amount of changes in\r\n          right repo prompt)\r\n\r\nNote, the format is _username@hostname:pathname_. Thus, you can cut\r\nthe whole string with your mouse and paste it into `ssh` commands.\r\n\r\n## Quickly navigate in history of working directories\r\n\r\nThe function `d` drops down a menu showing the history as enumerated list. Unlike\r\nfish's builtin `dirh`, `d` does not show any duplicates. Enter a number to jump\r\nto a directory within the list.\r\n\r\n![dir menu][dirmenu]\r\n\r\nThe following shortcuts need vi-mode:\r\n- Press `H` in NORMAL mode to change present working directory to previous\r\n  working directory in history.\r\n- Press `L` in NORMAL mode to change present working directory to next working\r\n  directory in history.\r\n\r\n## Quickly navigate in command history\r\n\r\nThe function `c` drops down a menu showing the command history as enumerated list similarly to\r\nthe `d` function. Selections are also pasted into the X clipboard. It's possible\r\nto load a command of a former prompt by giving the prompt line number as\r\nargument.\r\n\r\n## Bookmarks\r\n\r\nA bookmark can be created with `mark`. It can be removed with `unmark`. \r\n\r\n`unmark` can take an argument to remove a specific bookmark in the bookmark list. \r\nSimply add the number of the bookmark you would like to remove as the argument.\r\n\r\nBookmarks are universal and thus persistant.\r\nA new shell automatically changes working directory on startup to newest bookmark.\r\n`m` is a function that drops down a menu showing the bookmarks as enumerated list\r\nequivalently to `d`.\r\n\r\nThe following shortcuts need vi mode:\r\n- Create a bookmark for present working directory with `m` in NORMAL mode.\r\n- Remove a bookmark for present working directory with `M` in NORMAL mode.\r\n\r\nBy default the shell will change to the directory of the latest bookmark on a new session. \r\nThis can be disabled by adding the following line:\r\n\r\n```\r\nset -U budspencer_no_cd_bookmark\r\n```\r\n\r\n## Edit commandline with your favorite editor\r\n\r\nThe function `edit-commandline` let you edit the commandline with your editor.\r\nIt makes the commandline as powerful as your editor. If `$EDITOR` is not set,\r\nvi is used.\r\n\r\nThe following shortcut needs vi mode:\r\n- Type `.` in NORMAL mode to edit commandline in editor.\r\n\r\n## Sessions\r\n\r\nShell session can be stored with `s \u003csession name\u003e`. If a session with `session\r\nname` already exists, the session with this name will be attached. If a session with\r\n`session name` is already active within another terminal, this terminal will be\r\nfocussed.\r\n\r\nA list of available sessions can be shown with `s`.\r\n\r\nA session can be erased with `s -e \u003csession name\u003e`.\r\n\r\nType `s -d` to detach current session.\r\n\r\n## Set window title\r\n\r\nJust type `wt \u003ctitle\u003e`.\r\n\r\n## TODO\r\n\r\n- vi REPLACE mode, as soon as REPLACE mode is implemented within fish\r\n\r\n## Feedback\r\n\r\nGive me feedback if you ...\r\n* ... have ideas how I could improve budspencer.\r\n* ... have problems with budspencer.\r\n* ... have questions concerning budspencer.\r\n\r\n[font]: https://github.com/Lokaltog/powerline-fonts\r\n[ranger]: http://ranger.nongnu.org/\r\n[taskwarrior]: http://taskwarrior.org/\r\n[remind]: http://www.roaringpenguin.com/products/remind\r\n[fish-git]: https://github.com/fish-shell/fish-shell.git\r\n[fish-nightly]: https://github.com/fish-shell/fish-shell/wiki/Nightly-builds\r\n[screenshot]: https://raw.githubusercontent.com/tannhuber/media/master/budspencer.jpg\r\n[colors]: https://raw.githubusercontent.com/tannhuber/media/master/budspencer_replace_colors.jpg\r\n[dirmenu]: https://raw.githubusercontent.com/tannhuber/media/master/budspencer_dir_menu.jpg\r\n[pwdstyle]: https://raw.githubusercontent.com/tannhuber/media/master/budspencer_pwd_style.jpg\r\n","repository_updated":0},"cbjohnson":{"name":"cbjohnson","description":"","image":"https://cloud.githubusercontent.com/assets/4823640/5327427/6f9e61bc-7d02-11e4-9223-38ddbed176c8.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-cbjohnson","license":"MIT","dependencies":[],"stars":15,"forks":15,"watchers":15,"issues":2,"updated":1669596368,"full_description":"## cbjohnson theme\n\nA minimal theme forked from the [yimmy][yimmy-commit] theme (thanks [jhillyerd][yimmy-author]!)\n\n![screenshot](https://cloud.githubusercontent.com/assets/4823640/5327427/6f9e61bc-7d02-11e4-9223-38ddbed176c8.png)\n\n[yimmy-commit]: https://github.com/bpinto/oh-my-fish/tree/3a4b7de689cabf3522227f51177a489d915c8b4d/themes/yimmy\n[yimmy-author]: https://github.com/jhillyerd\n","repository_updated":0},"chain":{"name":"chain","description":"A thin, classy theme composed of a chain of information","image":"https://asciinema.org/a/129cyab1j0ou83fhaofg8hs2n.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-chain","license":"MIT","dependencies":[],"stars":24,"forks":14,"watchers":24,"issues":2,"updated":1672392362,"full_description":"# chain\nA thin, classy theme composed of a chain of information.\n\n[![asciicast](https://asciinema.org/a/129cyab1j0ou83fhaofg8hs2n.png)](https://asciinema.org/a/129cyab1j0ou83fhaofg8hs2n)\n\n\n## Installation\nInstall with [Oh My Fish][omf]:\n\n```fish\n$ omf install chain\n```\n\n\n## Features\n- Customizable prompt elements.\n- Default prompt elements such as current Git branch and dirty state.\n- If the last command fails, the exit code is displayed.\n- An abbreviated path.\n\n\n## Links\nYour prompt in chain consists of a series of *links*, with each link displaying a single piece of information. Not all links are always visible and only show up when you need them.\n\nLinks are entirely customizable, and it is easy to create and customize your own links.\n\nChain comes with six default links (in order from left to right):\n\n- Superuser privileges (`⚡`)\n- Number of running background jobs\n- The current working directory\n- The current Git branch (`⎇`)\n- Git working directory dirty (`±`)\n- Exit status of the last command\n\n### Custom links\nMaking your own links is as simple as writing a small function. A link is rendered using a _link function_, which is just a Fish function that outputs two lines: the first line is the color of the link; the second line is the link text. For example, if we wanted a yellow link that showed the current time, we could write a function like this:\n\n```fish\nfunction time_link\n  echo yellow\n  date '+%H:%M:%S'\nend\n```\n\nNow we can add it to the end of our prompt:\n\n```fish\nchain.push time_link\n```\n\nYour links are saved automatically, so it is not necessary to add `chain.push` commands to your configuration. Running the command once is enough.\n\n\n## Commands\nChain offers several commands you can use to customize and manipulate your prompt. Here is some brief documentation on what these functions do:\n\n### `chain.compile`\nTo improve performance, the prompt function is actually generated from the configuration dynamically, or \"compiled\". Normally this function is called for you when needed.\n\n### `chain.defaults`\nResets the prompt to the default set of links.\n\n### `chain.inspect`\nA neat-looking debug tool that prints out your chain-related configuration, gives a preview of all your enabled links, and dumps the _compiled prompt_ function.\n\n### `chain.multiline`\nToggle multi-line prompt display on and off. A multi-line prompt can make more room for typing if you have a lot of links in your prompt chain.\n\n### `chain.pop`\nRemove the last link in the prompt chain.\n\n### `chain.push \u003cfunction\u003e`\nAdd a _link function_ to the end of the prompt chain.\n\n### `chain.shift`\nRemove the first link in the prompt chain.\n\n### `chain.unshift \u003cfunction\u003e`\nAdd a _link function_ to the beginning of the prompt chain.\n\n\n## Customization\nChain uses several global variables to customize the prompt appearance. The most important one is `$chain_links`: a list of function names that print out a single link in the prompt.\n\nThe glyphs used in the default links can be customized using global variables. Here is a list of glyph-related variables:\n\n- `$chain_prompt_glyph`: The arrow character at the end of the chain, right before the text input.\n- `$chain_git_branch_glyph`: Glyph to indicate the Git branch.\n- `$chain_git_dirty_glyph`: Glyph to indicate that the working branch has uncommitted changes.\n- `$chain_su_glyph`: Glyph to indicate that you have superuser privileges.\n- `$chain_link_open_glyph`: Glyph before each individual chain link (default `\u003c`).\n- `$chain_link_close_glyph`: Glyph after each individual chain link (default `\u003e`).\n\n\n## License\n[MIT][mit] © [coderstephen][author] et [al][contributors]\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         https://github.com/coderstephen\n[contributors]:   https://github.com/coderstephen/theme-chain/graphs/contributors\n[omf]:            https://github.com/oh-my-fish/oh-my-fish\n","repository_updated":0},"clearance":{"name":"clearance","description":"A minimalist fish shell theme for people who use git","image":"https://raw.github.com/cseelus/clearance-fish/master/clearance-fish_preview.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-clearance","license":"MIT","dependencies":[],"stars":40,"forks":16,"watchers":40,"issues":0,"updated":1659435855,"full_description":"# Fish Theme: clearance\n\nA minimalist [fish shell](http://fishshell.com/) theme for people who use git\n\n![clearance theme](https://raw.github.com/cseelus/clearance-fish/master/clearance-fish_preview.png)\n\n## Like it?\n\nCheck out other versions of this theme for OSX Terminal or VIM!\n","repository_updated":0},"cmorrell.com":{"name":"cmorrell.com","description":"Theme with minimal base prompt, compact git status, and useful visual indicators for common scenarios.","image":"https://cloud.githubusercontent.com/assets/21592/4770904/8a58e026-5b89-11e4-927c-42a387b41df0.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-cmorrell.com","license":"MIT","dependencies":[],"stars":33,"forks":26,"watchers":33,"issues":0,"updated":1669040473,"full_description":"# Chris Morrell's Fish Theme\n\nThis is a theme I designed for myself but have given to a few friends and decided to publish for others' enjoyment.\n\n![Chris Morrell's Fish Theme](https://cloud.githubusercontent.com/assets/21592/4770904/8a58e026-5b89-11e4-927c-42a387b41df0.gif)\n\n## Features\n\n- Minimal base prompt\n- Shows compact git status w/ the number of changed files \u0026 current branch\n- Gives a visual indication when you're logged in via SSH, or logged in as anyone\n    but the default user (set the `$default_user` list variable to define your default user)\n- Shows indicator if previous command failed\n- Shows a bright red \"!\" if you're logged in as root\n\n(Note: _This theme is designed for a light-on-dark theme like [Solarized](http://ethanschoonover.com/solarized) but should work in a dark-on-light terminal with a few terminal color tweaks_)\n","repository_updated":0},"coffeeandcode":{"name":"coffeeandcode","description":"","image":"https://cloud.githubusercontent.com/assets/1272018/5966170/e846c75e-a7f9-11e4-8aeb-ebec4c974f5b.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-coffeeandcode","license":"MIT","dependencies":[],"stars":5,"forks":6,"watchers":5,"issues":2,"updated":1617812117,"full_description":"# Fish Theme: coffeeandcode\n\nAnother theme choice for Oh-My-Fish! originally created by\n[Jonathan Knapp](http://jonknapp.com).\n\n![coffeeandcode](https://cloud.githubusercontent.com/assets/1272018/5966170/e846c75e-a7f9-11e4-8aeb-ebec4c974f5b.png)\n\n### Warning:\n\nThis theme will overwrite all of your Fish color and git settings. If you'd like\nto customize them, you will have to make changes to the `fish_prompt.fish` file\nin this theme. All of the settings are listed at the top of the file.\n","repository_updated":0},"cor":{"name":"cor","description":"","image":"https://f.cloud.github.com/assets/516068/692075/a30d9080-dbf6-11e2-8dd3-d07cce41259d.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-cor","license":"MIT","dependencies":[],"stars":1,"forks":2,"watchers":1,"issues":0,"updated":1617812119,"full_description":"## cor\n\nThe name says it all\n\n![cor theme](https://f.cloud.github.com/assets/516068/692075/a30d9080-dbf6-11e2-8dd3-d07cce41259d.png)\n\nFor this theme you need a emoji supporting terminal and the emoji-clock plugin\n\n* emoji-clock\n* Git\n* Unicode-compatible fonts and terminals (I use iTerm2 on OSX)\n\n#### Characteristics\n\n##### Left side prompt\n* If the previous command failed (✘)\n* User @ Hostname\n* Abbriviated path\n* Emoji-clock\n\n##### Right side prompt\n* Branch\n* Git status clean dirty (*)\n* Time of last command\n","repository_updated":0},"dangerous":{"name":"dangerous","description":"A feature-rich theme derived from budspencer without powerline font.","image":"https://raw.githubusercontent.com/tannhuber/media/master/dangerous.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-dangerous","license":"","dependencies":[],"stars":31,"forks":7,"watchers":31,"issues":9,"updated":1667590089,"full_description":"# Dangerous theme\n\nA theme for the 70s, makes fish even more powerful. It's equipped with a hell\nof a lot of nice functions and key bindings to speed up your workflow.\n\nThe philosophy behind dangerous theme:\n\n* Delimit the prompt lines clearly to the output.\n* Produce output only if it contains relevant information.\n* Show useful notifications within the prompt.\n* Equip the prompt with toggle commands in order to change its style\n  interactively.\n* Store sessions in order to make frequently used commands quickly accessible.\n* Make navigation within the directory tree as easy as possible using\n  bookmarks and a directory history without duplicates.\n* Make histories quickly accessible with menus.\n* Don't stress your eyes. Use different colors in dark and bright environments.\n\n## Screenshot\n\n![screenshot][screenshot]\n\n## Requirements\n\nYou need an up-to-date fish shell version from [github][fish-git] or a\n[nightly build][fish-nightly].\n\nNon standard tools:\n\n* xsel\n* wmctrl\n* git\n* [taskwarrior][taskwarrior] (optional)\n* [remind][remind] (optional)\n\n## Configuration\n\n### General configuration\n\nIt's crucial to have vi mode enabled. Thus, execute\n```\nset -U fish_key_bindings fish_vi_key_bindings\n```\nbefore enabling the theme.\n\n### Colors\n\nRedefine `$dangerous_colors` with the `set` command in order to change the\ncolors of the prompt.\n\nExample:\n```\nset dangerous_colors 000000 333333 666666 ffffff ffff00 ff6600 ff0000 ff0033 3300ff 0000ff 00ffff\n00ff00\n```\n\nTwo color schemes for bright and dark environments are predefined. You can\nenable them with `day` and `night`, respectively.\n\n### Command history\nCommands that shouldn't appear in the command history are defined by a universal\nlist `$dangerous_nocmdhist`. Default:\n```\nset -U dangerous_nocmdhist c d ll ls m s\n```\n\n### Disable/reenable greeting\n\nDisable:\n```\nset -U dangerous_nogreeting\n```\n\nReenable:\n```\nset -e dangerous_nogreeting\n```\n\n## Outer prompt segments\n\n- Vi mode is indicated by color of outer segments, cursor color also changes\n  if terminal supports it:\n    * blue: NORMAL mode\n    * yellow: INSERT mode\n    * magenta: VISUAL mode\n\n## Left prompt segments\n\n- Prompt line number\n- Git repository information\n- Status symbols\n    * ✻: keep track of this shell session, can be toggled with `#` to show the number of\n       the session within the sessions list\n    * ⌘: present working directory is in bookmark list, can be toggled with `#` to\n        show the number of the bookmark\n    * V: vi is parent process\n    * R: [ranger][ranger] is parent process\n    * ⚙: there are background jobs, can be toggled with `#` to show the amount of\n        background jobs\n    * : no write permissions in present working directory\n    * ⚔: there are tasks scheduled for this week, can be toggled with `#` to\n        show the amount of weekly tasks\n    * ⚑: there are appointments for today, can be toggled with `#` to\n        show the amount of appointments\n    * ✔: last command succeeded, can be toggled with `#` to show the status value\n    * ✘: last command failed, can be toggled with `#` to show the status value\n    * ⚡: superuser indicator\n- Present working directory\n\n## Right prompt segments\n\n- Last command's duration time\n- Git status symbols:\n    * ↑: git repository is ahead origin\n    * ↓: git repository is behind origin\n    * +: changes have been added to git index\n    * –: files have been deleted in work tree\n    * ✱: files have been modified in work tree\n    * →: files have been renamed in git index\n    * ═: there are unmerged commits\n    * ●: there are untracked (new) files\n    * ✭: there are stashed commits\n\n## Toggle prompt segments\n\nThe following shortcuts need vi-mode:\n- Style of segments can be toggled in NORMAL and in VISUAL mode with space bar\n    * styles implemented for present working directory segment:\n        - `short` (shows username, short hostname and truncated path; recommended in\n          most cases)\n        - `long` (shows username, full hostname and full path; useful for copy-paste\n          in ssh connections)\n        - `none` (shows nothing except small delimiter; useful for small terminals)\n        - If prompt is toggled with `#`, the IP address is shown instead of the\n          hostname.\n    * configurable by universal list `$dangerous_pwdstyle` (if not set, defaults to\n      `short long none`); note that changes to `$dangerous_pwdstyle` keep persistant as it's\n      a universal variable.\n    * The other segments are hidden in case `$pwd_style` is `none`.\n\n- Style of symbols can be toggled in NORMAL and in VISUAL mode with `#`\n    * styles implemented:\n        - `symbols` (shows status symbols)\n        - `numbers` (shows numbers instead of symbols in left prompt as well as amount of changes in\n          right git prompt)\n\nNote, the format is _username@hostname:pathname_. Thus, you can cut\nthe whole string with your mouse and paste it into `ssh` commands.\n\n## Quickly navigate in history of working directories\n\nThe function `d` drops down a menu showing the history as enumerated list. Unlike\nfish's builtin `dirh`, `d` does not show any duplicates. Enter a number to jump\nto a directory within the list.\n\nThe following shortcuts need vi-mode:\n- Press `H` in NORMAL mode to change present working directory to previous\n  working directory in history.\n- Press `L` in NORMAL mode to change present working directory to next working\n  directory in history.\n\n## Quickly navigate in command history\n\nThe function `c` drops down a menu showing the command history as enumerated list similarly to\nthe `d` function. Selections are also pasted into the X clipboard. It's possible\nto load a command of a former prompt by giving the prompt line number as\nargument.\n\n## Bookmarks\n\nA bookmark can be created with `mark`. It can be removed with `unmark`.\nBookmarks are universal and thus persistant.\nA new shell automatically changes working directory on startup to newest bookmark.\n`m` is a function that drops down a menu showing the bookmarks as enumerated list\nequivalently to `d`.\n\nThe following shortcuts need vi mode:\n- Create a bookmark for present working directory with `m` in NORMAL mode.\n- Remove a bookmark for present working directory with `M` in NORMAL mode.\n\n## Edit commandline with your favorite editor\n\nThe function `edit-commandline` lets you edit the commandline with your editor.\nIt makes the commandline as powerful as your editor. If `$EDITOR` is not set,\nvi is used.\n\nThe following shortcut needs vi mode:\n- Type `.` in NORMAL mode to edit commandline in editor.\n\n## Sessions\n\nShell session can be stored with `s \u003csession name\u003e`. If a session with `session\nname` already exists, the session with this name will be attached. If a session with\n`session name` is already active within another terminal, this terminal will be\nfocussed.\n\nA list of available sessions can be shown with `s`.\n\nA session can be erased with `s -e \u003csession name\u003e`.\n\nType `s -d` to detach current session.\n\n## Set window title\n\nJust type `wt \u003ctitle\u003e`.\n\n## TODO\n\n- vi REPLACE mode, as soon as REPLACE mode is implemented within fish\n\n## Feedback\n\nGive me feedback if you ...\n* ... have ideas how I could improve dangerous.\n* ... have problems with dangerous. \n* ... have questions concerning dangerous.\n\n[ranger]: http://ranger.nongnu.org/\n[taskwarrior]: http://taskwarrior.org/\n[remind]: http://www.roaringpenguin.com/products/remind\n[fish-git]: https://github.com/fish-shell/fish-shell.git\n[fish-nightly]: https://github.com/fish-shell/fish-shell/wiki/Nightly-builds\n[screenshot]: https://raw.githubusercontent.com/tannhuber/media/master/dangerous.gif\n","repository_updated":0},"default":{"name":"default","description":"","image":"https://cloud.githubusercontent.com/assets/526122/9604024/ac338638-50ac-11e5-874a-70fa9287db93.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-default","license":"MIT","dependencies":[],"stars":37,"forks":32,"watchers":37,"issues":8,"updated":1667839539,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/fish-shell/omf\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\u003e Default theme for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf theme default\n```\n\n## Features\n\n* All the things you need to know about Git in a glance.\n* A subtle timestamp hanging out off to the right.\n* Previous command status.\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://cloud.githubusercontent.com/assets/526122/9604024/ac338638-50ac-11e5-874a-70fa9287db93.png\"\u003e\n\u003c/p\u003e\n\n## Configuration\n\nOnly display the folder name:\n```\n  set -g theme_short_path yes\n```\n\nDisplay `git stash` indicator:\n```\n  set -g theme_stash_indicator yes\n```\n\nDo not display `user@hostname` when in an SSH session:\n```\n  set -g theme_ignore_ssh_awareness yes\n```\n\n# License\n\n[MIT][mit] © [bpinto][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/bpinto\n[contributors]:   https://github.com/oh-my-fish/theme-default/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/oh-my-fish/theme-default.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/oh-my-fish/theme-default\n","repository_updated":0},"dmorrell":{"name":"dmorrell","description":"Theme with minimal base prompt, compact git status, and useful visual indicators for common scenarios.","image":"https://user-images.githubusercontent.com/4246780/43040637-45c207ee-8d49-11e8-9bd4-d6990a665487.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","fish-shell","fish-theme","oh-my-fish","theme"],"author":"reitzig","repository":"https://github.com/reitzig/theme-dmorrell","license":"MIT","dependencies":[],"stars":0,"forks":2,"watchers":0,"issues":0,"updated":1632770345,"full_description":"# DMorrell Fish Theme\n\nThis is a theme for \n    [fish](https://github.com/fish-shell/fish-shell)\nthat focuses on staying out of the way while giving helpful information,\nin particular when working with Git.\n\n![2018-07-22 00 48 23 screenshot](https://user-images.githubusercontent.com/4246780/43040637-45c207ee-8d49-11e8-9bd4-d6990a665487.png)\n\n## Features\n\n- Minimal base prompt.\n- Indicates if previous command failed.\n- Shows compact Git status with\n    - the number of added, modified, and removed files, as well as the number of stashes; \n    - the type and name of the current revision; and\n    - indication whether a merge or rebase is happening.\n- Gives visual indication when you're logged in via SSH, or logged in as anyone\n    but the default user. Shows a bright red \"!\" if you are logged in as root.\n\n_Note:_ This theme is designed for a light-on-dark theme like \n    [Solarized](http://ethanschoonover.com/solarized) \nbut should work in a dark-on-light terminal with a few terminal color tweaks.\n\n## Installation\n\nInstall using\n    [Oh My Fish](https://github.com/oh-my-fish/oh-my-fish):\n\n```fish\nomf install https://github.com/reitzig/theme-dmorrell.git \nomf theme dmorrell\n```\n\nSet the list of default users by adding\n\n```fish\nset -g default_user \"me\" \"buddy\"\n```\n\nto your `.config/fish/config.fish`. \nOf course, this only makes sense if you use the same config across multiple accounts.\nYou can also add the same line to your own fork of the theme.\n\n## Acknowledgements\n\n * Derived from Chris Morrell's\n    [cmorrell](https://github.com/oh-my-fish/theme-cmorrell.com).\n   Hence the name, because `d` comes after `c`.\n * Took some hints from Stefan Maric's\n    [bigfish](https://github.com/stefanmaric/bigfish),\n   in particular about smart glyph choices for representing Git status.\n * Grabbed some Git-related code from\n    [git_util](https://github.com/fisherman/git_util).\n","repository_updated":0},"doughsay":{"name":"doughsay","description":"A clean vcs aware oh-my-fish theme with optional asdf right-prompt","image":"https://raw.githubusercontent.com/doughsay/omf-theme-doughsay/master/screenshot1.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["asdf","fish-shell","git","mercurial","oh-my-fish","svn"],"author":"doughsay","repository":"https://github.com/doughsay/omf-theme-doughsay","license":"MIT","dependencies":[],"stars":6,"forks":0,"watchers":6,"issues":2,"updated":1658951793,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### doughsay\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\nA clean vcs aware theme with optional [asdf](https://github.com/asdf-vm/asdf) right-prompt.\n\n## Install\n\n```fish\n$ omf install doughsay\n```\n\n\n## Features\n\n* vcs aware (git, mercurial, svn)\n* [asdf](https://github.com/asdf-vm/asdf) aware (optionally display current tool versions in right-prompt)\n\n\n## Configuration\n\nThe best place to put these is in your `$OMF_CONFIG/init.fish` (usually `~/.config/omf/init.fish`).  Set them by adding a line to that file like this:\n\n```\nset -g theme_display_asdf \"yes\"\n```\n\n* `theme_display_asdf` - set to \"yes\" to display asdf tool versions in right prompt\n* `theme_display_user` - set to \"yes\" to show username and hostname in prompt\n* `theme_hood_ornament` - set to whatever you want to show up at the end of your prompt (defaults to \"λ\")\n\nYou can also configure the VCS symbols used in the prompt:\n\n* `theme_vcs_symbol_ahead` - (defaults to \"+\")\n* `theme_vcs_symbol_behind` - (defaults to \"-\")\n* `theme_vcs_symbol_diverged` - (defaults to \"±\")\n* `theme_vcs_symbol_local` - (defaults to \"\\*\")\n* `theme_vcs_symbol_touched` - (defaults to \"…\")\n* `theme_vcs_symbol_dirty` - (defaults to \"○\")\n* `theme_vcs_symbol_staged` - (defaults to \"●\")\n* `theme_vcs_symbol_dirty_staged` - (defaults to \"◉\")\n\n\n## Screenshots\n\nShowing git repository statuses:\n\n\u003cp align=\"center\"\u003e\n  \u003cimg src=\"./screenshot1.png\"\u003e\n\u003c/p\u003e\n\nShowing [asdf](https://github.com/asdf-vm/asdf) tool versions in the right-prompt:\n\n\u003e set -g theme_display_asdf \"yes\"\n\n\u003e NOTE: this requires installing the [asdf plugin](https://github.com/doughsay/omf-asdf) in oh-my-fish: `omf install asdf`\n\n\u003cp align=\"center\"\u003e\n  \u003cimg src=\"./screenshot2.png\"\u003e\n\u003c/p\u003e\n\nShowing user@hostname when logged into a remote machine:\n\n\u003e set -g theme_display_user \"yes\"\n\n\u003cp align=\"center\"\u003e\n  \u003cimg src=\"./screenshot3.png\"\u003e\n\u003c/p\u003e\n\n\n# License\n\n[MIT][mit] © [Chris Dosé][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/doughsay\n[contributors]:   https://github.com/doughsay/omf-theme-doughsay/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"eclm":{"name":"eclm","description":"","image":"https://raw.githubusercontent.com/oh-my-fish/theme-eclm/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-eclm","license":"MIT","dependencies":[],"stars":12,"forks":6,"watchers":12,"issues":3,"updated":1653858347,"full_description":"## eclm\nBased on the robbyrussell theme.\n\n![eclm theme](https://raw.githubusercontent.com/oh-my-fish/theme-eclm/master/screenshot.png)\n\n\n#### Characteristics\n\n* Displays git information in the command prompt when available.\n* Indicates 'master' branch with a distinctive color, encouraging the use of feature-branches (useful when development is done using pull requests)\n* If the last command was failed, the indicator would be red, otherwise it's green\n","repository_updated":0},"edan":{"name":"edan","description":"A functional, uncluttered fish theme with usability perks for git users and python developers","image":"https://cloud.githubusercontent.com/assets/215282/6199938/f67e6a54-b49a-11e4-800b-587a638cfb86.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-edan","license":"MIT","dependencies":[],"stars":7,"forks":2,"watchers":7,"issues":0,"updated":1614836953,"full_description":"## Theme Edan\n\nInspired by idan, a functional, uncluttered fish theme with usability perks for git users and python developers.\n\n![Screenshot of theme Edan](https://cloud.githubusercontent.com/assets/215282/6199938/f67e6a54-b49a-11e4-800b-587a638cfb86.png)\n\n#### Characteristics\n\n##### Left Prompt\n\n* User \u0026 host (Shown in \"remote\" mode, hidden by default. Execute `edan-set-remote` or `edan-set-local` to switch.)\n* Current python virtualenv (if applicable)\n* Truncated CWD (just the current folder name)\n* Git branch and dirty state (if applicable)\n\n##### Right Prompt\n\n* Full CWD path\n* Last error code (if applicable)\n\n#### Font\n\nCheck out [Anonymous Pro](http://www.marksimonson.com/fonts/view/anonymous-pro).\n","repository_updated":0},"eden":{"name":"eden","description":"A custimizable theme for fishshell.","image":"https://cloud.githubusercontent.com/assets/215282/14846313/c3e211f0-0c95-11e6-8814-93a2b9a78b2c.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"amio","repository":"https://github.com/amio/fish-theme-eden","license":"MIT","dependencies":[],"stars":10,"forks":8,"watchers":10,"issues":1,"updated":1643447850,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### eden\n\u003e A theme for [fishshell][fish-link].\n\n[![MIT License][license-badge]](/LICENSE)\n[![Fish Shell Version][fish-badge]](http://fishshell.com)\n[![Oh My Fish Framework][omf-badge]][omf-link]\n\n\u003cbr/\u003e\n\n## Install\n\nUsing [Oh My Fish][omf-link]:\n```shell\n$ omf install eden\n\n# to uninstall :/\n$ omf uninstall eden\n```\n\nUsing [Fisherman][fisher-link]:\n```shell\n$ fisher https://github.com/amio/fish-theme-eden\n\n# to uninstall :/\n$ fisher rm theme-eden\n```\n\n## Features\n\n* Last command's timestamp \u0026 exit status on right.\n* `eden_toggle_path` display long or short pwd.\n* `eden_toggle_host` show or hide host \u0026 user.\n* `eden_prompt_char` custom prompt char.\n* `eden_toggle_ssh_tag` show or hide `-SSH-` tag.\n* A blue (red for root user) `-SSH-` tag on ssh connection.\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg width=\"883\" height=\"529\" alt=\"Theme Eden Screenshot\" src=\"https://cloud.githubusercontent.com/assets/215282/14846313/c3e211f0-0c95-11e6-8814-93a2b9a78b2c.png\"\u003e\n\u003c/p\u003e\n\nFont: [INCONSOLATA](https://www.google.com/fonts/specimen/Inconsolata)\n\n# License\n\n[MIT][mit] © [Amio][author]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/amio\n[fish-link]:      http://fishshell.com/\n[omf-link]:       https://github.com/oh-my-fish/oh-my-fish\n[fisher-link]:    https://github.com/fisherman/fisherman\n[omf-badge]:      https://flat.badgen.net/badge/Oh%20My%20Fish/Framework\n[fish-badge]:     https://flat.badgen.net/badge/fish/v2.2.0\n[license-badge]:  https://flat.badgen.net/badge/license/MIT\n","repository_updated":0},"emoji-powerline":{"name":"emoji-powerline","description":"A fish theme based on Agnoster to throw in some emojis and more powerline-ness","image":"https://i.imgur.com/62aD4l9.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"wyqydsyq","repository":"https://github.com/wyqydsyq/emoji-powerline","license":"MIT","dependencies":[],"stars":19,"forks":4,"watchers":19,"issues":0,"updated":1666575978,"full_description":"## emoji-powerline\n\nBased on Agnoster, extended with emojis representing home and root directories. Paths in the pwd prompt and git branch are split by \"/\" and joined as powerline segments for a clean aesthetic. Input is broken onto a new line for more consistent positioning.\n\nColours and emojis used are easily configurable at the top of `./fish_prompt.fish`\n\nGet the full path in your prompt by running:\n\n```sh\nset -U fish_prompt_pwd_dir_length 0\n```\n\n#### Preview\n![emoji-powerline theme](https://i.imgur.com/62aD4l9.png)\n\n#### Characteristics\n\n- If you're under your home directory, \"~\" is replaced with \"🏠\"\n- If you're outside your home directory, the root-level \"/\" is replaced with \"🌏\"\n- pwd_prompt is split by \"/\", each section is turned into a Powerline segment\n- Git branch is split by \"/\", each section is turned into a Powerline segment\n- If the previous command failed (⚠️)\n- User @ Hostname (if user is not DEFAULT_USER, which can then be set in your profile)\n- Git/HG/SVN status\n- Branch () or detached head (➦)\n- Current branch / SHA1 in detached head state\n- Dirty working directory (✱, color change)\n- Clean working directory ✔\n- Elevated (root) privileges (⚡)\n- Current virtualenv (Python)\n  You will probably want to disable the default virtualenv prompt. Add to your [`init.fish`](https://github.com/oh-my-fish/oh-my-fish#dotfiles):\n  `set --export VIRTUAL_ENV_DISABLE_PROMPT 1`\n- Indicate vi mode.\n\nForked from https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md#agnoster-1\n","repository_updated":0},"es":{"name":"es","description":"Fish shell theme","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-es","license":"MIT","dependencies":[],"stars":14,"forks":14,"watchers":14,"issues":7,"updated":1638706491,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### es theme\n\u003e A Powerline-style, Git-aware theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE) [![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com) [![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\nMake sure you have [Oh My Fish][omf-link] installed. Then just\n```fish\n$ omf install es\n```\n\n## Requirements\n* Latest fish version with a builtin `string` function (above `2.2.0`, so please get the latest version from  `HEAD`)\n* Powerline-patched font\n\n## Features\n\n* Git-aware theme with detailed __Git status__ in the left prompt (added, removed, modified, renamed, unstaged, stashed)\n* __Node/Python/Ruby@gemset__ current version inside a git folder in the right prompt if respective virtual environment manager is installed (nvm, pyenv, rbenv)\n* __Error status__ and __duration of last command__ in the right prompt\n* Mac-notifications on completion of long commands (10+\u0026nbsp;seconds by default) if terminal (iTerm and Terminal) is out of focus\n* Limits path to __two last folders__ for better visibility, with `$HOME` directory abbreviated to `~`\n\n## Screenshot\n\n### __Git folder__\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://github.com/oh-my-fish/theme-es/blob/master/Fish%20Prompt%20Git-es.png?raw=true\"\u003e\n\u003c/p\u003e\n\n### __Normal folder (no Git)__\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://github.com/oh-my-fish/theme-es/blob/master/Fish%20Prompt%20NoGit-es.png?raw=true\"\u003e\n\u003c/p\u003e\n\n### __Normal read-only folder (no Git)__\n\u003cp align=\"left\"\u003e\n\u003cimg src=\"https://github.com/oh-my-fish/theme-es/blob/master/Fish%20Prompt%20NoGit%20Read-only-es.png?raw=true\" width=\"280\"\u003e\n\u003c/p\u003e\n\n# License\n\n[MIT][mit] © [eugenesvk][author]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/eugenesvk\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"fishbone":{"name":"fishbone","description":"A clean theme for fish shell managed by Oh my fish","image":"https://raw.githubusercontent.com/oh-my-fish/theme-fishbone/animation/fishbone.gif","latest_version":{"version":"1.0","description":"# Release Notes\r\n\r\n* First global release with a stable code\r\n* Shows CPU Information\r\n* Shows Memory Information\r\n* Shows Network Information\r\n* Shows OS Information\r\n* Shows Date and Uptime Information\r\n* Works on Linux and Mac OS X","commit_hash":"master","release_date":1591220956},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"# Release Notes\r\n\r\n* First global release with a stable code\r\n* Shows CPU Information\r\n* Shows Memory Information\r\n* Shows Network Information\r\n* Shows OS Information\r\n* Shows Date and Uptime Information\r\n* Works on Linux and Mac OS X","release_date":1591220956,"version":"1.0"}],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-fishbone","license":"MIT","dependencies":[],"stars":32,"forks":16,"watchers":32,"issues":3,"updated":1656063645,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n# fishbone\nA clean theme for [fish shell](https://fishshell.com) managed by [Oh my fish](https://github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr /\u003e\n\u003cbr /\u003e\n\n## Example\n\n\u003cimg src=\"https://raw.githubusercontent.com/oh-my-fish/theme-fishbone/animation/fishbone.gif\" align=\"center\" /\u003e\n\n## Installation\n\n```fish\nomf update  # Just if your omf installation is old. Avoids missing the package\nomf install fishbone\n```\n\u003e omf (Oh my fish) is a package manager for fish shell. Just like pip is for Python and gem is for Ruby\n\n## Features\n\n* Only displays an abbreviatted path on left side;\n* Displays the current time at right;\n* On git repositories shows its current branch and modifications on right side;\n* For Python users, if there is an active virtualenv, it will be displayed at right between brackets;\n* Colon at left side becames red if last command fails;\n* At start up, shows user name, date, uptime, informations about OS, CPU, memory and network;\n \n## Project structure\n\nWe have two branches:\n\n* master: Where the necessary files for theme is;\n* animation: There is two adicional files (animation.cxf, fishbone.gif) that is used for theme example at README.md file.\n\nThe theme files are separated as follows:\n\n* fish_prompt.fish: Has the function to print the prompt line;\n* fish_right_prompt.fish: Prints the right side of the shell prompt;\n* fish_greeting.fish: Prints the welcome message at shell session start up;\n\n\n## Contributing\n\nWe are not stringent with contributions.\nJust fork the project, do some modifications and send us a Pull request : )\nBugs and improvements can be reported/suggested as [issues](https://github.com/oh-my-fish/theme-fishbone/issues).\n\n\n# License\n\n[MIT][mit] © [pantuza][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/pantuza\n[contributors]:   https://github.com/pantuza/fishbone/graphs/contributors\n","repository_updated":0},"fishface":{"name":"fishface","description":"Prompt for Fish Shell shaped like a fish, coloured green when in a git repo.","image":"https://f.cloud.github.com/assets/66143/1224622/ec9660d8-2750-11e3-9c96-cb7a5a69eada.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-fishface","license":"MIT","dependencies":[],"stars":6,"forks":3,"watchers":6,"issues":1,"updated":1661452028,"full_description":"## FishFace\n\nShows an ASCII fish which is blue or green when in a git repo.\n\n![fishface theme](https://f.cloud.github.com/assets/66143/1224622/ec9660d8-2750-11e3-9c96-cb7a5a69eada.png)\n","repository_updated":0},"fishy-drupal":{"name":"fishy-drupal","description":"","image":"https://raw.github.com/greggles/fishy-drupal/master/drups-fish-theme.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-fishy-drupal","license":"MIT","dependencies":[],"stars":5,"forks":3,"watchers":5,"issues":1,"updated":1652012184,"full_description":"## fishy-drupal\n\n![fishy-drupal](https://raw.github.com/greggles/fishy-drupal/master/drups-fish-theme.png)\n\n#### Features\n\n* Shows the present working directory, abbreviated (default fish style)\n* Shows the active git branch, if any\n* Shows the active drush site alias, if any\n* Shows yellow ✗ if the current git directory is \"dirty\"\n","repository_updated":0},"fisk":{"name":"fisk","description":"","image":"https://cloud.githubusercontent.com/assets/20814/6209746/60949aa6-b5c9-11e4-8edc-5a8e370f4527.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-fisk","license":"MIT","dependencies":[],"stars":2,"forks":2,"watchers":2,"issues":1,"updated":1652012116,"full_description":"# Fisk\n\n![theme screenshot](https://cloud.githubusercontent.com/assets/20814/6209746/60949aa6-b5c9-11e4-8edc-5a8e370f4527.png)\n\nA nice dark blue-green theme with support for:\n\n- Last exit code\n- Current git HEAD\n- Current python virtualenv\n\nBy [joar](https://github.com/joar), thanks to\n[adisbladis](https://github.com/adisbladis) for the starting point.\n","repository_updated":0},"flash":{"name":"flash","description":"Mirror of @fishery/flash","image":"https://cloud.githubusercontent.com/assets/8317250/7787558/fb091794-024d-11e5-815b-cf3b6b2e5217.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"alecgorge","repository":"https://github.com/alecgorge/fish-flash-theme","license":"MIT","dependencies":[],"stars":6,"forks":5,"watchers":6,"issues":0,"updated":1639144160,"full_description":"[![Slack Room][slack-badge]][slack-link]\n\n# Flash\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://cloud.githubusercontent.com/assets/8317250/7787558/fb091794-024d-11e5-815b-cf3b6b2e5217.png\"\u003e\n\u003c/p\u003e\n\n[slack-link]: https://fisherman-wharf.herokuapp.com/\n[slack-badge]: https://fisherman-wharf.herokuapp.com/badge.svg\n\n## Features\n\n_From left to right:_\n\n+ `$HOME` directory abbreviated to `( ⌁ )`\n+ `/` root is diplayed as `( / )`\n+ `$HOME` and `/` characters change color to dim gray if last `$status`  was `!=` 0.\n+ Path to current working directory is abbreviated.\n+ Path and prompt separator is displayed as `)`.\n\n+ `\u003c` character next to `(branch)` denotes the repository has [_stashed_](https://git-scm.com/book/no-nb/v1/Git-Tools-Stashing) changes.\n+ `*` next to the branch name denotes the current repository is dirty.\n+ Display current branch.\n+ Display current time.\n+ Time separator `:` changes color to red if last `$status`  was `!=` 0.\n+ Display exit status for non zero codes after `≡` character.\n+ Colors inspired by _The Flash_.\n+ Display the number of seconds taken by the last command executed.\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://cloud.githubusercontent.com/assets/8317250/7787589/431f2efa-024f-11e5-9715-df3e1833e174.png\"\u003e\n\u003c/p\u003e\n","repository_updated":0},"fluffy":{"name":"fluffy","description":"Very Fluffy-ish like theme for Oh My Fish","image":"https://raw.githubusercontent.com/katekyy/fluffy/master/.pastes/fluff.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"katekyy","repository":"https://github.com/katekyy/fluffy","license":"MIT","dependencies":[],"stars":1,"forks":0,"watchers":1,"issues":0,"updated":1657024622,"full_description":"### Fluffy\n\u003cdiv\u003e\n  \u003cimg src=\".pastes/fluff.png\"/\u003e\n\u003c/div\u003e\n\nA fluffy-ish like theme for [Oh My Fish](https://github.com/oh-my-fish/oh-my-fish) based on [nai](https://github.com/oh-my-fish/theme-nai).\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?color=%237CAFC2\u0026style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.0-007EC7.svg?color=%237CAFC2\u0026style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?color=%237CAFC2\u0026style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\u003e **Warning**:\n\u003e You need to have Nerd Fonts in order to get this theme to work.\n\n#### Features\n\n- Truncated CWD (just the current and previous directory name)\n- Git branch, dirty state (M) and head detach (HD)\n- Icons\n\n####  Basic Customization\n```bash\n~\u003e cd ~/.local/share/omf/themes/fluffy/functions\n~\u003e nano fish_prompt.fish\n```\nYou will see different settings that you can set:\n\u003cdiv\u003e\n  \u003cimg src=\".pastes/2022-06-28-18-39-13.png\"/\u003e\n\u003c/div\u003e\n\n\u003cbr/\u003e\n\n","repository_updated":0},"fox":{"name":"fox","description":"","image":"http://i60.tinypic.com/2myaibn.jpg","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-fox","license":"MIT","dependencies":[],"stars":1,"forks":2,"watchers":1,"issues":1,"updated":1617812138,"full_description":"## fox\n\ncloned from oh-my-zsh.\n\n![fox theme](http://i60.tinypic.com/2myaibn.jpg)\n","repository_updated":0},"gentoo":{"name":"gentoo","description":"Unofficial Gentoo fish prompt theme","image":"http://i.imgur.com/kNvOfd6.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","fish-theme","gentoo"],"author":"ribugent","repository":"https://github.com/ribugent/theme-gentoo","license":"MIT","dependencies":[],"stars":6,"forks":5,"watchers":6,"issues":0,"updated":1642728857,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### Gentoo fish theme\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install gentoo\n```\n\n\n## Features\n\nUnofficial Gentoo fish prompt theme which tries to follow Gentoo default bash $PS1.\n\n* Left-hand side:\n\t* user@host for regular user, green color\n\t* host for root user, red color\n\t* full cwd for regular user, short cwd for root, home dir is replaced by ~\n\t* EXTRA: git branch with state info (if applicable)\n\n* Right-hand side:\n\t* last error code (if applicable)\n\t* [timestamp]\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"http://i.imgur.com/kNvOfd6.png\"\u003e\n\u003c/p\u003e\n\n# Credits:\n\n* Forked from https://github.com/oh-my-fish/theme-godfather and modified to follow Gentoo default bash $PS1\n* Colors and git functions taken from [amio](https://github.com/amio)'s [edan](https://github.com/oh-my-fish/theme-edan) theme.\n* \"Gentoo\" is a trademark of Gentoo Foundation, Inc.\n\n\n# License\n\n[MIT][mit] ©\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/ribugent\n[contributors]:   https://github.com/ribugent/theme-gentoo/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"gianu":{"name":"gianu","description":"","image":"https://cloud.githubusercontent.com/assets/1499062/5955321/114b64d2-a7a2-11e4-8732-e8cf06903314.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-gianu","license":"MIT","dependencies":[],"stars":1,"forks":3,"watchers":1,"issues":0,"updated":1617812141,"full_description":"## Gianu\n\nOriginal theme made by [gianu](https://github.com/gianu) for oh-my-zsh, converted to oh-my-fish by [JBarberU](https://github.com/JBarberU)\n\n![gianu theme](https://cloud.githubusercontent.com/assets/1499062/5955321/114b64d2-a7a2-11e4-8732-e8cf06903314.png)\n\n\n#### Characteristics\n\nDisplays:\n\n* Username and hostname\n* Working directory\n* Git information when available.\n","repository_updated":0},"gitstatus":{"name":"gitstatus","description":"","image":"https://raw.githubusercontent.com/oh-my-fish/theme-gitstatus/master/gitstatus.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-gitstatus","license":"MIT","dependencies":[],"stars":5,"forks":2,"watchers":5,"issues":2,"updated":1662043932,"full_description":"## GitStatus\n\n![GitStatus](https://github.com/godfat/fish_prompt-gitstatus/raw/master/gitstatus.png)\n\n#### Characteristics\n\n* Displays host information in the command prompt when connected via ssh.\n\n* Displays git information in the command prompt when inside a git repository.\n\n  - Shows current branch name.\n  - Shows * if working copy is dirty.\n  - Shows # if everything is staged.\n  - Shows no indicators if the working copy is clean.\n","repository_updated":0},"gnuykeaj":{"name":"gnuykeaj","description":"","image":"https://raw.githubusercontent.com/andyklimczak/oh-my-fish/gnuykeaj-screenshot/themes/gnuykeaj/gnuykeaj-preview.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-gnuykeaj","license":"MIT","dependencies":[],"stars":11,"forks":8,"watchers":11,"issues":1,"updated":1631966035,"full_description":"# Fish Theme: gnuykeaj\n\nSuper minimal one line version of [clearance](https://github.com/oh-my-fish/theme-clearance) theme. Balance between need to know information and space. Has git branch and dirty state information based on the color of the branch name.\n\n![gnuykjeatheme](https://raw.githubusercontent.com/andyklimczak/oh-my-fish/gnuykeaj-screenshot/themes/gnuykeaj/gnuykeaj-preview.png)\n\n","repository_updated":0},"godfather":{"name":"godfather","description":"","image":"http://i.imgur.com/mh7a39d.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-godfather","license":"MIT","dependencies":[],"stars":8,"forks":11,"watchers":8,"issues":3,"updated":1645058892,"full_description":"## godfather fish theme\n\nClean git theme with homey feel and git-centric features.\n\n![screenshot](http://i.imgur.com/mh7a39d.png)\n\n#### Prompt structure:\n\n* Left-hand side:\n\t* user@host:\n\t* truncated cwd (just the current folder name)\n\t* git branch with state info (if applicable)\n\n* Right-hand side:\n\t* last error code (if applicable)\n\t* [timestamp]\n\n#### Credits:\n\nColors and git functions taken from [amio](https://github.com/amio)'s\n[edan](https://github.com/bpinto/oh-my-fish/tree/master/themes/edan) theme.\n\n","repository_updated":0},"graystatus":{"name":"graystatus","description":"fish shell prompt theme : modest prompt, deference to contents","image":"https://raw.githubusercontent.com/usami-k/graystatus/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","fisherman","oh-my-fish","prompt","theme"],"author":"usami-k","repository":"https://github.com/usami-k/graystatus","license":"Apache-2.0","dependencies":[],"stars":2,"forks":0,"watchers":2,"issues":0,"updated":1650267661,"full_description":"# graystatus\n\nPrompt theme for [fish shell](http://fishshell.com).\n\n* modest prompt\n* deference to contents\n\n## Screen Shot\n\n![screenshot](screenshot.png)\n\n## Install\n\nIf you use [fisher](https://github.com/jorgebucaran/fisher) :\n\n```\nfisher add usami-k/graystatus\n```\n\nIf you use [oh-my-fish](https://github.com/oh-my-fish/oh-my-fish) :\n\n```\nomf install graystatus\n```\n\n## Configuration\n\nTo configure, you can use environment variables.\n\n* `GRAYSTATUS_COLOR_PROMPT` : prompt color (default: brblack)\n* `GRAYSTATUS_COLOR_STATUS` : exit status color (default: red)\n\nThe color value is passed to [set_color](https://fishshell.com/docs/current/commands.html#set_color) command.\n\n## License\n\nCopyright 2017 USAMI Kosuke\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n","repository_updated":0},"harleen":{"name":"harleen","description":"Custom Oh My Fish theme. 🐠","image":"https://raw.githubusercontent.com/aneveux/theme-harleen/master/screen.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","oh-my-fish","theme"],"author":"aneveux","repository":"https://github.com/aneveux/theme-harleen","license":"MIT","dependencies":[],"stars":4,"forks":3,"watchers":4,"issues":0,"updated":1668089200,"full_description":"\u003cimg src=\"https://avatars1.githubusercontent.com/u/11728505?s=200\u0026v=4\" align=\"left\" width=\"144px\" height=\"144px\" style=\"margin:10px 20px;\"/\u003e\n\n#### Harleen\n\n\u003e A [Oh My Fish][omf-link] theme inspired by [Harleen Quinzel](http://dcextendeduniverse.wikia.com/wiki/Harley_Quinn).\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n## Install\n\n```fish\n$ omf install harleen\n```\n\n*Please notice the theme requires [git](https://git-scm.com/) to work efficiently.*\n\n## Description\n\n*Harleen* is a simple yet useful [Oh My Fish][omf-link] theme highly inspired by the [batman theme](https://github.com/gitter-badger/batman) and the [sushi theme](https://github.com/umayr/theme-sushi), but also from the [fish default theme](https://github.com/oh-my-fish/theme-default).\n\nIt is meant to remain simple and bring some useful information when browsing a git repository.\n\nHuge thanks as well to [erikachristine](http://www.colourlovers.com/lover/erikachristine) for her beautiful [color palette](http://www.colourlovers.com/palette/4537580/lisa_frank_rainbow~) which I used for that theme.\n\nAlso a huge thanks to @sagebind for his really nice and helpful comments :thumbsup:\n\n## Features\n\n* Minimal prompt,\n* Displays status of last command as color,\n* Displays useful information when browsing a Git repository,\n* Displays number of ahead/behind commits between current and remote branch,\n* Displays time on the right.\n\n## Screenshot\n\n![screenshot](screen.png)\n\n# License\n\n[MIT][mit] © [Antoine Neveux][author] et [al][contributors]\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/aneveux\n[contributors]:   https://github.com/aneveux/theme-harleen/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"heartsteal":{"name":"heartsteal","description":"Highly minimal two line fish prompt","image":"https://raw.githubusercontent.com/AnashiKitsun/heartsteal/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"AnashiKitsun","repository":"https://github.com/AnashiKitsun/heartsteal","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":1,"updated":1608479425,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### heartsteal\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install heartsteal\n```\n\n\n## Features\n\n* Highly minimal two line fish prompt.\n* Basal git information, current directory, command exit status.\n\n## Note\nWorks best with the Fira Code font, as ligatures are used in the design.\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"screenshot.png\"\u003e\n\u003c/p\u003e\n\n\n# License\n\n[MIT][mit] © [AnashiKitsun][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/theme-heartsteal/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"idan":{"name":"idan","description":"","image":"https://f.cloud.github.com/assets/22723/544512/14b7cd6e-c251-11e2-82c0-d5b4f41581c7.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-idan","license":"MIT","dependencies":[],"stars":2,"forks":4,"watchers":2,"issues":0,"updated":1671749732,"full_description":"## idan\nA functional, uncluttered fish theme with usability perks for git users and python developers.\n\n\n![Screenshot of idan theme](https://f.cloud.github.com/assets/22723/544512/14b7cd6e-c251-11e2-82c0-d5b4f41581c7.png)\n\n\n#### Characteristics\n\n##### Left Prompt\n\n* Current python virtualenv (if applicable)\n* Truncated CWD (just the current folder name)\n* Git branch and dirty state (if applicable)\n\n##### Right Prompt\n\n* Full CWD path\n* Last error code (if applicable)\n","repository_updated":0},"integral":{"name":"integral","description":"","image":"https://cloud.githubusercontent.com/assets/21774/2715353/70af1520-c50a-11e3-9db3-74933fbb8d91.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-integral","license":"MIT","dependencies":[],"stars":1,"forks":4,"watchers":1,"issues":1,"updated":1646466275,"full_description":"## integral\n\nA simple git upstream theme.\n\n#### Characteristics\n\n* Current branch\n* Dirty working directory\n* Working directory\n* Git upstream status\n\n#### Screenshot\n![Integral Screenshot](https://cloud.githubusercontent.com/assets/21774/2715353/70af1520-c50a-11e3-9db3-74933fbb8d91.png)\n","repository_updated":0},"jacaetevha":{"name":"jacaetevha","description":"","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-jacaetevha","license":"MIT","dependencies":[],"stars":1,"forks":3,"watchers":1,"issues":2,"updated":1617812154,"full_description":"## jacaetevha\n\nA theme optimized for people who use:\n\n* Git\n* Unicode-compatible fonts and terminals (I use iTerm2 + Monaco)\n\nFor Mac users, I highly recommend iTerm 2.\n\n![jacaetevha\ntheme](http://jacaetevha.github.io/oh-my-fish/screenshot.png)\n\n\n#### Characteristics\n\n* Left-hand prompt:\n```\n    \u003cuser\u003e at \u003chost\u003e in \u003cabbreviated path\u003e \u003ctotal size of files in dir\u003e (\u003ccurrent Git branch\u003e)\n    ↪ \n```\n* Right-hand prompt:\n```\n    \u003ccurrent date\u003e\n```\n","repository_updated":0},"johanson":{"name":"johanson","description":"A two-line theme for Oh My Fish with Python virtual environment support.","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","omf"],"author":"johanson","repository":"https://github.com/johanson/theme-johanson","license":"MIT","dependencies":[],"stars":1,"forks":0,"watchers":1,"issues":0,"updated":1527461431,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### johanson\n\u003e A two-line theme for [Oh My Fish][omf-link] with Python virtual environment  and fabfile support. Loosely based on cbjohnson.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install johanson\n```\n## Screenshot\n\n![Omf johanson theme screenshot](screenshots/omf-theme-johanson-1.png?raw=true)\n\n![Omf johanson theme screenshot](screenshots/omf-theme-johanson-2.png?raw=true)\n\n![Omf johanson theme screenshot](screenshots/omf-theme-johanson-3.png?raw=true)\n\n# License\n\n[MIT][mit] © [Rasmus Johanson][author] et [al][contributors]\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/johanson\n[contributors]:   https://github.com/johanson/theme-johanson/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"kawasaki":{"name":"kawasaki","description":"kawasaki is a fish theme that emphasizes a simple and useful prompt without useless cluttter.","image":"https://user-images.githubusercontent.com/195790/96945002-0820eb80-150f-11eb-91fe-ecfa0e2b9131.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","fish-theme"],"author":"hastinbe","repository":"https://github.com/hastinbe/theme-kawasaki","license":"MIT","dependencies":[],"stars":19,"forks":4,"watchers":19,"issues":0,"updated":1672132107,"full_description":"# kawasaki\n\n`kawasaki` is a customizable [fish][fish] theme that emphasizes a simple and useful prompt without useless cluttter.\n\n[![Oh My Fish](https://img.shields.io/badge/Framework-Oh_My_Fish-blue.svg?style=flat)](https://github.com/oh-my-fish/oh-my-fish)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](/LICENSE)\n\n![kawasaki][screenshot]\n\n#### Example customizations\n\n| [Minimal Midnight](#customizing) | [Joker](#customizing) |\n| -------------------------------- | --------------------- |\n| ![midnight](https://user-images.githubusercontent.com/195790/96850333-45429a80-1489-11eb-8b28-043b2999b75d.png) | ![joker](https://user-images.githubusercontent.com/195790/96945002-0820eb80-150f-11eb-91fe-ecfa0e2b9131.png) |\n\n## Installation\n\n\n#### Requirements\n* [Fish shell][fish] - a smart and user-friendly command line\nshell for OS X, Linux, and the rest of the family\n* [Oh My Fish][omf] - The Fishshell Framework\n\nOnce Oh My Fish is installed:\n\n    omf install kawasaki\n\nThis theme was inspired by [bira][bira].\n\n#### Notes\n\nTo use kawasaki's virtualenv prompt instead of the default virtualenv prompt append `set -x VIRTUAL_ENV_DISABLE_PROMPT 1` to your [init.fish][dotfiles]\n\n\n## Features\n\n * Completely customizable.\n * Display status of the working tree for Git projects.\n * Read/write indicator of the current working directory.\n * Background jobs indicator.\n * Virtualenv prompt indicator.\n\n\n## Customizing\n\n#### Override defaults\n\nYou can override the default display settings by specifying any of the following settings in your [init.fish][dotfiles]:\n\n```fish\n## Enable the time to be displayed.\nset -g theme_display_time yes\n\n## Disable playing the user's current group.\nset -g theme_display_group no\n\n# Display the system hostname.\nset -g theme_display_hostname no\n\n## Disable Git-awareness.\nset -g theme_display_git no\n\n## Don't disable jobs indicator.\nset -g theme_display_jobs no\n\n## Always display the jobs indicator, even if there are no jobs.\nset -g theme_display_jobs_always yes\n\n## Hide the current directory read/write indicator.\nset -g theme_display_rw no\n\n## Don't display the VirtualEnv prompt.\nset -g theme_display_virtualenv no\n\n## Display the battery\nset -g theme_display_batt no\nset -g theme_display_batt_icon no\n```\n\n#### Look and feel\n\nNearly every aspect of kawasaki can be customized. The following can be set to adjust the look and feel of kawasaki:\n\n```fish\nset -g theme_color_error                           red\nset -g theme_color_superuser                       red\nset -g theme_color_user                            white\nset -g theme_color_group                           666666\nset -g theme_color_host                            brgreen\nset -g theme_color_separator                       brblack\nset -g theme_color_bracket                         brblue\nset -g theme_color_normal                          normal\nset -g theme_color_time                            666666\nset -g theme_color_path                            brwhite\nset -g theme_color_prompt                          white\nset -g theme_color_virtualenv                      bryellow\nset -g theme_color_status_prefix                   brblue\nset -g theme_color_status_jobs                     brgreen\nset -g theme_color_status_rw                       brwhite\nset -g theme_color_batt_icon                       white\nset -g theme_color_batt_charging                   brgreen\nset -g theme_color_batt_discharging                red\nset -g theme_color_batt_0                          red\nset -g theme_color_batt_25                         red\nset -g theme_color_batt_50                         bryellow\nset -g theme_color_batt_75                         bryellow\nset -g theme_color_batt_100                        brgreen\n\nset -g theme_prompt_char_normal                    '$'\nset -g theme_prompt_char_superuser                 '#'\nset -g theme_prompt_char                           \"$theme_prompt_char_normal\"\n\nset -g theme_prompt_superuser_glyph                \\u2605\nset -g theme_prompt_userhost_separator              '@'\nset -g theme_prompt_group_separator                 ':'\n\nset -g theme_prompt_segment_separator_char         ' '\nset -g theme_prompt_segment_separator_color        normal\n\nset -g theme_prompt_status_jobs_char               '%'\nset -g theme_prompt_status_rw_char                 '.'\nset -g theme_prompt_status_separator_char          '/'\n\nset -g theme_prompt_virtualenv_char_begin          '('\nset -g theme_prompt_virtualenv_char_end            ')'\nset -g theme_prompt_virtualenv_color_char_begin    normal\nset -g theme_prompt_virtualenv_color_char_end      normal\n\nset -g theme_prompt_batt_charging_char             '↑'\nset -g theme_prompt_batt_discharging_char          '↓'\nset -g theme_prompt_batt_0                         ''\nset -g theme_prompt_batt_25                        ''\nset -g theme_prompt_batt_50                        ''\nset -g theme_prompt_batt_75                        ''\nset -g theme_prompt_batt_100                       ''\n\nset -g theme_display_time_format                   '+%I:%M'\n\nset -g __fish_git_prompt_color_merging             red\nset -g __fish_git_prompt_color_branch              brblue\nset -g __fish_git_prompt_showcolorhints            yes\nset -g __fish_git_prompt_show_informative_status   yes\nset -g __fish_git_prompt_char_stateseparator       ' '\n\nset -g __fish_git_prompt_char_branch_begin         ''\nset -g __fish_git_prompt_char_branch_end           ''\nset -g __fish_git_prompt_color_branch_begin        bryellow\nset -g __fish_git_prompt_color_branch_end          bryellow\n```\n\n##### Examples\n\n__Minimal midnight__\n\n![midnight](https://user-images.githubusercontent.com/195790/96850333-45429a80-1489-11eb-8b28-043b2999b75d.png)\n\n```fish\nset -gx fish_prompt_pwd_dir_length 0\nset -g theme_display_group no\nset -g theme_display_hostname no\nset -g theme_color_user aa55ff\nset -g theme_display_rw no\n```\n\n__Joker__\n\n![joker](https://user-images.githubusercontent.com/195790/96945002-0820eb80-150f-11eb-91fe-ecfa0e2b9131.png)\n\n```fish\nset theme_primary                                   1eb980\nset theme_secondary                                 ffcf44\nset theme_primary_variant                           045d56\nset theme_secondary_variant                         ff6859\nset theme_hilight                                   b15dff\n\nset -g theme_color_user                             $theme_hilight\nset -g theme_color_host                             $theme_primary_variant\nset -g theme_color_separator                        brblack\nset -g theme_color_normal                           normal\nset -g theme_color_time                             $theme_secondary_variant\nset -g theme_color_path                             $theme_primary\nset -g theme_color_prompt                           $theme_secondary_variant\nset -g theme_color_virtualenv                       $theme_secondary\nset -g theme_color_status_prefix                    $theme_hilight\nset -g theme_color_status_jobs                      $theme_primary\nset -g theme_color_status_rw                        $theme_primary\nset -g theme_display_group                          no\nset -g theme_prompt_segment_separator_color         $theme_primary\nset -g theme_prompt_userhost_separator              '.'\nset -g __fish_git_prompt_char_branch_begin          '['\nset -g __fish_git_prompt_char_branch_end            ']'\nset -g __fish_git_prompt_color_branch_begin         brblack\nset -g __fish_git_prompt_color_branch_end           brblack\nset -g __fish_git_prompt_color_branch               $theme_secondary\n\nset -gx fish_prompt_pwd_dir_length                  1\nset -g theme_display_jobs_always                    yes\n```\n\n## License\n\nkawasaki is released under [The MIT License (MIT)][license]\n\nCopyright (c) 2016 Beau Hastings\n\n[license]:    /LICENSE\n[fish]:       https://github.com/fish-shell/fish-shell\n[omf]:        https://github.com/oh-my-fish/oh-my-fish\n[screenshot]: https://cloud.githubusercontent.com/assets/195790/20061473/9545bd4c-a4c5-11e6-83da-8b0a954b8a5a.gif\n[bira]:       https://github.com/oh-my-fish/theme-bira\n[dotfiles]:   https://github.com/oh-my-fish/oh-my-fish#dotfiles\n","repository_updated":0},"kovial":{"name":"kovial","description":"","image":"https://user-images.githubusercontent.com/28943200/143537236-36de1ae6-dca1-454a-93e0-d06dfb0cff3c.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"sokryptk","repository":"https://github.com/sokryptk/kovial","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1661349240,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### kovial\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install kovial\n```\n\n\n## Features\n\n* __jovial with a k__\n\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://user-images.githubusercontent.com/28943200/143537236-36de1ae6-dca1-454a-93e0-d06dfb0cff3c.png\"\u003e\n\u003c/p\u003e\n\n\n# License\n\n[MIT][mit] © [krypticallusion][author]\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/krypticallusion\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"krisleech":{"name":"krisleech","description":"A Theme for Fish Shell","image":"https://f.cloud.github.com/assets/66143/930316/732ea576-0008-11e3-964c-98410709d00c.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-krisleech","license":"MIT","dependencies":[],"stars":5,"forks":3,"watchers":5,"issues":0,"updated":1654126260,"full_description":"## krisleech\n\nA very simple theme optimized for Git. Less is more.\n\n![krisleech theme](https://f.cloud.github.com/assets/66143/930316/732ea576-0008-11e3-964c-98410709d00c.png)\n\n![krisleech theme](https://f.cloud.github.com/assets/66143/930317/73446046-0008-11e3-8ecb-2abec0058b83.png)\n\n### Characteristics\n\n* Current working directory\n* Branch name\n* Dirty working directory (✘)\n","repository_updated":0},"l":{"name":"l","description":"","image":"http://f.cl.ly/items/2J3M0f2X1j3u471y080I/2.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-l","license":"MIT","dependencies":[],"stars":1,"forks":9,"watchers":1,"issues":2,"updated":1617812159,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/fish-shell/omf\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\u003e A theme inspired by [oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh/blob/master/themes/lambda.zsh-theme)'s [lambda](http://zshthem.es/screenshots/lambda.png) theme.\n\n## Install\n\n```fish\n$ omf theme l\n```\n\n## Features\n\n* Current branch\n* Dirty working directory\n* Working directory\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"http://f.cl.ly/items/2J3M0f2X1j3u471y080I/2.png\"\u003e\n\u003cimg src=\"hhttp://f.cl.ly/items/2S25360U1p360E0D2u2g/3.png\"\u003e\n\u003cimg src=\"http://f.cl.ly/items/1w0s0Q3x3r2Z1F1l011k/4.png\"\u003e\n\u003c/p\u003e\n\n## Configuration\n\nOnly if fish_theme_l_right_prompt variable is set true within config.fish:\n```fish\nset theme_display_rbenv 'yes'\nset theme_display_rbenv_gemset 'yes'\n# if you want to display rbenv ruby version only within directories that contain Gemfile\nset theme_display_rbenv_with_gemfile_only 'yes'\n```\n\n* Rbenv Ruby Version\n* Rbenv Ruby Gemset\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"http://f.cl.ly/items/0f0k3o2L3y2q1L3g1R1X/5.png\"\u003e\n\u003c/p\u003e\n\n# License\n\n[MIT][mit] © [bpinto][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/bpinto\n[contributors]:   https://github.com/oh-my-fish/theme-default/graphs/contributors\n[omf-link]:       https://www.github.com/fish-shell/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/oh-my-fish/theme-default.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/oh-my-fish/theme-default\n\n","repository_updated":0},"lambda":{"name":"lambda","description":"lambda theme for oh my fish","image":"https://raw.githubusercontent.com/hasanozgan/theme-lambda/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"netologist","repository":"https://github.com/netologist/theme-lambda","license":"MIT","dependencies":[],"stars":56,"forks":41,"watchers":56,"issues":5,"updated":1665385654,"full_description":"### Lambda\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n\n\u003cbr/\u003e\n\n#### Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/hasanozgan/theme-lambda/master/screenshot.png\"\u003e\n\u003c/p\u003e\n\n###### Added VirtualEnv Support\n![preview](https://i.imgur.com/fWurs47.png)\n\n###### Added Mode Indicator Support\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/js402882/theme-lambda/master/screenshot-mode-indicator.png\"\u003e\n\u003c/p\u003e\n\n#### Install\n\n#### [Fisherman]\n\n```fish\nfisher i lambda\n```\n\n##### [Oh-My-Fish]\n\n```fish\nomf install lambda\n```\n\n##### [home-manager]\n```nix\nplugins = [\n  {\n    name = \"theme-lambda\";\n    src = pkgs.fetchFromGitHub {\n      owner = \"hasanozgan\";\n      repo = \"theme-lambda\";\n      rev = \"1d599f05dc560d7c9fa0660fa72e2d32251f6f65\";\n      sha256 = \"1s0pyc7nlxlynszlskmzrg57rq2nszbkzjq714hl15g1 gxp95k\";\n    };\n  }\n];\n```\n\n\n##### Fish Mode Indicator Installation Note\n\nDisable default Fish mode indicator via\n\n```\nfunction fish_mode_prompt; end\nfuncsave fish_mode_prompt\n```\n\nDetails in https://fishshell.com/docs/current/cmds/fish_mode_prompt.html\n\n\n\n\n[Fisherman]: https://github.com/fisherman/fisherman\n[Oh-My-Fish]: https://github.com/oh-my-fish/oh-my-fish\n[home-manager]: https://github.com/nix-community/home-manager\n","repository_updated":0},"lambda-zero":{"name":"lambda-zero","description":"","image":"https://raw.githubusercontent.com/marcin-dudek/lambda-zero/master/screenshot.png","latest_version":{"version":"1.0.1","description":"Lambda zero is released! Now with screenshot!","commit_hash":"main","release_date":1649332198},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"main","description":"Lambda zero is released! Now with screenshot!","release_date":1649332198,"version":"1.0.1"},{"commit_hash":"main","description":"First version of lambda zero. ","release_date":1649331513,"version":"1.0.0"}],"tags":[],"author":"marcin-dudek","repository":"https://github.com/marcin-dudek/lambda-zero","license":"","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1649326613,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### lambda-zero\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\nomf install lambda-zero\n```\nor\n\n```fish\nomf install marcin-dudek/lambda-zero\n```\n\n## Features\n\n* Awesome λ prompt.\n* Minimalistic theme.\n* Current time.\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"./screenshot.png\" alt=\"screenshot to be done\"\u003e\n\u003c/p\u003e\n\n\n# License\n\n[MIT][mit] © [Marcin Dudek][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/marcin-dudek\n[contributors]:   https://github.com/marcin-dudek/lambda-zero/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"lavender":{"name":"lavender","description":"A elegant theme for Oh My Fish","image":"https://i.imgur.com/Z4gjCyU.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"tungpun","repository":"https://github.com/tungpun/fish-theme-lavender","license":"MIT","dependencies":[],"stars":0,"forks":5,"watchers":0,"issues":0,"updated":1650958932,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### lavender\n\u003e A elegant theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install lavender\n```\n\n\n## Features\n\nBased on clearance theme. Display the following bits on the left:\n* Username\n* Hostname\n* Current directory name\n* Virtualenv name (if applicable, see https://github.com/adambrenecki/virtualfish)\n* Git branch and dirty state (if inside a git repo)\n\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://i.imgur.com/Z4gjCyU.png\"\u003e\n\u003c/p\u003e\n\n\n# License\n\n[MIT][mit] © [tungpun][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/tungpun/\n[contributors]:   https://github.com/tungpun/fish-theme-lavender/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"lolfish":{"name":"lolfish","description":"the most colorful fish shell prompt","image":"http://i.imgur.com/InJELf3.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"er0","repository":"https://github.com/er0/lolfish","license":"MIT","dependencies":[],"stars":28,"forks":8,"watchers":28,"issues":4,"updated":1667161819,"full_description":"# lolfish\n\nsuch rainbow, wow.\n\n![lolfish][screenshot1]\n![lolfish][screenshot2]\n\n## Easy Install\n\nUsing [oh-my-fish](https://github.com/oh-my-fish/oh-my-fish):\n\n```Bash\nomf install lolfish\n```\n## Less Easy Install\n\nDownload and source the prompt file\n\n```Bash\ncurl -L https://github.com/er0/lolfish/raw/master/lol.fish -o $HOME/.config/fish/functions/lol.fish \n```\n\n## Features\n\n  * Only the best rainbow xterm colors!\n  * git branch/status info\n  * Return value from the last command\n  * Right prompt displays number of backgrounded jobs, tmux sessions, and the time.\n\n[screenshot1]: http://i.imgur.com/InJELf3.png\n[screenshot2]: http://i.imgur.com/v6aI9AB.png\n","repository_updated":0},"mars":{"name":"mars","description":"","image":"https://raw.githubusercontent.com/oh-my-fish/theme-mars/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-mars","license":"MIT","dependencies":[],"stars":5,"forks":4,"watchers":5,"issues":1,"updated":1617812161,"full_description":"## mars\nBased on the eclm theme (which was based on the robbyrussell theme).\n\n![mars theme](https://raw.githubusercontent.com/oh-my-fish/theme-mars/master/screenshot.png)\n\n\n#### Characteristics\n\n* Displays git information in the command prompt when available.\n* Indicates 'master' branch with a distinctive color, encouraging the use of feature-branches (useful when development is done using pull requests)\n* If the last command was failed, the indicator would be red, otherwise it's green\n","repository_updated":0},"mint":{"name":"mint","description":"Fish prompt theme with Linux Mint default bash $PS1","image":"https://raw.githubusercontent.com/MortalHappiness/theme-mint/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"MortalHappiness","repository":"https://github.com/MortalHappiness/theme-mint","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1643545572,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### mint fish theme\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr /\u003e\n\n\n## Install\n\n```fish\nomf install mint\n```\n\n\n## Features\n\n* When not in git folder, looks exactly the same as the default Linux Mint bash $PS1\n* When in git folder\n  * Show red branch name when the working directory is dirty\n  * Show green branch name when all files are in the staging area\n  * Show bold cyan branch name when the working directory is clean\n* Show red status code when the previous command has error\n* Display hostname in red when in a SSH session\n* Show current timestamp on the right prompt\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n  \u003cimg src=\"screenshot.png\"\u003e\n\u003c/p\u003e\n\n## Credits\n\n* Based on https://github.com/ribugent/theme-gentoo and modified to follow Linux Mint default bash $PS1\n* Git status function modified from https://github.com/oh-my-fish/theme-gitstatus\n* [Linux Mint](https://linuxmint.com/) is a Linux distribution.\n\n# License\n\n[MIT][mit] © [MortalHappiness][author]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"mish":{"name":"mish","description":"A minimal fish theme with just the essentials","image":"https://raw.githubusercontent.com/Mark1626/theme-mish/master/mish.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","fish-theme","omf","omf-theme"],"author":"Mark1626","repository":"https://github.com/Mark1626/theme-mish","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1560167830,"full_description":"# mish\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\nA minimal fish theme with just the essentials\n\n### Feature\n\n![alt text](./mish.png)\n\n#### Left Prompt\n- Branch name, `*` is branch is dirty\n- Displays number of commits the repository is above or behind the repository\n- Shows only the folder name\n\n#### Right Prompt\n- Status code\n- Time stamp\n","repository_updated":0},"mokou":{"name":"mokou","description":"minimal fish theme","image":"http://i.imgur.com/lzjEgeO.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-mokou","license":"MIT","dependencies":[],"stars":3,"forks":1,"watchers":3,"issues":0,"updated":1617812164,"full_description":"# mokou\npossibly the dumbest theme for oh-my-fish\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"http://i.imgur.com/lzjEgeO.png\"\u003e\n\u003c/p\u003e\n\nhow it's structured: `{directory name} \u003e {prompt}`\n\n```fish\n$ omf install mokou\n```\n\n[MIT][mit] © [tentakel][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/tentakel\n[contributors]:   https://github.com/tentakel/mokou/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n","repository_updated":0},"mtahmed":{"name":"mtahmed","description":"","image":"https://cloud.githubusercontent.com/assets/1272018/5965709/13d07f68-a7f6-11e4-9872-7936516ba258.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-mtahmed","license":"MIT","dependencies":[],"stars":4,"forks":2,"watchers":4,"issues":0,"updated":1670483047,"full_description":"## mtahmed\n\nMinimal theme.\n\n![mtahmed](https://cloud.githubusercontent.com/assets/1272018/5965709/13d07f68-a7f6-11e4-9872-7936516ba258.png)\n\n#### Left prompt\n\n- First 10 characters of hostname if `ssh`'ed\n- Current directory name (not path)\n- ─╼ (cute little unicode characters)\n\n#### Right prompt\n\n- Exit code of the previous command\n","repository_updated":0},"nai":{"name":"nai","description":"","image":"https://cloud.githubusercontent.com/assets/1272018/5961225/116d0a7a-a7d3-11e4-88a6-43da003ddc6c.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-nai","license":"MIT","dependencies":[],"stars":4,"forks":4,"watchers":4,"issues":1,"updated":1636363000,"full_description":"## nai\nA minimalist fish theme which displays git branch and status information.\n\n![nai](https://cloud.githubusercontent.com/assets/1272018/5961225/116d0a7a-a7d3-11e4-88a6-43da003ddc6c.png)\n\n#### Characteristics\n\n##### Left Prompt\n\n* Truncated CWD (just the current folder name)\n* Git branch and dirty state (if applicable)\n","repository_updated":0},"neel":{"name":"neel","description":"","image":"https://user-images.githubusercontent.com/71593494/138031763-facac119-ad6f-427f-a6d2-f0628828feab.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"neelshah2409","repository":"https://github.com/neelshah2409/neel","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1634708035,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/fish-shell/omf\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\u003e neel theme for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf theme neel\n```\n\n## Features\n* Minimal Prompt\n* All the things you need to know about Git in a glance.\n* A subtle timestamp hanging out off to the right.\n* Previous command status.\n* Displays git information in the command prompt when available.\n* Displays the current time.\n* Displays current branch name\n* By default it shows only the name of the current directory but it provides a flag `theme_complete_path` to display abbreviated current working directory instead.\n\n## Screenshot\n\n\n- ![image](https://user-images.githubusercontent.com/71593494/138031763-facac119-ad6f-427f-a6d2-f0628828feab.png)\n  \n- ![Screenshot (786)](https://user-images.githubusercontent.com/71593494/138031907-a55cfa52-5db5-4793-9508-38ecfd3dd81f.png)\n  \n- ![Screenshot (788)](https://user-images.githubusercontent.com/71593494/138031938-b80a153f-ed8e-411f-860a-9f86073617d4.png)\n  \n\n\n## Configuration\n\nOnly display the folder name:\n```\n  set -g theme_short_path yes\n```\n\n# License\n\n[MIT][mit] © [neelshah2409][author] \n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/neelshah2409\n[contributors]:   https://github.com/oh-my-fish/theme-default/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/oh-my-fish/theme-default.svg?style=flat-square\n[travis-link]:    https://travis-ci.org/oh-my-fish/theme-default\n","repository_updated":0},"nelsonjchen":{"name":"nelsonjchen","description":"A port/adaptation of @re5et's zsh theme for me (first) and oh-my-fish (second)","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"nelsonjchen","repository":"https://github.com/nelsonjchen/omf-theme-nelsonjchen","license":"MIT","dependencies":[],"stars":7,"forks":6,"watchers":7,"issues":0,"updated":1595944977,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\u003e nelsonjchen theme for [Oh My Fish][omf-link]. Based on re5et in Oh-My-Zsh.\n\n## Install\n\n```fish\n$ omf u nelsonjchen\n```\n\n## Features and Differences\n\n* Pretty colors\n* Two line prompt\n* Git Prompt using off-the-shelf fish functions\n  * Note that the symbology, colors, and features are more than the `zsh` version and they don't match up 1-to-1. For example, checking out a tag will show the tag name in `fish` but the re5et version in `zsh` will simply show the commit ID. This was one such freebie amongst many I just left in while porting since the `fish` script was giving it to me for free anyway. It is still pretty close though.\n* Red user prompt if `root`\n* 12 hour clock\n  * re5et: 24 hour clock\n* MM DD YY date format\n  * re5et: YY MM DD date format\n* Title Setting to the `prompt_pwd` function in fish for screen, tmux, and non-terminal multiplexer.\n  * This is derived from [@chgu82837's theme](https://github.com/chgu82837/theme-PastFish/blob/39af8e2885e308501bb0afa9dedab193a8722cfe/fish_prompt.fish#L82-L90)\n\n## Omissions from the re5et version\n\n* Trimming down the working directory display only works on `~`. The original re5et prompt would also trim based on the current environment variables set. For example, if you had the environment variable `FOO` set to `/usr/local` and you did `cd /usr/local`, you would see `$FOO/` in the prompt as the current working directory. I'm not sure how I would get this working. `fish` does appear to have a condensation function but it goes beyond simple environment variable replacement and I can't figure out how to turn it off.\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg\nsrc=\"https://cloud.githubusercontent.com/assets/5363/12106487/fe8b3c30-b314-11e5-9cbe-8b0e57dde741.png\"\u003e\n\u003c/p\u003e\n\n# License\n\n[MIT][mit] © [Nelson Chen][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/nelsonjchen\n[contributors]:   https://github.com/nelsonjchen/omf-theme-nelsonjchen/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[travis-badge]:   http://img.shields.io/travis/nelsonjchen/omf-theme-nelsonjchen.svg?style=flat-square\n","repository_updated":0},"neolambda":{"name":"neolambda","description":"Unofficial fork 🍴 of lambda theme for oh-my-fish","image":"https://i.imgur.com/qgKd2HV.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","oh-my-fish","themes"],"author":"ipatch","repository":"https://github.com/ipatch/theme-neolambda","license":"MIT","dependencies":[],"stars":6,"forks":4,"watchers":6,"issues":2,"updated":1668632886,"full_description":"# NeoLambda\n\n\u003e The unofficial fork of the [omf][lnk1] [lambda][lnk2] theme\n\n[lnk1]: \u003chttps://github.com/oh-my-fish/oh-my-fish\u003e\n[lnk2]: \u003chttps://github.com/hasanozgan/theme-lambda\u003e\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n\n\u003ca id=\"featurecast\"\u003e\u003c/a\u003e\n\n## Featurecast 🎥\n\n[![asciicast](https://asciinema.org/a/211469.svg)](https://asciinema.org/a/211469)\n\n## Gif\n\n\u003cdetails\u003e\n\u003csummary\u003eAn animated GIF deoming some of the features provided by this theme\u003c/summary\u003e\n\u003cimg src=\"https://i.imgur.com/qgKd2HV.gif\" width=\"640\"\u003e\n\u003c/details\u003e\n\u003cbr\u003e\n\u003cbr\u003e\n\n\u003e To avoid [double printing](https://raw.githubusercontent.com/ipatch/theme-lambda/master/lib/virtualenv-double-prompt.png) of the virtualenv name in prompt add the below to `config.fish`\n\n```shell\nset -gx VIRTUAL_ENV_DISABLE_PROMPT 1\n```\n\n\u003ca id=\"install\"\u003e\u003c/a\u003e\n\n## Install\n\n\u003ca id=\"install-omf\"\u003e\u003c/a\u003e\n\n### [Oh-My-Fish](https://github.com/oh-my-fish/oh-my-fish)\n\n```shell\necho \"install omf first\"\ncurl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install | fish\n\nomf install neolambda\n```\n\n## Testing new features\n\nthe quickest way i found to test a PR or feature is to pull in a docker container, for my use case `archlinux` and then install `which`, and `git` using pacman followed by omf and this theme `neolambda`.\n\n## TODOs\n\n\u003ca name=\"todos\"\u003e\u003c/a\u003e\n\n- [ ] when working with cmake based projects and out of source build dirs it'd be nice to print the current git branch within the build dir for managing multi build dirs and git forks with branches\n- [ ] look into creating project based icons, ie. replace `λ` with a green box if inside a node project, ie. if the shell/theme detects a `package.json` file. \n- [ ] use command+right-arrow to toggle the display of the `fish_right_prompt.fish`\n    - or possible control+\\\n- [ ] experiment with creating an animated svg to replace / complement the animated gif\n  `cat myrecrod.cast | svg-term --out myrecord.svg --window`\n- [ ] when working with subshells add a super/sub script to the `λ` to aid in knowing which subshell _one_ is working in \n","repository_updated":0},"numist":{"name":"numist","description":"","image":"","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-numist","license":"MIT","dependencies":[],"stars":1,"forks":2,"watchers":1,"issues":1,"updated":1617812171,"full_description":"","repository_updated":0},"ocean":{"name":"ocean","description":"","image":"https://cloud.githubusercontent.com/assets/129920/3533761/4702cc78-07d9-11e4-826f-e9f797e4bfa8.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-ocean","license":"MIT","dependencies":[],"stars":7,"forks":8,"watchers":7,"issues":1,"updated":1660565670,"full_description":"## ocean\n\nA fish theme with ocean in mind.\n\n\n![Preview](https://cloud.githubusercontent.com/assets/129920/3533761/4702cc78-07d9-11e4-826f-e9f797e4bfa8.png)\n\n\nUnicode-compatible fonts and terminals is required.\n\nI would recommend iTerm2 + Solarized Dark for Mac users.\n\nThis theme is based loosely on [agnoster](https://gist.github.com/agnoster/3712874)\n\n#### Characteristics\n* Show a radioactive symbol (☢) when gain the root privileges (It's dangerous!)\n* Current python virtualenv (if applicable)\n* The anchor (⚓) turns red if the previous command failed\n* Full path of current working directory\n* Show the Git branch and dirty state (if applicable)\n* Show **User@Hostname** if user is not the default user. Set the following two lines in your config.fish to turn on this feature:\n    \n    ```fish\n    set -g theme display_user yes\n    set -g default_user your_default_username\n    ```\n\n#### Troubleshooting in iTerm\nIf you see a colored anchor icon instead of the white one, this is because your system font is lacking the anchor icon, and iTerm defaults to the Apple Emoji Font. To get the right icon, either add it to your current font, or chose a powerline font that has it (like Meslo for Powerline, available in https://github.com/powerline/fonts), and select it for your Non-ASCII font.\n","repository_updated":0},"one":{"name":"one","description":"Personal preference theme for fish shell (based on Toaster)","image":"http://stuffs.fivepointseven.com/i/fish-one-screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"rdev","repository":"https://github.com/rdev/omf-theme-one","license":"MIT","dependencies":[],"stars":0,"forks":3,"watchers":0,"issues":2,"updated":1643477749,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### One v2\n\u003e A theme for [Oh My Fish](https://github.com/oh-my-fish/oh-my-fish).\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install one\n```\n\n### Note for macOS users\nIf you're getting a `expr: syntax error` try expr from coreutils package.\n\nIf you're getting an `Array index out of bounds` error run `brew install --with-default-names gnu-sed`.\n\n## Features\n\n* Git ahead/behind indicator with number of commits\n* Git status indicators\n* Git branch info\n* Abreviated working directory\n* Node.js version indicator\n* SSH user/hostname information\n* Prompt sign turns red if previous command failed\n* Prompt sign turns double and yellow in superuser mode\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n  \u003ca href=\"http://stuffs.fivepointseven.com/i/fish-one-screenshot.png\"\u003e\n    \u003cimg src=\"http://stuffs.fivepointseven.com/i/fish-one-screenshot.png\"\u003e\n  \u003c/a\u003e\n\u003c/p\u003e\n\n\nForked from [Toaster](https://github.com/oh-my-fish/theme-toaster)\n\nAesthetic stolen from [Pure](https://github.com/sindresorhus/pure)\n\n# License\n\n[MIT][mit] © [Max Rovensky](http://github.com/rdev)\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/rdev\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"perryh":{"name":"perryh","description":"","image":"http://perryhuang.com/stuff/perryh_fish.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-perryh","license":"MIT","dependencies":[],"stars":1,"forks":1,"watchers":1,"issues":0,"updated":1617812175,"full_description":"## perryh\n\nThis is similar to godfat's gitstatus theme, but mainly includes red, white, cyan, and yellow.\n\n![perryh](http://perryhuang.com/stuff/perryh_fish.png)\n","repository_updated":0},"pie":{"name":"pie","description":"A minimalist developer-friendly shell prompt for fish shell","image":"https://i.imgur.com/UQKCSsm.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"grissius","repository":"https://github.com/grissius/theme-pie","license":"MIT","dependencies":[],"stars":8,"forks":1,"watchers":8,"issues":1,"updated":1669562121,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### 🥧 πie\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\n\u003cbr/\u003e\n\nA minimalist developer-friendly shell prompt for fish shell\n\n## Install\n\n```fish\n$ omf install pie\n$ omf theme pie\n```\n\n## Features\n\n* 🎨 Native colors (changes with your preferences)\n* ⏰ Human readable execution time of last command\n* 📂 Shortened cwd\n* ✅ Last status success\n* 🔁 Git status\n    - Current branch\n    - Untracked files `?`\n    - Stashed changes `$`\n    - Dirty working directory `●`\n    - Staged files `⨯`\n    - Upstream status `🠋`, `🠉`\n\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://i.imgur.com/UQKCSsm.gif\"\u003e\n\u003c/p\u003e\n\n\n# License\n\n[MIT][mit] © [Jaroslav Šmolík][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/grissius\n[contributors]:   https://github.com/grissius/theme-pie/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"plain.fish":{"name":"plain.fish","description":"","image":"https://raw.githubusercontent.com/changyuheng/fish-theme-plain/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"changyuheng","repository":"https://github.com/changyuheng/theme-plain.fish","license":"MPL-2.0","dependencies":[],"stars":3,"forks":4,"watchers":3,"issues":0,"updated":1658758960,"full_description":"[![Slack Room][slack-badge]][slack-link]\n\n# plain\n\nColorful git-aware plain text prompt\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/changyuheng/fish-theme-plain/master/screenshot.png\"\u003e\n\u003c/p\u003e\n\n## Features\n\n* No need to use a patched font\n* Colorful\n* Not folding path\n* Detecting remote logged in and UID\n* Integrates Git\n\n## Install\n\nWith [Fisherman]\n\n```\nfisher i plain\n```\n\n[slack-link]: https://fisherman-wharf.herokuapp.com/\n[slack-badge]: https://img.shields.io/badge/slack-join%20the%20chat-00B9FF.svg?style=flat-square\n[Fisherman]: https://github.com/fisherman/fisherman\n","repository_updated":0},"pure":{"name":"pure","description":"Pretty, minimal, and fast prompt for Fish shell inspired by sindresorhus/pure","image":"","latest_version":{"version":"v4.4.0","description":"\u003e As for previous features, the customization is opt-in, and it's [up to the user to configure it](/pure-fish/pure/#paintbrush-configuration).\r\n\r\n## 🐋 Container detection and prefix\r\n\r\nThe container detection is enabled by default, but you need to be [inside a container](https://github.com/pure-fish/pure/blob/5ec00469639a68c5cf164f3e2c55bda77d62725b/functions/_pure_is_inside_container.fish) to see its effect:\r\n\r\n![setting container prefix](https://user-images.githubusercontent.com/1212392/207707944-14b9b032-21c6-4136-8b1a-770df642327b.gif)\r\n\r\n### Default settings\r\n\r\n```fish\r\npure_enable_container_detection true\r\npure_symbol_container_prefix \"\" # suggestion: '🐋' or '📦'\r\n```\r\n\r\n### Usage\r\n\r\nThe default symbol is an empty string, you will need to set what you want like:\r\n\r\n```console\r\n❯ set --universal pure_symbol_container_prefix '🐋'\r\n```\r\n\r\n## :computer: SSH detection and prefix\r\n\r\nThe SSH detection is enabled by default, but you need to be [inside a container](https://github.com/pure-fish/pure/blob/5ec00469639a68c5cf164f3e2c55bda77d62725b/functions/_pure_prompt_jobs.fish) to see its effect:\r\n![preview-v4 4 0-ssh](https://user-images.githubusercontent.com/1212392/207710506-692e8a1e-d945-46df-af9f-4b1339b3024d.gif)\r\n\r\n\r\n### Default settings\r\n\r\n```fish\r\n_pure_set_default pure_symbol_ssh_prefix \"\" # suggestion: 'ssh:/' or '🔗🔐🔒🌐'\r\n```\r\n\r\n### Usage\r\n\r\nThe default symbol is an empty string, you will need to set what you want like:\r\n\r\n```console\r\n❯ set --universal pure_symbol_ssh_prefix 'ssh:/'\r\n```\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install pure-fish/pure","commit_hash":"master","release_date":1671049643},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"\u003e As for previous features, the customization is opt-in, and it's [up to the user to configure it](/pure-fish/pure/#paintbrush-configuration).\r\n\r\n## 🐋 Container detection and prefix\r\n\r\nThe container detection is enabled by default, but you need to be [inside a container](https://github.com/pure-fish/pure/blob/5ec00469639a68c5cf164f3e2c55bda77d62725b/functions/_pure_is_inside_container.fish) to see its effect:\r\n\r\n![setting container prefix](https://user-images.githubusercontent.com/1212392/207707944-14b9b032-21c6-4136-8b1a-770df642327b.gif)\r\n\r\n### Default settings\r\n\r\n```fish\r\npure_enable_container_detection true\r\npure_symbol_container_prefix \"\" # suggestion: '🐋' or '📦'\r\n```\r\n\r\n### Usage\r\n\r\nThe default symbol is an empty string, you will need to set what you want like:\r\n\r\n```console\r\n❯ set --universal pure_symbol_container_prefix '🐋'\r\n```\r\n\r\n## :computer: SSH detection and prefix\r\n\r\nThe SSH detection is enabled by default, but you need to be [inside a container](https://github.com/pure-fish/pure/blob/5ec00469639a68c5cf164f3e2c55bda77d62725b/functions/_pure_prompt_jobs.fish) to see its effect:\r\n![preview-v4 4 0-ssh](https://user-images.githubusercontent.com/1212392/207710506-692e8a1e-d945-46df-af9f-4b1339b3024d.gif)\r\n\r\n\r\n### Default settings\r\n\r\n```fish\r\n_pure_set_default pure_symbol_ssh_prefix \"\" # suggestion: 'ssh:/' or '🔗🔐🔒🌐'\r\n```\r\n\r\n### Usage\r\n\r\nThe default symbol is an empty string, you will need to set what you want like:\r\n\r\n```console\r\n❯ set --universal pure_symbol_ssh_prefix 'ssh:/'\r\n```\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install pure-fish/pure","release_date":1671049643,"version":"v4.4.0"},{"commit_hash":"master","description":"### :bug: Remove unwanted character\r\n\r\n* [x]  fix(prompt): remove unwanted characters in my prompt #305 \r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install pure-fish/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @patricklewis for raising the #305","release_date":1666113179,"version":"v4.3.1"},{"commit_hash":"master","description":"### :bug: Remove unwanted character\r\n\r\n* [x]  fix/301 voidlinux container detection #302 \r\n\r\n### :black_flag: Add flag to disable container detection\r\n\r\nLet user disable container detection as detecting this is [not an exact science](https://stackoverflow.com/questions/57863638/).\r\n\r\n| Option                                         | Default | Description                                                                                     |\r\n| :--------------------------------------------- | :------ | :---------------------------------------------------------------------------------------------- |\r\n| **`pure_enable_container_detection`**           | `true` | `false`: Do not check if run in container (e.g. `docker`, `podman`, `LXC`/`LXD`, etc.).\u003cbr/\u003e:warning: Detection is a bit [tricky across OSes][container-detection].                                                         |\r\n\r\nEnable feature\r\n\r\n    ❯ set --universal pure_enable_container_detection true\r\n\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install pure-fish/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @0-st for #301 ","release_date":1666113170,"version":"v4.3.0"},{"commit_hash":"master","description":"## :bug: Fix: Linux-only methods to detect container on MacOS \r\n\r\nIssue #295 was caused by functions that expected `/proc/` to exist on the system to be executed. However, those are Linux-only approach.\r\nSo, [running them only for Linux][skip-code] declared OS (cf. `uname -s`) fixed the issue in #298 .\r\n\r\n ### :arrow_down: Installation\r\n The project has a new home, thanks to @rafaelrinaldi. It's now under pure-fish organization:\r\n\r\n    fisher install pure-fish/pure\r\n\r\n\r\n###  :clap: Thanks\r\n\r\n* @Defman21 @nertzy @externl for helping the resolution\r\n* @orf for making me aware of `fisher install pure-fish/pure@\u003cBRANCH_NAME\u003e`\r\n\r\n[skip-code]: https://github.com/pure-fish/pure/pull/298/files#diff-64090762fd2ecc9ed782569b4def0e5c41e62bd548dc0c944e3bf5e540865932R10-R18\r\n","release_date":1665208301,"version":"v4.2.3"},{"commit_hash":"master","description":"### Fix MacOS container detection\n\nDetecting if we run inside a container or a bare OS require hacks specific to OS. The `_pure_detect_container_by_pid_method` isn't compatible with MacOS, as it's based on `/proc/` contains.\n\n* [x] warning: An error occurred while redirecting file '/proc/1/cgroup' #295 \n\n### :arrow_down:  Installation\n\nThe project has a new home, thanks to @rafaelrinaldi. It's now under pure-fish organization:\n\n    fisher install pure-fish/pure\n\n### :clap: Thanks\n\n* @Defman21 for spotting the issue\n","release_date":1665065570,"version":"v4.2.2"},{"commit_hash":"master","description":"### 🐍 Displaying conda/virtualenv env name with correct spacing\r\n* [x]  Displaying conda/virtualenv env name has incorrect spacing #276 #285\r\n\r\n### :arrow_down:  Installation\r\n\r\nThe project has a new home, thanks to @rafaelrinaldi. It's now under pure-fish organization:\r\n\r\n    fisher install pure-fish/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @speyejack  for the fix in #285","release_date":1665065289,"version":"v4.2.1"},{"commit_hash":"master","description":"\r\n### :recycle: Migrate to fishtape 3\r\n* [x] Tests and CI have been migrated to [fishtape](https://github.com/jorgebucaran/fishtape/) 3 #275 \r\n* [x] supported version are `3.1.2` and `3.3.1` (I will add CI for newer in next releases)\r\n* [x] Improve container detection method (by PID and by cgroup) 6fbf48369548\r\n\r\n### :arrow_down:  Installation\r\n\r\nThe project has a new home, thanks to @rafaelrinaldi. It's now under pure-fish organization:\r\n\r\n    fisher install pure-fish/pure","release_date":1665052076,"version":"v4.2.0"},{"commit_hash":"master","description":"### Feature\r\n* [x] Show-username-host-if-inside-a-container #271 \r\n\r\n### :arrow_down:  Installation\r\n\r\nThe project has a new home, thanks to @rafaelrinaldi. It's now under pure-fish organization:\r\n\r\n    fisher install pure-fish/pure","release_date":1665051664,"version":"v4.1.0"},{"commit_hash":"master","description":"## Being Human\r\n\r\n### Home Mean You are Welcome\r\n\r\nAs you might have realized, @rafaelrinaldi [transferred the project](https://github.com/pure-fish/pure/issues/249) from his personal repository to https://github.com/pure-fish/pure/ organization.\r\n\r\nThe goals of this transfer are:\r\n* To increase the [bus factor](https://www.wikiwand.com/en/Bus_factor) (@edouard-lopez, @rafaelrinaldi and @andreiborisov are owners now) ;\r\n* Share permissions to update project settings more easily. \r\n* Onboard new contributors ;\r\n* Configure template/metadata/open collective, etc.\r\n\r\nIt's also a way to reflect that the project evolved from a pet-project to a community project with almost ~900 :star: \r\n\r\n### 💓 Project Pulse\r\n\r\nThis is a long pending release note, you are probably using a more recent version (e.g. `4.1.1`). At the time of the transfer request I was pretty active maintaining the project, but by the time we achieve it I had other priorities pop-up 🧒👶.\r\n\r\nThus, I'm publishing this release note as I'm resuming contribution. \r\n\r\nNew features and bugfixes will come in the coming weeks/months, [thanks to many contributors](https://github.com/pure-fish/pure/pulls?q=is%3Apr+sort%3Aupdated-desc+)! But before merging PRs, I will first focus on making the codebase stable and testable again by finishing the [migration to Fishtape 3](https://github.com/pure-fish/pure/pull/275).\r\n\r\n\r\n## Release\r\n\r\n\u003e This major release break some variables related to `SSH` to introduce support for containers (`docker` and `lxc`).\r\nBe sure to **read the Migration guide section carefully** :arrow_down: .\r\n\r\n### Features\r\n\r\n* [x] A new home and ownership for the project! #249 \r\n* [x]  Show username@host if inside a container #241 \r\n\r\n### Fixes\r\n\r\n* [x] Migrates --quiet to -q #278 \r\n\r\n### :arrow_down: Installation\r\n\r\nThe project has a new home, thanks to @rafaelrinaldi. It's now under `pure-fish` organization:\r\n\r\n```diff\r\n-fisher install rafaelrinaldi/pure\r\n+fisher install pure-fish/pure\r\n```\r\n\r\n### :warning:  Breaking changes\r\n\r\n* [x] remove official support for OMF and Fundle #248\r\n* [x] Replace ~`_pure_prompt_ssh_host`~ by `_pure_user_at_host` to support container c074b08559 01a9b6a4a\r\n\r\n## Migration Guide `v3.x` to `v4.0`\r\n\r\nIf you **customized your `pure`** using your `~/config.fish` you must update it by renaming some variables.\r\n\r\n### :ambulance: Script\r\n\r\nWe provide [a migration script](tools/migration-to-4.0.0.fish) to help you with this tedious work:\r\n\r\n    tools/migration-to-4.0.0.fish [/path/to/your/config.fish]\r\n\r\n### Variables Renaming\r\n\r\n#### :bomb: SSH Hostname Variable\r\n```diff\r\n-pure_color_ssh_hostname\r\n+pure_color_hostname\r\n```\r\n\r\n#### :bomb: SSH At Sign (`@`) Variable\r\n```diff\r\n-pure_color_ssh_separator\r\n+pure_color_at_sign\r\n```\r\n\r\n#### :bomb: SSH Normal Username Variable \r\n```diff\r\n-pure_color_ssh_user_normal\r\n+pure_color_username_normal\r\n```\r\n\r\n#### :bomb: SSH Root Username Variable \r\n```diff\r\n-pure_color_ssh_user_root\r\n+pure_color_username_root\r\n```\r\n","release_date":1653047169,"version":"v4.0.0"},{"commit_hash":"master","description":"### 1️⃣ Add single-line prompt flag\r\n\r\nLet user have a more compact prompt, where everything is show on the same line.\r\n\r\n| Option                                         | Default | Description                                                                                     |\r\n| :--------------------------------------------- | :------ | :---------------------------------------------------------------------------------------------- |\r\n| **`pure_enable_single_line_prompt`**                        | `false` | `true`: Compact prompt as a single line |\r\n\r\n### Preview\r\n\r\n\u003e ![feature-pure_enable_single_line_prompt](https://user-images.githubusercontent.com/1212392/103821357-4d64ac00-506e-11eb-8ba5-e35ae682c6e2.gif)\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @iamajvillalobos for suggestion the feature fixes #65\r\n* @noaccOS for some inspiration in #217 \r\n\r\n--- \r\n\r\n:warning: Tests are going crazy at the moment, should be fixed once `fishtape` `3.0` is released, and we do the switch. If you encounter any problem, revert to previous version\r\n\r\n    fisher install rafaelrinaldi/pure@v3.4.2","release_date":1610051108,"version":"v3.5.0"},{"commit_hash":"master","description":"### 🐛 Fix `id: illegal option --` on MacOS\r\n\r\n[Linux and MacOS commands differ](https://stackoverflow.com/a/9805125/802365) in the options they provided, the former often providing extensions while the latter restrict itself to `POSIX`. We fallback to POSIX for `id`, `date`, `wc` and `rm` commands.\r\n\r\n### Run Tests Against MacOS\r\n\r\nI also started to extend our Github workflow so the CI run tests against MacOS.\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @nicktfried and @sgade for raising the issue #258 #260 \r\n","release_date":1609168832,"version":"v3.4.2"},{"commit_hash":"master","description":"### :rocket: Add support for showing subsecond in command duration\r\n\r\nAdd a flag to prefix prompt when logged in as root (with a customizable symbol).\r\n\r\n| Option                                         | Default | Description                                                                                     |\r\n| :--------------------------------------------- | :------ | :---------------------------------------------------------------------------------------------- |\r\n| **`pure_show_prefix_root_prompt`**             | `false` | `true`: shows prompt prefix when logged in as `root`.                                           |\r\n| **`pure_symbol_prefix_root_prompt`**   | `#`     | Prefix prompt when logged in as `root`               |\r\n| **`pure_color_prefix_root_prompt`** | `pure_color_danger` |\r\n\r\n#### Preview\r\n\r\n\u003e ![prefix_root_prompt](https://user-images.githubusercontent.com/1212392/103161205-91d68900-47de-11eb-9b6f-5533c97f3595.gif)\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n","release_date":1609027289,"version":"v3.4.1"},{"commit_hash":"master","description":"### 🐛 Fix source error when installing with fisher\r\n\r\n`Pure` was assuming that it was going to be installed in `~/.config/fish` directory, but that's not always the case (cf. #245 #250).\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @mattmc3 for the PR #251 \r\n","release_date":1608537455,"version":"v3.3.5"},{"commit_hash":"master","description":"###  Use default indicator in vi replace mode \r\n\r\nConsistent behavior with the Zsh version of `pure` (see #211)\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @NovaDev94 for spotting the issue and submitting the PR #211\r\n","release_date":1608157061,"version":"v3.3.4"},{"commit_hash":"master","description":"### 🐛 Fix sourcing error when installing\r\n\r\nPath to uninstall handler was relative to current working directory, using `$__fish_config_dir` fix the issue.\r\n\r\n### :warning: Fisher `≥4`\r\n\r\nTest are written assuming Fisher `≥4` is installed on user's machine. If that's not the case, please [update to `v4`](https://github.com/jorgebucaran/fisher).\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @externl for reporting the issue #245\r\n* @anthonyjclark for pointing the right commit\r\n\r\n","release_date":1608079769,"version":"v3.3.3"},{"commit_hash":"master","description":"### :broom: Erase pure variables in uninstall handler\r\n\r\nRegister an `uninstall` event handler for `fisher` so we clean up after ourselves.\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @jorgebucaran for the PR #243\r\n","release_date":1607974995,"version":"v3.3.2"},{"commit_hash":"master","description":"### :bug: Change default title bar separator to fix WSL2, Windows Terminal support\r\n\r\nRemove text printed before prompt on new fish session (cf. #240) due to unsupported character.\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @smorimoto for issue and PR #244\r\n","release_date":1607891918,"version":"v3.3.1"},{"commit_hash":"master","description":"### :rocket: Add support for showing subsecond in command duration\r\n\r\n| Option                                         | Default | Description                                                                                     |\r\n| :--------------------------------------------- | :------ | :---------------------------------------------------------------------------------------------- |\r\n| **`pure_show_subsecond_command_duration`**     | `false` | Show subsecond (ex. 1.5s) in command duration.                                                  \r\n\r\n![feature-show-command-duration-subsecond](https://user-images.githubusercontent.com/1212392/101897122-57e47080-3baa-11eb-9772-646bce1f27fe.gif)\r\n\r\n### :bug: Improve command duration, support subseconds with new flag\r\n\r\n- Fix command duration rounding: Duration wasn't shown when:\r\n    + When threshold = 5 (5000ms)\r\n    + When process finished in [5000, 6000) milliseconds\r\n- Fix command duration threshold: Duration wasn't shown when:\r\n    + When threshold = 5 (5000ms)\r\n    + When process finished in 1m4s (64 seconds)\r\n\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @NovaDev94 for his initial PR #213","release_date":1607685527,"version":"v3.3.0"},{"commit_hash":"master","description":"### :snake: Add support for virtualenvs created through Conda \r\n\r\nThe behavior is the same as for _virtual_env_, color is controlled by `pure_color_virtualenv` and the name is display before the prompt symbol:\r\n\r\n![feature-conda-virtual-env](https://user-images.githubusercontent.com/1212392/101155767-e34c8780-3627-11eb-928d-15d160486d4e.png)\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @smsegal for his initial PR #195 \r\n","release_date":1607079258,"version":"v3.2.0"},{"commit_hash":"master","description":"\r\n### :rocket: Add git stash indicator\r\n\r\nShows a symbol (`≡`) when there is stashed files, this is part of the `pure_enable_git` flag.\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @Arelav for his initial PR #222","release_date":1607031009,"version":"v3.1.0"},{"commit_hash":"master","description":"### :bug: Fix\r\n\r\n* Fix new version check on MacOS #233 \r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @filipebarros for helping narrow down the issue\r\n","release_date":1606831797,"version":"v3.0.1"},{"commit_hash":"master","description":"### :warning: Drop support for Fish`2.x`\r\n\r\nNothing fancy here, simply **dropping support for Fish `2.x`** as discussed in #123 and documented in [Versions Support Strategy](https://github.com/rafaelrinaldi/pure/wiki/Versions-Support-Strategy/):\r\n\r\n\u003e [We decided](https://github.com/rafaelrinaldi/pure/issues/123) to restrict our support to the **current major `Fish` version only** (currently `3.x`) as it's available to plenty of old Ubuntu releases thanks to the [official `Fish` PPA](https://launchpad.net/~fish-shell/+archive/ubuntu/release-3). \r\n\u003e \r\n\u003e As of November 2020, we should:\r\n\u003e * :x:  drop support for ~`2.5`~, ~`2.6`~  and ~`2.7.1`~ officially ;\r\n\u003e * :heavy_check_mark: set the lowest supported version to `3.0.0` ;\r\n\u003e * :tada: introduce support for `3.1.0` and above.\r\n\r\n### :earth_africa: Energy footprint \u003csup\u003e[1][1], [2][2], [3][3], [4][4]\u003c/sup\u003e\r\n\r\nIn order to **reduce our energy footprint** we will test only the [versions provided by the official PPA](https://launchpad.net/~fish-shell/+archive/ubuntu/release-3).\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n[4]: https://www.independent.co.uk/environment/global-warming-data-centres-consume-three-times-much-energy-next-decade-experts-warn-a6830086.html\r\n[3]: https://www.networkworld.com/article/3531316/data-center-power-consumption-holds-steady.html\r\n[2]: https://www.comsoc.org/publications/tcn/2019-nov/energy-efficiency-data-centers\r\n[1]: https://davidmytton.blog/how-much-energy-do-data-centers-use/","release_date":1606602485,"version":"v3.0.0"},{"commit_hash":"master","description":"### :clock3: Flag to show system time before prompt\r\n\r\n![pure_show_system_time](https://user-images.githubusercontent.com/349645/74993469-b91b3780-5410-11ea-916b-4b143501e625.png)\r\n\r\n| Option                                         | Default | Description                                                                                     |\r\n| :--------------------------------------------- | :------ | :---------------------------------------------------------------------------------------------- |\r\n| **`pure_show_system_time`** | `false` | `true`: shows system time before the prompt symbol (as `%H:%M:%S`).\r\n\r\nOption is disabled by default, to make sure it doesn't interfere with the out-of-the-box clean look.\r\n\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### :clap: Thanks\r\n\r\n* @tonylegrone for the PR #209 ","release_date":1605790521,"version":"v2.7.0"},{"commit_hash":"master","description":"### :bell:  Flag to Check for new release on startup\r\n\r\n![pure_check_for_new_release](https://user-images.githubusercontent.com/1212392/99608817-f39d1980-2a0e-11eb-8fd1-65cad4bd7342.gif)\r\n\r\n\r\nAs suggested by [@rafaelrinaldi in #123](https://github.com/rafaelrinaldi/pure/issues/123#issuecomment-453794127)\r\n\u003e I'd personally suggest current version and one prior and **print a warning for other users asking to upgrade**. It would be easier to maintain and ensure a better experience.\r\n\r\n\r\n| Option                                         | Default | Description                                                                                     |\r\n| :--------------------------------------------- | :------ | :---------------------------------------------------------------------------------------------- |\r\n| **`pure_check_for_new_release false`**         | `false`  | `true`: check repo for new release (on every shell start)\r\n\r\nAs this request can disrupt user workflow due to the HTTP request done to fetch information, **this feature is disable by default**. It's up to the user to decide if he want to enable it by editing your config.\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n","release_date":1605789534,"version":"v2.6.0"},{"commit_hash":"master","description":"### 🐛 Fix\r\n\r\n* additional check to make sure the user won't have empty colors. #207\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher install rafaelrinaldi/pure\r\n\r\n### 👏 Thanks\r\n\r\n* @andreiborisov ","release_date":1605781801,"version":"v2.5.3"},{"commit_hash":"master","description":"### 🐛 Fix\r\n\r\n* Check for existence of `conf.d` and `functions` folders during manual installation\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher add rafaelrinaldi/pure\r\n\r\n### 👏 Thanks\r\n\r\n* @ntwb","release_date":1579209195,"version":"v2.5.2"},{"commit_hash":"master","description":"### 🐛 Fix\r\n\r\n* [Fundle](https://github.com/tuvistavie/fundle) support\r\n\r\n### 🧹 Housekeeping\r\n\r\n* Moved public functions in `functions` folder for consistency\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher add rafaelrinaldi/pure\r\n\r\n### 👏 Thanks\r\n\r\n* @nesl247","release_date":1579206313,"version":"v2.5.1"},{"commit_hash":"master","description":"### 🦄 User-friendly color names in config variables\r\n\r\n* Set color variables with user-friendly names like `blue`, `magenta` or hex colors (`FF931C`, etc.).\r\n* Inherit feature colors from base colors or even your own custom color variables with instant reloading.\r\n* Use additional appearance options like `--bold`, `--background black`, etc.\r\n\r\n### 🗑 Deprication\r\n\r\nSetting color variables using control sequences like so:\r\n```\r\nset pure_color_success (set_color green)\r\n```\r\nis considered to be deprecated and will be removed in the `v3.0.0`. We plan to provide a migration script for this.\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher add rafaelrinaldi/pure","release_date":1577303272,"version":"v2.5.0"},{"commit_hash":"master","description":"### :bug: Fix\r\n\r\n* Fix empty default values for colors when the first launch is inside non-interactive terminal.\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher add rafaelrinaldi/pure","release_date":1577119583,"version":"v2.4.3"},{"commit_hash":"master","description":"### ♻️ Better variables evaluation\r\n\r\n* Evaluate inherited color variables at runtime.\r\n* Allow setting config variables both with `--global` flag in `conf.d/pure.fish` and `--universal` flag directly in terminal to save value between fish sessions.\r\n* Store default values in universal variables similar to built-in fish color variables.\r\n\r\n### :arrow_down: Installation\r\n\r\n    fisher add rafaelrinaldi/pure\r\n\r\n### 👏 Thanks\r\n\r\n* @jorgebucaran","release_date":1577119522,"version":"v2.4.2"}],"tags":["fish","fish-plugin","fish-prompt","fish-theme","prompt","shell","theme"],"author":"pure-fish","repository":"https://github.com/pure-fish/pure","license":"MIT","dependencies":[],"stars":999,"forks":126,"watchers":999,"issues":14,"updated":1672847256,"full_description":"\u003e ##### :arrow_up: Hey! Want to migrate from v3.x to v4.x? Check our [**migration guide**](https://github.com/pure-fish/pure/releases/tag/v4.0.0), done with :heart\n\n# pure [![github-ci-badge]][github-ci-link] ![fish-3]\n\n\u003e Pretty, minimal and fast Fish 🐟 prompt, ported from [`zsh`](https://github.com/sindresorhus/pure).\n\n\u003cdiv align=center\u003e\n  \u003ca href=\"https://camo.githubusercontent.com/be014be282ef66e5c5cad19458aa61d7df6865ecbe55bcc882e0d53580f81de9/68747470733a2f2f692e696d6775722e636f6d2f424878556f68522e706e67\" target=blank\u003e\u003cimg width=440 src=https://camo.githubusercontent.com/be014be282ef66e5c5cad19458aa61d7df6865ecbe55bcc882e0d53580f81de9/68747470733a2f2f692e696d6775722e636f6d2f424878556f68522e706e67 alt=\"Pure with dark colorscheme\"\u003e\u003c/a\u003e\n  \u003ca href=\"https://camo.githubusercontent.com/5934e8c1d3b5f9218d05d5e1741e23963a7803d6098236d36e586336a6c6a5b7/68747470733a2f2f692e696d6775722e636f6d2f714a646f6e716f2e706e67\" target=blank\u003e\u003cimg width=440 src=https://camo.githubusercontent.com/5934e8c1d3b5f9218d05d5e1741e23963a7803d6098236d36e586336a6c6a5b7/68747470733a2f2f692e696d6775722e636f6d2f714a646f6e716f2e706e67 alt=\"Pure with light colorscheme\"\u003e\u003c/a\u003e\n\u003c/div\u003e\n\n## :rocket: Install\n\n**:warning: requirements**: fish `≥3.x`\n\n### [Fisher](https://github.com/jorgebucaran/fisher)\n\n```fish\nfisher install pure-fish/pure\n```\n\n### Manually\n\nVia [cURL](https://curl.haxx.se):\n\n```sh\n# Download the installer to `/tmp`\ncurl git.io/pure-fish --output /tmp/pure_installer.fish --location --silent\n# Source and trigger the installer\nsource /tmp/pure_installer.fish; and install_pure\n```\n\n## Features\n\nFully **customizable** (colors, symbols and features):\n\n- Excellent prompt character `❯` :\n  - Change `❯` to red when previous command has failed ;\n  - Start prompt with _current working directory_ 🏴 ;\n  - Compact-mode (single-line prompt) 🏴 ;\n- Display current directory tail ;\n- check for new release on start 🏴 ;\n- Display _username_ and _hostname_ when in an `SSH` session ;\n- Display command _duration_ when longer than `5` seconds ;\n- Display `Python` _virtualenv_ when activated ;\n- Display `VI` mode and custom symbol for non-insert mode 🏴 ;\n- Show system time 🏴 ;\n- Show number of running jobs 🏴 ;\n- Prefix when `root` 🏴 ;\n- Display `git` branch name 🏴 ;\n  - Display `*` when `git` repository is _dirty_ ;\n  - Display `≡` when `git` repository is _stashed_ ;\n  - Display `⇡` when branch is _ahead_ (commits to push) ;\n  - Display `⇣` when branch is _behind_ (commits to pull) ;\n  - Async update when [configured with fish-async-prompt](https://github.com/pure-fish/pure/wiki/Async-git-Prompt) ;\n- Update terminal title with _current folder_ and _command_ ;\n- Detect when running in a container\n\n🏴: Enabled or disabled via a [feature flag](#-features-flags).\n\n## :paintbrush: Configuration\n\nYou can tweak `pure` behavior and color by changing [universal variables](https://fishshell.com/docs/current/tutorial.html#tut_universal) either directly in the terminal or in your `config.fish`, _e.g._:\n\n    set --universal pure_show_system_time true\n    set --universal pure_color_system_time pure_color_mute\n\n### Prompt Symbol\n\n| Option                                 | Default | Description                                          |\n| :------------------------------------- | :------ | :--------------------------------------------------- |\n| **`pure_symbol_git_dirty`**            | `*`     | Repository is Dirty (uncommitted/untracked changes). |\n| **`pure_symbol_git_stash`**            | `≡`     | Repository git stash status.                         |\n| **`pure_symbol_git_unpulled_commits`** | `⇣`     | Branch is behind upstream (commits to pull).         |\n| **`pure_symbol_git_unpushed_commits`** | `⇡`     | Branch is ahead upstream (commits to push).          |\n| **`pure_symbol_prefix_root_prompt`**   | `#`     | Prefix prompt when logged in as `root`.              |\n| **`pure_symbol_prompt`**               | `❯`     | Prompt symbol.                                       |\n| **`pure_symbol_reverse_prompt`**       | `❮`     | VI non-insert mode symbol.                           |\n| **`pure_symbol_title_bar_separator`**  | `-`     | Separator in terminal's windows title.               |\n\n\u003e :information_source: Need [safer `git` symbols](https://github.com/sindresorhus/pure/wiki/Customizations,-hacks-and-tweaks#safer-symbols)?\n\n### 🔌 Features' Flags\n\n| Option                                         | Default | Description                                                                                     |\n| :--------------------------------------------- | :------ | :---------------------------------------------------------------------------------------------- |\n| **`pure_begin_prompt_with_current_directory`** | `true`  | `true`: _`pwd` `git`, `SSH`, duration_.\u003cbr/\u003e`false`: _`SSH` `pwd` `git`, duration_.             |\n| **`pure_check_for_new_release`**               | `false` | `true`: check repo for new release (on every shell start)                                       |\n| **`pure_enable_git`**                          | `true`  | Show info about Git repository.                                                                 |\n| **`pure_enable_container_detection`**           | `true` | `false`: Do not check if run in container (e.g. `docker`, `podman`, `LXC`/`LXD`, etc.).\u003cbr/\u003e:warning: Detection is a bit [tricky across OSes][container-detection].                                                         |\n| **`pure_enable_single_line_prompt`**           | `false` | `true`: Compact prompt as a single line                                                         |\n| **`pure_reverse_prompt_symbol_in_vimode`**     | `true`  | `true`: `❮` indicate a non-insert mode.\u003cbr/\u003e`false`: indicate vi mode with `[I]`, `[N]`, `[V]`. |\n| **`pure_separate_prompt_on_error`**            | `false` | Show last command [exit code as a separate character][exit-code].                               |\n| **`pure_show_jobs`**                           | `false` | Show Number of running jobs                                                                     |\n| **`pure_show_prefix_root_prompt`**             | `false` | `true`: shows prompt prefix when logged in as `root`.                                           |\n| **`pure_show_subsecond_command_duration`**     | `false` | Show subsecond (ex. 1.5s) in command duration.                                                  |\n| **`pure_show_system_time`**                    | `false` | `true`: shows system time before the prompt symbol (as `%H:%M:%S`).                             |\n| **`pure_threshold_command_duration`**          | `5`     | Show command duration when above this value (seconds).                                          |\n\n### 🎨 Colours\n\n\u003e :information_source: See [`set_color`][fish-set-color] documentation for full possibilities.\n\n\u003e :warning: The absence of `$` sign is expected in `pure_` named colours.\n\n| Base Color               | Inherited by                                                                                                                                                                                                        | Default   |\n| :----------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :-------- |\n| **`pure_color_danger`**  | **`pure_color_prompt_on_error`**                                                                                                                                                                                    | `red`     |\n| **`pure_color_dark`**    |                                                                                                                                                                                                                     | `black`   |\n| **`pure_color_info`**    | **`pure_color_git_unpulled_commits`**\u003cbr\u003e**`pure_color_git_unpushed_commits`**                                                                                                                                      | `cyan`    |\n| **`pure_color_light`**   | **`pure_color_username_root`**                                                                                                                                                                                      | `white`   |\n| **`pure_color_mute`**    | **`pure_color_git_branch`**\u003cbr\u003e**`pure_color_git_dirty`**\u003cbr\u003e**`pure_color_git_stash`**\u003cbr\u003e**`pure_color_hostname`**\u003cbr\u003e**`pure_color_at_sign`**\u003cbr\u003e**`pure_color_username_normal`**\u003cbr\u003e**`pure_color_virtualenv`** | `brblack` |\n| **`pure_color_normal`**  | **`pure_color_jobs`**                                                                                                                                                                                               | `normal`  |\n| **`pure_color_primary`** | **`pure_color_current_directory`**                                                                                                                                                                                  | `blue`    |\n| **`pure_color_success`** | **`pure_color_prompt_on_success`**                                                                                                                                                                                  | `magenta` |\n| **`pure_color_warning`** | **`pure_color_command_duration`**                                                                                                                                                                                   | `yellow`  |\n\n## :+1:  Contribute\n\n\u003e **requirements:** [`docker`](https://docs.docker.com/install/) (isolate from your environment)\n\nSpecify the [`FISH_VERSION`][fish-releases] you want, and the `CMD` executed by the container:\n\n    make build-pure-on FISH_VERSION=3.3.1\n    make dev-pure-on FISH_VERSION=3.3.1 CMD=\"fishtape tests/*.test.fish\"\n\n## :man_technologist: Maintainer\n\n- [Édouard Lopez](https://github.com/edouard-lopez)\n\n## :clap: Thanks\n\n- [@andreiborisov](https://github.com/andreiborisov) for the [docker images][docker-images] ;\n- [@jorgebucaran](https://github.com/jorgebucaran/) for [fishtape](https://github.com/jorgebucaran/fishtape) ;\n- [@rafaelrinaldi](https://github.com/pure-fish/pure) for starting the project ;\n\n## :classical_building: License\n\n[MIT][MIT]\n\n[github-ci-link]: \u003chttps://github.com/pure-fish/pure/actions\u003e \"Github CI\"\n[github-ci-badge]: \u003chttps://github.com/pure-fish/pure/workflows/Run%20tests%20on%20CI/badge.svg\u003e\n[fish-3]: \u003chttps://img.shields.io/badge/fish-v3-007EC7.svg?style=flat-square\u003e \"Support Fish 3\"\n[exit-code]: \u003chttps://github.com/sindresorhus/pure/wiki#show-exit-code-of-last-command-as-a-separate-prompt-character\u003e \"See pure-zsh wiki\"\n[fish-releases]: https://github.com/fish-shell/fish-shell/releases\n[docker-images]: https://github.com/andreiborisov/docker-fish/\n[MIT]: LICENSE.md\n[fish-set-color]: https://fishshell.com/docs/current/cmds/set_color.html\n[container-detection]: https://stackoverflow.com/q/23513045/802365\n","repository_updated":0},"pygmalion":{"name":"pygmalion","description":"My fish prompt","image":"https://cloud.githubusercontent.com/assets/888886/12481015/051b2096-c04f-11e5-962b-7c1a31c9ff8b.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"corevo","repository":"https://github.com/corevo/theme-pygmalion","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1505048284,"full_description":"## pygmalion theme\n\nA minimal theme forked from the [cbjohnson](https://github.com/oh-my-fish/theme-cbjohnson) theme\n\nBased on the zsh theme [pygmalion](https://github.com/robbyrussell/oh-my-zsh/wiki/themes#pygmalion)\n\n![screenshot](https://cloud.githubusercontent.com/assets/888886/12481015/051b2096-c04f-11e5-962b-7c1a31c9ff8b.png)\n","repository_updated":0},"qing":{"name":"qing","description":"A theme for Oh My Fish.","image":"https://cloud.githubusercontent.com/assets/8684553/14587898/02053638-04ee-11e6-9b6f-f7314f2cb180.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish","oh-my-fish","omf-link","theme"],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-qing","license":"MIT","dependencies":[],"stars":14,"forks":7,"watchers":14,"issues":1,"updated":1649136669,"full_description":"#### cyan\n\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n[![Join the chat at https://gitter.im/oh-my-fish/theme-qing](https://badges.gitter.im/oh-my-fish/theme-qing.svg)](https://gitter.im/oh-my-fish/theme-qing?utm_source=badge\u0026utm_medium=badge\u0026utm_campaign=pr-badge\u0026utm_content=badge)\n\n![IMG](https://cloud.githubusercontent.com/assets/8684553/14587898/02053638-04ee-11e6-9b6f-f7314f2cb180.png)\n\n## Install\n\n\n```fish\n$ omf install cyan\n```\nThis theme is based Michele Bologna's theme you can see @[Michele Bologna](http://michelebologna.net) for more informations.\nand the `fish_greeting.fish` forked from @[bramblex](https://github.com/bramblex/bubblegum).\nThanks!\n\n## Features\n\n* Lorem ipsum dolor sit amet.\n* Consectetur adipisicing elit.\n\n## The Prompt\n* `User@Hostname`\n* Current project's repo branch(master) and Head short hash(d0dfd9b)\n* Current project's status, via colors and flags:\n    * new file `✚`\n    * modified `M`\n    * deleted `✖`\n    * reanme `➜`\n    * unmerge `═` (TODO)\n    * untracked `✭`\n    * working directory clean `✔`\n    * Note that not all of these have been implemented yet \\_(:з」∠)_\n* Current project's branch status\n    * equal to upstream `=`\n    * ahead of upstream `\u003e`\n    * behind upstream `\u003c`\n    * diverged from upstream `\u003c\u003e`\n\n# License\n\n[MIT][mit] © [szwathub][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/szwathub\n[contributors]:   https://github.com/szwathub/cyan/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"random":{"name":"random","description":"A fish 'theme' that loads a random `oh-my-fish` theme.","image":"https://www.github.com/oh-my-fish/oh-my-fish","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"KiaraGrouwstra","repository":"https://github.com/KiaraGrouwstra/theme-random","license":"MIT","dependencies":[],"stars":2,"forks":2,"watchers":2,"issues":0,"updated":1667570149,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### random\n\n\u003e A 'theme' for [Oh My Fish][omf-link] that loads a random theme.\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install random\n```\n\n# License\n\n[MIT][mit] © [Kiara Grouwstra][author] et [al][contributors]\n\n[mit]: https://opensource.org/licenses/MIT\n[author]: https://github.com/KiaraGrouwstra\n[contributors]: https://github.com/KiaraGrouwstra/theme-random/graphs/contributors\n[omf-link]: https://www.github.com/oh-my-fish/oh-my-fish\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"randomrussel":{"name":"randomrussel","description":"A fish shell theme based on robbyrussel.","image":"https://raw.githubusercontent.com/lightify97/randomrussel/master/randomrussel.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"lightify97","repository":"https://github.com/lightify97/randomrussel","license":"MIT","dependencies":[],"stars":1,"forks":1,"watchers":1,"issues":0,"updated":1666873903,"full_description":"## randomrussell\n\nA colorful robbyrussel clone.\n\n\n![randomrussell theme](https://github.com/lightify97/randomrussel/blob/master/randomrussel.png)\n![randomrussel theme](https://github.com/lightify97/randomrussel/blob/master/randomrussel_2.png)\n\n#### Characteristics\n\n* Displays git information in the command prompt when available.\n* If the last command was failed, the indicator would be a red cross, otherwise it's a colored dollar sign.\n\n### Note\n\nYou will need [powerline](https://github.com/powerline/fonts\n) or [nerd](https://github.com/ryanoasis/nerd-fonts\n) font to display unicode characters correctly.\n\nYou can download \"D2Coding\" powerline+nerdfont patched font [here](http://bit.ly/2pLiQku)\n","repository_updated":0},"red-snapper":{"name":"red-snapper","description":"Red Snapper Theme","image":"https://raw.githubusercontent.com/ZuraGuerra/theme-red-snapper/master/redsnapper.jpg","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-red-snapper","license":"MIT","dependencies":[],"stars":7,"forks":3,"watchers":7,"issues":0,"updated":1639080241,"full_description":"# RED SNAPPER\n![Red Snapper](https://raw.githubusercontent.com/ZuraGuerra/theme-red-snapper/master/redsnapper.jpg)\n\n## \u003e\u003c}}*\u003e F E A T U R E S\n+ Directory path\n+ Git branch name\n+ Git status\n+ YOUR OWN PET FISH!\n\n## \u003e\u003c}}*\u003e GIT STATUS\n### Untracked changes\nYour pet will detect if you added files, but didn't track them. He will open his mouth, hungry of yummy commits!\n![fish shell untracked changes](https://raw.githubusercontent.com/ZuraGuerra/theme-red-snapper/master/hungry2.png)\n\nAfter you commit, he will close his mouth, satiated.\n![fish shell commited](https://raw.githubusercontent.com/ZuraGuerra/theme-red-snapper/master/fed.png)\n\n### Can't find .git\nSomething is fishy here! If you are not inside a Git working directory, your pet will go to sleep.\n![fish shell not using git](https://raw.githubusercontent.com/ZuraGuerra/theme-red-snapper/master/fishy.png)\n\n","repository_updated":0},"rider":{"name":"rider","description":"A theme for Oh My Fish","image":"https://raw.githubusercontent.com/rideron89/rider-theme/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"rideron89","repository":"https://github.com/rideron89/rider-theme","license":"MIT","dependencies":[],"stars":0,"forks":2,"watchers":0,"issues":1,"updated":1608280277,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### rider\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install rider\n```\n\n\n## Features\n\n* Current username\n* Shortened current working directory\n* Last command status code indicator (green arrow on success, red on failure)\n* Current git branch (red on master, yellow on develop, green otherwise)\n* Execution time of the previous command on the right prompt\n\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/rideron89/rider-theme/master/screenshot.png\"\u003e\n\u003c/p\u003e\n\n\n# License\n\n[MIT][mit] © [Ron Rider][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/rideron89\n[contributors]:   https://github.com/rideron89/rider-theme/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":1672869115},"robbyrussell":{"name":"robbyrussell","description":"","image":"https://bachue.github.io/oh-my-fish/images/robbyrussell-screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-robbyrussell","license":"MIT","dependencies":[],"stars":18,"forks":13,"watchers":18,"issues":1,"updated":1670119876,"full_description":"## robbyrussell\n\nThe default theme – cloned from oh-my-zsh.\n\n![robbyrussell theme][screenshot]\n\n#### Characteristics\n\n- Displays git information in the command prompt when available.\n- If the last command was failed, the indicator would be red, otherwise it's\n  green\n\n#### Configuration\n\nTo ignore untracked files when signaling repository status, set\n`theme_display_git_untracked` to `no`:\n\n```fish\nset theme_display_git_untracked no\n```\n\n[screenshot]: https://bachue.github.io/oh-my-fish/images/robbyrussell-screenshot.png\n","repository_updated":0},"sashimi":{"name":"sashimi","description":"minimalist fish prompt made with raw fish","image":"https://raw.githubusercontent.com/isacikgoz/sashimi/master/images/preview.png","latest_version":{"version":"v1.0","description":"","commit_hash":"master","release_date":1555858946},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"master","description":"","release_date":1555858946,"version":"v1.0"}],"tags":["fish","sashimi","theme"],"author":"isacikgoz","repository":"https://github.com/isacikgoz/sashimi","license":"MIT","dependencies":[],"stars":60,"forks":5,"watchers":60,"issues":0,"updated":1671177132,"full_description":"# Sashimi\r\n\r\n[![Releases](https://img.shields.io/github/release/isacikgoz/sashimi.svg?label=latest)](https://github.com/isacikgoz/sashimi/releases)\r\n[![MIT License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](LICENSE)\r\n\r\nA minimal [fish shell](https://github.com/fish-shell/fish-shell) prompt made of raw fish.\r\n\r\nSashimi uses your prompt real estate as low as possible. It focuses on only required information. Along with being minimalist, the error codes are shown to user so that you can start to debug from a better point. See the features list for more detailed information.\r\n\r\n\u003cp align=\"center\"\u003e\r\n   \u003cimg src=\"images/preview.png\" alt=\"screenshot\"/\u003e\r\n\u003c/p\u003e\r\n\r\n## Features\r\n\r\n- Compatible with fish 3.0+\r\n- Sleek\r\n  - Displays only the parent directory instead of the entire working directory\r\n- Git Support\r\n  - Shows clean/dirty status\r\n  - Shows branch ahead/behind information\r\n  - Discourages working on master branch\r\n- Informative When Required\r\n  - Shows error exit status in red\r\n\r\n### Installation\r\n\r\nYou can install sashimi by cloning this repository and linking the `fish_prompt.fish` file to your `~/.config/fish/functions` directory or any directory in your fish functions path.\r\n\r\n```shell\r\ngit clone https://github.com/isacikgoz/sashimi\r\ncd sashimi\r\nln -s fish_prompt.fish ~/.config/fish/functions/fish_prompt.fish\r\n```\r\n\r\nIf you are using a package manager, you have the following options:\r\n\r\n- Using [Fisher](https://github.com/jorgebucaran/fisher):\r\n  ```shell\r\n  fisher add isacikgoz/sashimi\r\n  ```\r\n- Or, if you prefer [Oh My Fish!](https://github.com/oh-my-fish/oh-my-fish):\r\n  ```shell\r\n  omf install sashimi\r\n  ```\r\n\r\n## Credits\r\n\r\nThis prompt was inspired by other promps such as:\r\n\r\n- [robbyrussell](https://github.com/robbyrussell/oh-my-zsh/blob/master/themes/robbyrussell.zsh-theme)\r\n- [sorin](https://github.com/fish-shell/fish-shell/tree/master/share/tools/web_config/sample_prompts)\r\n- [bobthefish](https://github.com/oh-my-fish/theme-bobthefish)\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n","repository_updated":0},"scorphish":{"name":"scorphish","description":"Compact. Sufficient. PWD, Ruby+RVM, Python+VENV, Git status, Rust, NodeJS.","image":"https://user-images.githubusercontent.com/2112697/60178902-def52b80-97f2-11e9-961d-0f7c115ccc49.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","nvm","omf","omf-theme","python","ruby","rust","theme"],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-scorphish","license":"MIT","dependencies":[],"stars":37,"forks":12,"watchers":37,"issues":2,"updated":1670266583,"full_description":"## Scorphish\n\nCompact. Sufficient.\n\n![scorphish](https://user-images.githubusercontent.com/2112697/60178902-def52b80-97f2-11e9-961d-0f7c115ccc49.png)\n\n### Left prompt\n\nAbbreviated path, Ruby version and gemset, Python version and virtualenv, Rust\nversion, NodeJS version, Git information and last command execution time.\n\n#### Configuration:\n\nThe following options can be added to `~/.config/fish/conf.d/omf.fish` to change\nthe appearance and behavior of left prompt.\n\n * To display current Rust version:\n\n```fish\nset -g theme_display_rust yes\n```\n\n * To display current Node version:\n\n```fish\nset -g theme_display_node yes\n```\n\n\u003e Note: Node version may be lazy loaded depending on which nvm plugin you're\n\u003e using\n\n * To display current working directory on a second line:\n\n```fish\nset -g theme_display_pwd_on_second_line yes\n```\n\n * To display Git information on the first line:\n\n```fish\nset -g theme_display_git_on_first_line yes\n```\n\n * To omit only dirty status of current local Git repository and have\n   a faster prompt:\n\n```fish\nset -g theme_display_git_dirty no\n```\n\n * To omit information of current Git repository altogether:\n\n```fish\nset -g theme_display_git no\n\n```\n\n * To omit current Ruby version and gemset:\n\n```fish\nset -g theme_display_ruby no\n\n```\n\n * To omit current Python version and virtualenv:\n\n```fish\nset -g theme_display_virtualenv no\n\n```\n\n### Right prompt\n\nLast command's exit code and current time\n\n### Acknowledgments\n\nThis theme is based on Zish and Coffeandcode themes, many thanks to their\nauthors!\n\nEnjoy!\n","repository_updated":0},"separation":{"name":"separation","description":"An oh-my-fish theme for those who like the output of each command to be clearly distinguishable from the rest.","image":"https://i.imgur.com/QftI04P.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"roflcopter4","repository":"https://github.com/roflcopter4/separation","license":"MIT","dependencies":[],"stars":2,"forks":0,"watchers":2,"issues":0,"updated":1670800664,"full_description":"# separation\nSeparation is a very simple fish theme for folks who, like me, prefer to have the output of each of their commands clearly delineated, and who prefer to always have enough space on the line to type a command without overflowing to a new line. To that end, this theme outputs a horizontal bar across the display for each and every prompt. On the second line, only the return status of the previous command (if it was not 0), your username, your hostname, and your working directory are displayed. If this information should ever happen to take up more than two fifths of the screen, the actual prompt is displayed on a third line, giving you plenty of space to type.\n\nBy default the full working directory without any of Fish's normal abbreviations will be displayed. This can be easily overridden by setting the \"Use_Fish_PWD\" variable to anything in your init file. Given that the prompt will go to a third line if the working directory is too long, I don't find the abbreviations to be very useful, but the choise is yours. You can also use the '%' character as your prompt instead of '$' by setting the \"csh_junkie\" variable to anything.\n\nThere used to be a noteable bug in Fish in which the \"COLUMNS\" variable, which stores the width of your terminal, is always set to 78 regardless of the terminal's actual size for the first prompt after starting Fish. Afterwards it was set correctly. This unfortunately meant that the horizontal bar would be too short for that first prompt, however it would seem that this bug has been fixed.\n\nPictures always speak a thousand words. Note the former bug manifesting itself after switching to root.\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://i.imgur.com/QftI04P.png\"\u003e\n\u003c/p\u003e\n","repository_updated":0},"shell":{"name":"shell","description":"A minimal dark theme for Fish Shell","image":"http://i.imgur.com/1ZjM4j5.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"wolf-theme","repository":"https://github.com/wolf-theme/fish-shell","license":"MIT","dependencies":[],"stars":1,"forks":1,"watchers":1,"issues":0,"updated":1662126402,"full_description":"# Wolf Theme for [Fish Shell](https://fishshell.com/)\nTheme based in [eclm](https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md#eclm)\n\n\u003cimg src=\"http://i.imgur.com/1ZjM4j5.png\" style=\"text-align: center;\"\u003e\n\n### Install\n``` omf install wolf-theme ```\n\n``` omf theme wolf-theme ```\n\n### Team\n[![Igor Oliveira](https://avatars0.githubusercontent.com/u/14060827?v=3\u0026s=70)](https://github.com/devigor) |\n--- |\n[Igor Oliveira](https://github.com/devigor) |\n","repository_updated":0},"simple":{"name":"simple","description":"","image":"https://raw.githubusercontent.com/devansh08/simple/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"devansh08","repository":"https://github.com/devansh08/simple","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1656856640,"full_description":"## simple fish theme\n\nClean git theme with homey feel and git-centric features.\n\n#### Screenshot\n\n![simple theme screenshot](screenshot.png)\n\n#### Prompt structure\n\n* Left-hand side:\n\t* user@host:\n\t* short name cwd (first letter of each folder)\n\t* git branch with state info (if applicable)\n\n* Right-hand side:\n\t* number of bg processes running (if any)\n\t* last error code (if applicable)\n\t* timestamp\n\n#### Credits\n\nForked from [godfather](https://github.com/oh-my-fish/theme-godfather) theme\n","repository_updated":0},"simple-ass-prompt":{"name":"simple-ass-prompt","description":"A simple ass-prompt with virtual environment and git support for the fish shell.","image":"http://cl.ly/1G0Z2j3A0C1Q/Screen%20Recording%202015-12-16%20at%2010.09%20pm.gif","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["ass","fish","git","oh-my-fish","prompt","python","rust","terminal","theme"],"author":"lfiolhais","repository":"https://github.com/lfiolhais/theme-simple-ass-prompt","license":"MIT","dependencies":[],"stars":13,"forks":4,"watchers":13,"issues":0,"updated":1622730494,"full_description":"\u003cimg\nsrc=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\"\nalign=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### simple-ass-prompt\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n## Install\n\n```fish\n$ omf install simple-ass-prompt\n```\n\n## Features\nThis is [Mathias Bynens][mths] Bash prompt ported to Fish with a few changed\nicons and added functionalities. As he put it:\n\n\n\u003e Shell prompt based on the Solarized Dark theme.\n\u003e Screenshot: http://i.imgur.com/EkEtphC.png\n\n\u003e Heavily inspired by @necolas’s prompt: https://github.com/necolas/dotfiles\n\n\u003e iTerm → Profiles → Text → use 13pt Monaco with 1.1 vertical spacing.\n\nFeatures:\n\n- A dirty state of the branch is displayed by `!`\n- Untracked files are displayed by `☡`\n- The existence of a stash is displayed by `↩`\n- A clean branch is displayed by `✓`\n- The branch is ahead with `+`\n- The branch is behind with `-`\n- The branch has diverged from upstream `±`\n- Support for Pythons virtual environments\n- Support Rust active toolchain\n- The last command failed is displayed with `↪` in red\n\n## Screenshot\nGit Usage\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"http://cl.ly/1G0Z2j3A0C1Q/Screen%20Recording%202015-12-16%20at%2010.09%20pm.gif\"\u003e\n\u003c/p\u003e\n\n[VirtualFish][vf] Usage\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"http://cl.ly/image/1Y36043M2U3M/simple_ass_prompt_virtual.png\"\u003e\n\u003c/p\u003e\n\n## Configuration\nYou can change the greeting message with:\n```fish\nset -g simple_ass_prompt_greeting MyGreeting\n```\n\n# License\n\n[MIT][mit] © [lfiolhais][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/lfiolhais\n[contributors]:   https://github.com/lfiolhais/simple_ass_prompt/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n[mths]: https://github.com/mathiasbynens/dotfiles\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n[vf]: https://github.com/adambrenecki/virtualfish\n","repository_updated":0},"simplevi":{"name":"simplevi","description":"","image":"https://raw.github.com/syl20bnr/fish_prompt-simplevi/master/prompt_fish-simplevi-n.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-simplevi","license":"MIT","dependencies":[],"stars":0,"forks":1,"watchers":0,"issues":0,"updated":1617812183,"full_description":"fish_prompt-simplevi\n====================\n\nThe stock prompt with the vi indicator appended.\nIt is meant to be used with the `vi-mode` plugin.\n\nScreenshots:\n\n![normal mode](https://raw.github.com/syl20bnr/fish_prompt-simplevi/master/prompt_fish-simplevi-n.png)\n\n![insert mode](https://raw.github.com/syl20bnr/fish_prompt-simplevi/master/prompt_fish-simplevi-i.png)\n\n","repository_updated":0},"slacker":{"name":"slacker","description":"A minimalist fish shell theme!","image":"https://raw.githubusercontent.com/maqboolkhan/omf-theme-slacker/master/1.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"maqboolkhan","repository":"https://github.com/maqboolkhan/omf-theme-slacker","license":"MIT","dependencies":[],"stars":1,"forks":1,"watchers":1,"issues":0,"updated":1645278737,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### slacker\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install slacker\n```\n\n\n## Features\n\n* Dead simple with git status and date \u0026 time!\n\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/maqboolkhan/omf-theme-slacker/master/1.png\"\u003e\n\u003c/p\u003e\n\n\n# License\n\n[MIT][mit] © [Maqbool ur Rahim Khan][author]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"slavic-cat":{"name":"slavic-cat","description":"oh my fish - theme slavic cat","image":"https://github.com/yangwao/omf-theme-slavic-cat/blob/master/screenshot.png?raw=true","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"yangwao","repository":"https://github.com/yangwao/omf-theme-slavic-cat","license":"MIT","dependencies":[],"stars":8,"forks":6,"watchers":8,"issues":1,"updated":1653254337,"full_description":"# Slavic Cat\n\nA fish (shell) theme with a Slavic cat and a rainbow that signifies git status.\n\n\n[![Oh My Fish](https://img.shields.io/badge/Framework-Oh_My_Fish-blue.svg?style=flat)](https://github.com/oh-my-fish/oh-my-fish)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](/LICENSE)\n\n![Slavic cat in action](https://github.com/yangwao/omf-theme-slavic-cat/blob/master/screenshot.png?raw=true)\n\n\n## Instalation\n\n#### Requirements\n* [Fish shell](https://github.com/fish-shell/fish-shell) - a smart and user-friendly command line\nshell for OS X, Linux, and the rest of the family\n* [Oh My Fish](https://github.com/oh-my-fish/oh-my-fish) - The Fishshell Framework\n\nOnce Oh My Fish is installed:\n\n    omf install slavic-cat\n    \n[forked from Toaster](https://github.com/oh-my-fish/theme-toaster)\n\n## Features\n\n * Minimal Look \u0026 Prompt\n * Current short version pwd\n * Display branch for Git projects\n * Git project dirty status indicator *meow* **(R,C,A,U,M,?)** *meow*\n * Fish shell vi mode indicator\n * Next line prompt\n * Two unicodes included!\n","repository_updated":0},"solarfish":{"name":"solarfish","description":"A simple, git-aware, two-line fish theme","image":"https://i.imgur.com/601hz24.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"thesilican","repository":"https://github.com/thesilican/theme-solarfish","license":"MIT","dependencies":[],"stars":0,"forks":0,"watchers":0,"issues":0,"updated":1640634551,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### solarfish\n\n\u003e A simple, git-aware, two-line theme for [Oh My Fish][omf-link]. Based off of [simple-ass-prompt](https://github.com/lfiolhais/theme-simple-ass-prompt) and the canonical bash prompt\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v3.0.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://i.imgur.com/601hz24.png\"\u003e\n\u003c/p\u003e\n\n## Install\n\nYou must first have [Oh My Fish](omf-link) installed\n\n```fish\n$ omf install solarfish\n```\n\n## Features\n\n- Easy to read 2-line prompt, based on the canonical bash prompt\n- Git status icons:\n  - dirty \"\\*\"\n  - staged \"+\"\n  - ahead \"↑\"\n  - behind \"↓\"\n  - diverged \"⥄ \"\n- Previous command status (prompt turns red with non-zero status)\n\n## Configuration\n\nAdd any of the following lines to\n`~/.config/fish/config.fish`\n\n```fish\n# Display a shortened directory path\nset -g theme_short_path yes\n\n# Disable the git indicator\nset -g theme_no_git_indicator yes\n```\n\n# License\n\n[MIT][mit] © [thesilican][author]\n\n[mit]: https://opensource.org/licenses/MIT\n[author]: https://github.com/thesilican\n[omf-link]: https://www.github.com/oh-my-fish/oh-my-fish\n[license-badge]: https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"sushi":{"name":"sushi","description":"Sushi theme for Fishshell.","image":"https://user-images.githubusercontent.com/7011993/43540375-907eeca8-9595-11e8-8af9-92183a3ad997.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"umayr","repository":"https://github.com/umayr/theme-sushi","license":"MIT","dependencies":[],"stars":22,"forks":20,"watchers":22,"issues":7,"updated":1656408512,"full_description":"\u003cdiv align=\"center\"\u003e\n  \u003ca href=\"http://github.com/oh-my-fish/oh-my-fish\"\u003e\n  \u003cimg width=90px  src=\"https://cloud.githubusercontent.com/assets/8317250/8510172/f006f0a4-230f-11e5-98b6-5c2e3c87088f.png\"\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\u003cbr\u003e\n\n\u003e 🍣 Sushi theme for [Oh My Fish][omf-link].\n\n## Install\n\n```fish\n$ omf install sushi\n```\n\n## Features\n\n* Minimal Prompt.\n* Git Support.\n* Displays `^` when there are stashed changes.\n* Displays `*` when there are any changes to files already being tracked in the repo.\n* Displays current branch name.\n* Branch name color changes when there are staged changes.\n* Displays selected or default terraform workspace.\n* Displays number of commits current branch is ahead/behind in each remote.\n* By default it shows only the name of the current directory but it provides a flag `theme_complete_path` to display abbreviated current working directory instead.\n* Displays Time.\n* Support for Terraform\n* Support for Kubernetes\n\n## Screenshot\n\n![Screenshot for Sushi Theme](https://camo.githubusercontent.com/98de9526e48e3ad03e761893c539891563e41276/68747470733a2f2f6769746875622d636c6f75642e73332e616d617a6f6e6177732e636f6d2f6173736574732f333037313934382f31303536353038362f66383463326432632d373565312d313165352d383234382d3364386262623965636565392e706e67)\n\n![Screenshot of Sushi Theme with Terraform Workspaces](https://user-images.githubusercontent.com/7011993/43540375-907eeca8-9595-11e8-8af9-92183a3ad997.png)\n\n![Screenshot of Sushi Theme with Kubernetes](https://user-images.githubusercontent.com/1866448/56770256-c09f8f00-67b3-11e9-9bcf-d654243e881c.png)\n\n![Screenshot of Sushi Theme with SSH](https://user-images.githubusercontent.com/14050128/64432134-54278b80-d0d5-11e9-93f0-f3ef451af906.png)\n\n## License\n\n[MIT][mit] © [Umayr Shahid][author] et [al][contributors]\n\n\n[mit]:            http://opensource.org/licenses/MIT\n[author]:         http://github.com/umayr\n[contributors]:   https://github.com/umayr/sushi/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"syl20bnr":{"name":"syl20bnr","description":"","image":"https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-home2.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-syl20bnr","license":"MIT","dependencies":[],"stars":1,"forks":3,"watchers":1,"issues":1,"updated":1665717509,"full_description":"# syl20bnr theme\n\nA semi-compact oh-my-fish theme with [nice support for git](#git).\n\nThe theme has been tested on `Ubuntu 14.04 (Trusty)` and `Mac OS X 10.10 (Yosemite)`.\nIt is also compatible with [Cygwin with the appropriate packages](#cygwin-compatibility).\n\n**Table of Contents**  *generated with [DocToc](http://doctoc.herokuapp.com/)*\n\n- [Segments](#segments)\n\t- [pwd: Compact current working directory](#pwd-compact-current-working-directory)\n\t\t- [Examples](#examples)\n\t- [git](#git)\n\t\t- [Examples](#examples-1)\n\t- [vi-mode](#vi-mode)\n\t- [end](#end)\n\t- [where](#where)\n- [Functions](#functions)\n- [Mac compatibility](#mac-compatibility)\n- [Cygwin compatibility](#cygwin-compatibility)\n\n## Segments\n\n### pwd: Compact current working directory\n\nThe `pwd` segment format is `X:P(N)` where:\n- `X` is either `home` or `/`\n- `P` is the current working path base name (name of the current directory)\n- `N` is the depth of the path starting from `X`\n\nIf the `pwd` is `home` or `/` then the prompt format is simplified to `home`\nand `/` respectively without the current directory and depth.\n\n#### Examples\n\nIn home directory:\n![home](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-home2.png)\n\nInside a directory in home:\n![inside_home](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-inside-home.png)\n\nOutside the home directory:\n![outside_home](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-outside-home.png)\n\n### git\n\nIf the current directory is a [git][git] repository then the `pwd` segment is\nreplaced by the `git` segment (I should know where I am).\n\nThe `git` segment format is `X:YI@Z:P(N)` where:\n- `X` is `git`\n- `Y` is the current branch name\n- `I` is some information about the current repository state\n- `Z` is the name of the repository\n- `P` is the current working path basename (name of the current directory)\nIf `P` = `Z` then `P(N)` is not displayed\n- `N` is the depth of the path starting from base directory of the repository\n\nThe displayed information `I` is:\n- Unpushed commits are indicated with an up arrow like this `[↑1]`\n- Unmerged fetched commits are indicated with a down arrow like this `[↓1]`\n\n**Note:** The dirtiness of the current branch is indicated by its color:\n- red: it is dirty\n- green: it is up to date\n\n**Note:** The unmerged commits count appears only if the changes in the\nupstream branch as been fetched.\n\n#### Examples\n\nDirty (changes not committed):\n\n![dirty](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-dirty2.png)\n\nUnpushed commits:\n\n![unpushed_commits](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-unpushed.png)\n\nUnmerged commits:\n\n![unmerged_commits](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-unmerged.png)\n\nBoth unpushed and unmerged commits:\n\n![unmerged_commits](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-unpushed_unmerged.png)\n\nIn a sub-directory of the repository:\n\n![repo_subdir](https://raw.githubusercontent.com/syl20bnr/oh-my-fish-theme-syl20bnr/master/screenshots/prompt_fish-syl20bnr-git-subdir2.png)\n\n### vi-mode\n\nThis segment display the current `vi-mode` if the fish native vi mode or\nthe oh-my-fish vi-mode plugin is used.\nSee the `[n]` in the previous screenshots.\n\n### end\n\nThe color of the end of the prompt depends on the `$status` value of the\nlast executed command. It is `green` or `red` depending on the success or\nfailure of the last command.\n\nSince I often use [ranger][ranger] and its `shift+s` key binding to bring\na new child shell session, there is a discreet indicator when the parent\nprocess of the current shell is a `ranger` process: the end of the prompt\nis written twice (ie: `\u003e\u003e` instead of just `\u003e`).\nWith this indicator I quickly see if I can `ctrl+d` to end the current shell\nprocess and go back to the parent `ranger` process.\n\n### where\n\nThe `where` segment format is `X@Y` where:\n- `X` is the user name\n- `Y` is the host name\n\nThis segment is displayed in the right prompt.\n\n## Functions\n\nSome functions come with the theme:\n- `toggle_right_prompt` will... toggle the right prompt! (alias: `trp`)\n\n## Mac compatibility\n\nIn order to make this theme work correctly with all the features make sure to\ninstall the following packages via MacPorts or Homebrew:\n-`pstree` (used in ranger detection)\n\n## Cygwin compatibility\n\nIn order to make this theme work on [Cygwin][cygwin], make sure to install the following\npackages:\n- `bc` for `math` fish function\n- `psmisc` for `pstree` (used in ranger detection)\n- `git` if you want to use the `git` segment.\n\n[git]: http://git-scm.com/\n[ranger]: http://ranger.nongnu.org/\n[cygwin]: http://cygwin.com/\n","repository_updated":0},"taktoa":{"name":"taktoa","description":"","image":"http://taktoa.me/oh-my-fish/images/taktoa-screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-taktoa","license":"MIT","dependencies":[],"stars":0,"forks":2,"watchers":0,"issues":2,"updated":1617812188,"full_description":"## taktoa\n\nA theme by taktoa\n\n#### Characteristics\n\n* Shows current git information\n* Shows hostname if you are connected via ssh\n* Show current terminal multiplexer status (screen/tmux pane name and number)\n* Arrow is a lambda\n\n![taktoa theme](http://taktoa.me/oh-my-fish/images/taktoa-screenshot.png)\n","repository_updated":0},"technopagan":{"name":"technopagan","description":"","image":"https://raw.githubusercontent.com/oh-my-fish/theme-technopagan/master/technopagan.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-technopagan","license":"","dependencies":[],"stars":2,"forks":2,"watchers":2,"issues":0,"updated":1617812190,"full_description":"## technopagan\nA minimalist fish theme forked from theme-nai ([@xorgy](https://github.com/xorgy)) but with added ([@rickycodes](https://github.com/rickycodes)) moonmoji support.\n\n![technopagan](https://raw.githubusercontent.com/oh-my-fish/theme-technopagan/master/technopagan.png)\n\nDisplay the following bits on the left:\n * Current directory name\n * Git branch and dirty state (if inside a git repo)\n","repository_updated":0},"toaster":{"name":"toaster","description":"","image":"https://raw.githubusercontent.com/oh-my-fish/theme-toaster/master/screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-toaster","license":"MIT","dependencies":[],"stars":9,"forks":11,"watchers":9,"issues":1,"updated":1664549012,"full_description":"# Toaster\n\nA fish (shell) theme with a poptart cat and a rainbow that signifies git status.\n\n![Toaster in action](https://github.com/steeeve/toaster/raw/master/screenshot.png)\n","repository_updated":0},"tomita":{"name":"tomita","description":"a minimal, aesthetically pleasing fish shell theme","image":"https://raw.githubusercontent.com/daveyarwood/tomita/master/img/tomita.jpg?raw=true\" alt=\"source: http://www.isaotomita.net/images/photo/tomi01.jpg","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"daveyarwood","repository":"https://github.com/daveyarwood/tomita","license":"MIT","dependencies":[],"stars":7,"forks":2,"watchers":7,"issues":0,"updated":1613692440,"full_description":"\u003cp align=\"center\"\u003e\n  \u003cimg src=\"https://github.com/daveyarwood/tomita/blob/master/img/tomita.jpg?raw=true\" alt=\"source: http://www.isaotomita.net/images/photo/tomi01.jpg\" title=\"isao tomita\" /\u003e\n\u003c/p\u003e\n\n# tomita\n\nA minimal, aesthetically pleasing fish theme.\n\n\u003e Note: Make sure you're using a Unicode-enabled terminal and font.\n\n## Prompt\n\n    \u003cabbreviated path\u003e (\u003ccurrent git branch\u003e) [\u003cvi mode\u003e] ⋊\u003e\n\n* Working directory\n* Current git branch\n* vi mode (requires fish 2.2+ and can be disabled with `set -x TOMITA_VI no`)\n\n\u003e This theme includes a custom vi mode indicator which is built into `fish_prompt`. If you'd like to use vi mode, I recommend adding the following lines to your config.fish:\n\u003e\n\u003e     # note: this erases the default fish_mode_prompt, which adds a vi mode\n\u003e     # indicator to the left of your prompt\n\u003e     function fish_mode_prompt; end\n\u003e\n\u003e     # turn on vi mode when the shell starts\n\u003e     fish_vi_mode\n\n## Screenshots\n\n\u003ccenter\u003e\n\nWithout vi-mode:\n\n\u003ca href=\"https://github.com/daveyarwood/tomita/blob/master/img/1.png?raw=true\"\u003e\n  \u003cimg src=\"https://github.com/daveyarwood/tomita/blob/master/img/1.png?raw=true\" alt=\"without vi-mode\" /\u003e\n\u003c/a\u003e\n\nWith vi-mode:\n\n\u003ca href=\"https://github.com/daveyarwood/tomita/blob/master/img/2.png?raw=true\"\u003e\n  \u003cimg src=\"https://github.com/daveyarwood/tomita/blob/master/img/2.png?raw=true\" alt=\"with vi-mode\" /\u003e\n\u003c/a\u003e\n\nIn a git repo:\n\n\u003ca href=\"https://github.com/daveyarwood/tomita/blob/master/img/3.png?raw=true\"\u003e\n  \u003cimg src=\"https://github.com/daveyarwood/tomita/blob/master/img/3.png?raw=true\" alt=\"git branch\" /\u003e\n\u003c/a\u003e\n\n\u003c/center\u003e\n\n","repository_updated":0},"trout":{"name":"trout","description":"","image":"https://raw.githubusercontent.com/phaedryx/trout/master/prompt.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-trout","license":"MIT","dependencies":[],"stars":5,"forks":2,"watchers":5,"issues":1,"updated":1635238626,"full_description":"A simple, but informative, prompt\n\n![example](https://raw.githubusercontent.com/phaedryx/trout/master/prompt.png)\n","repository_updated":0},"tweetjay":{"name":"tweetjay","description":"This is a theme for the oh-my-fish shell framework","image":"https://cloud.githubusercontent.com/assets/234182/23456975/faefed52-fe75-11e6-8753-c4d262884a6f.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","oh-my-fish"],"author":"j0d5","repository":"https://github.com/j0d5/theme-tweetjay","license":"MIT","dependencies":[],"stars":2,"forks":1,"watchers":2,"issues":3,"updated":1658003803,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### tweetjay\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\n$ omf install tweetjay\n```\n\n\n## Features\n\n* It's my first theme for oh-my-fish and still in progress\n* It's a git oriented theme\n\n\n## Screenshot\n\n![screenshot](https://cloud.githubusercontent.com/assets/234182/23456975/faefed52-fe75-11e6-8753-c4d262884a6f.png)\"\n\n\n# License\n\n[MIT][mit] © [Johannes Steudle][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/{{USER}}\n[contributors]:   https://github.com/{{USER}}/theme-tweetjay/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"uggedal":{"name":"uggedal","description":"","image":"https://f.cloud.github.com/assets/71/485623/c84ea45a-b8f7-11e2-8f7c-35a836aa7dbe.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-uggedal","license":"MIT","dependencies":[],"stars":0,"forks":1,"watchers":0,"issues":0,"updated":1617812197,"full_description":"## uggedal\nMinimal theme.\n\n![uggedal theme](https://f.cloud.github.com/assets/71/485623/c84ea45a-b8f7-11e2-8f7c-35a836aa7dbe.png)\n\n\n#### Characteristics\n\n* Only displays the `$CWD`.\n* Displays hostname if you're connected through `ssh(1)`.\n* Right prompt displays the last command's exit code if it was non-zero.\n","repository_updated":0},"vercel":{"name":"vercel","description":"re-creating the Vercel (formally ZEIT) zsh theme for fish","image":"","latest_version":{"version":"1.0.4","description":"### Patches \r\n\r\n- Docs: add installation instructions for fisher and fundle: #3\r\n- Create license.markdown: 67bf023db479534857233166a8d1c546fa7534e1\r\n- Chore: rename to vercel: 3ab56ca36a27330f14b30460c34b7b8d077b0bad\r\n- Replace disabled stderr redirection char ^ with 2\u003e: #4 \r\n\r\n### Credits \r\n\r\nHuge thanks to @ghost and @scorphus for helping!","commit_hash":"3dfe33a5af1855065a757cac4c25ceda76c21b5a","release_date":1628281637},"versions":[{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"","description":"","release_date":0,"version":""},{"commit_hash":"3dfe33a5af1855065a757cac4c25ceda76c21b5a","description":"### Patches \r\n\r\n- Docs: add installation instructions for fisher and fundle: #3\r\n- Create license.markdown: 67bf023db479534857233166a8d1c546fa7534e1\r\n- Chore: rename to vercel: 3ab56ca36a27330f14b30460c34b7b8d077b0bad\r\n- Replace disabled stderr redirection char ^ with 2\u003e: #4 \r\n\r\n### Credits \r\n\r\nHuge thanks to @ghost and @scorphus for helping!","release_date":1628281637,"version":"1.0.4"},{"commit_hash":"41cf38867e147c35c0474d3ef0f1d901555d36f6","description":"### Patches \r\n\r\n- More refactoring: d4bcf0125cb9d27a10629f249623d800a6e429ef\r\n- Revert to working git branch code: 41cf388","release_date":1548035383,"version":"1.0.3"},{"commit_hash":"bcaadd6a10f2d0deec345d933d7a37c09e3bf634","description":"### Patches\r\n\r\n- More refactoring #2","release_date":1548033109,"version":"1.0.2"},{"commit_hash":"34a1c732ccab2bc24b205136c6e7ff72f079d5b3","description":"### Patches \r\n\r\n- Clean up echos: c8b8c14c4a6fe71ff0bbdfe972d2f059ab4e08d4\r\n- Add a space after 'at': 34a1c73","release_date":1548033039,"version":"1.0.1"},{"commit_hash":"056a5368e9dfb64195a1a9aebaeef3486a5e39f2","description":"Initial release","release_date":1547960417,"version":"1.0.0-canary.0"}],"tags":["fish-shell","zeit"],"author":"mcansh","repository":"https://github.com/mcansh/vercel-fish-theme","license":"MIT","dependencies":[],"stars":2,"forks":1,"watchers":2,"issues":0,"updated":1628281493,"full_description":"# vercel-fish-theme\n\n## Installation\n\nWith [Fisher](https://github.com/jorgebucaran/fisher):\n\n```fish\nfisher add mcansh/vercel-fish-theme\n```\n\nWith [Fundle](https://github.com/danhper/fundle) add:\n\n```fish\nfundle plugin mcansh/vercel-fish-theme\n```\n\nto your shell `config.fish`, reload your shell and run fundle install.\n\n\nWith [Oh My Fish!](https://github.com/oh-my-fish/oh-my-fish):\n\n```fish\nomf install https://github.com/mcansh/vercel-fish-theme\nomf theme vercel-fish-theme\n```\n\n","repository_updated":0},"will":{"name":"will","description":"","image":"https://cloud.githubusercontent.com/assets/143746/6462675/60d171fe-c1ab-11e4-9434-8718a2139c79.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-will","license":"MIT","dependencies":[],"stars":2,"forks":3,"watchers":2,"issues":0,"updated":1621735609,"full_description":"## Will\nMinimalist theme.\n\n![Screenshot](https://cloud.githubusercontent.com/assets/143746/6462675/60d171fe-c1ab-11e4-9434-8718a2139c79.png)\n\n#### Characteristics\n* The current working directory is displayed on the right-side\n* Hostnames are displayed if and only if we're on an SSH connection\n* Uses logical entailment as the prompt character\n","repository_updated":0},"yimmy":{"name":"yimmy","description":"A simple two-line omf theme with support for terminals configured with Solarized Dark colors.","image":"https://cloud.githubusercontent.com/assets/2502736/3245408/32c42cde-f172-11e3-8ba3-912191222a11.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-yimmy","license":"MIT","dependencies":[],"stars":5,"forks":7,"watchers":5,"issues":0,"updated":1649408657,"full_description":"## yimmy theme\n\nA simple two-line theme with support for terminals configured with Solarized\nDark colors.\n\n    user@host ~/c/w/dir (branch *)\n    \u003e\n\n![Screenshot](https://cloud.githubusercontent.com/assets/2502736/3245408/32c42cde-f172-11e3-8ba3-912191222a11.png)\n\n### Characteristics:\n\n- Standard fish prompt characters: \u003e for user, # for root\n- Uses the fish `prompt_pwd`, so paths will be abbreviated\n- Uses built-in `__fish_git_prompt` functionality\n- Indicates Git work-in-progress (gwip/gunwip) if detected\n- Prompt character is colored red if previous command had a non-zero exit\n  status\n- Includes complementary `LS_COLORS`\n\n### Configuration:\n\n- Disable Solarized colors in prompt with: `set -U yimmy_solarized false`\n","repository_updated":0},"zephyr":{"name":"zephyr","description":"Rapid, minimalistic theme for Oh My Fish","image":"https://raw.githubusercontent.com/komarnitskyi/theme-zephyr/master//screenshot.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":["fish-shell","oh-my-fish","oh-my-fish-theme"],"author":"komarnitskyi","repository":"https://github.com/komarnitskyi/theme-zephyr","license":"MIT","dependencies":[],"stars":18,"forks":5,"watchers":18,"issues":0,"updated":1671574553,"full_description":"\u003cimg src=\"https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg\" align=\"left\" width=\"144px\" height=\"144px\"/\u003e\n\n#### zephyr\n\u003e A theme for [Oh My Fish][omf-link].\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE)\n[![Fish Shell Version](https://img.shields.io/badge/fish-v2.2.0-007EC7.svg?style=flat-square)](https://fishshell.com)\n[![Oh My Fish Framework](https://img.shields.io/badge/Oh%20My%20Fish-Framework-007EC7.svg?style=flat-square)](https://www.github.com/oh-my-fish/oh-my-fish)\n\n\u003cbr/\u003e\n\n\n## Install\n\n```fish\nomf install https://github.com/komarnitskyi/theme-zephyr\nomf theme zephyr\n```\n\n## Requirements\n* [fishshell](https://fishshell.com/) \u003e v2.3\n* [oh-my-fish](https://fishshell.com/) \u003e v5\n\n## Update\n\n```fish\nomf update zephyr\n```\n\n\n## Features\n\n* Displays git information in the command prompt when available.\n* Displays node version when available\n* Indicate is User has superpower:\n  * ```➜``` - default prompt\n  * ```$``` - with SU power\n\n\n\n## Screenshot\n\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"/screenshot.png\"\u003e\n\u003c/p\u003e\n\n\n# License\n\n[MIT][mit] © [Andrii Komarnitskyi][author] et [al][contributors]\n\n\n[mit]:            https://opensource.org/licenses/MIT\n[author]:         https://github.com/komarnitskyi\n[contributors]:   https://github.com/komarnitskyi/theme-zephyr/graphs/contributors\n[omf-link]:       https://www.github.com/oh-my-fish/oh-my-fish\n\n[license-badge]:  https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square\n","repository_updated":0},"zish":{"name":"zish","description":"","image":"https://raw.githubusercontent.com/oh-my-fish/theme-zish/master/zish_preview.png","latest_version":{"version":"","description":"","commit_hash":"","release_date":0},"versions":[],"tags":[],"author":"oh-my-fish","repository":"https://github.com/oh-my-fish/theme-zish","license":"MIT","dependencies":[],"stars":2,"forks":3,"watchers":2,"issues":0,"updated":1667589213,"full_description":"# Zish\n\nZhishen Wen's simple fun theme =)\n\n![zish](./zish_preview.png)\n\n## Left prompt\nUser, host, abbreviated path, and git branch info\n\n## Right prompt\nExit code and time\n\nEnjoy!\n","repository_updated":0}}}